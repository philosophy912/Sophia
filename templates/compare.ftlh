# -------------------------------------------------------------------------------
# Name:        ${fileName}.py
# Purpose:     The file is automatically generated by tools.
# Author:      CD QA Team
# Created:     ${createDate}
# -------------------------------------------------------------------------------
import pytest
from time import sleep
from src.codes.context import *


########################################################################################################################
#                                                                                                                      #
#                                                    创建Suite                                                          #
#                                                                                                                      #
########################################################################################################################
@pytest.fixture(scope="class", autouse=True)
@allure.suite("创建${testcase.moduleName}测试套件")
def suite():
    with allure.step("${testcase.suite.second.first}"):
        pass
    yield suite
    with allure.step("${testcase.suite.second.second}"):
        pass


########################################################################################################################
#                                                                                                                      #
#                                                    创建Function                                                       #
#                                                                                                                      #
########################################################################################################################
@pytest.fixture(scope="function", autouse=True)
def function():
    with allure.step("${testcase.function.second.first}"):
        pass
    yield
    with allure.step("${testcase.function.second.second}"):
        pass


########################################################################################################################
#                                                                                                                      #
#                                                    创建测试用例                                                        #
#                                                                                                                      #
########################################################################################################################
@allure.feature("module")
@pytest.mark.usefixtures("suite")
class Test${testcase.moduleName?cap_first}(object):
<#list testcase.testcases as tc>

    @pytest.mark.usefixtures("function")
    @allure.title("${tc.description}")
    def test_${tc.name?lower_case}_compare(self):
        """
        Description:
        <#list tc.comments as line>
            ${line}
        </#list>
        PreCondition:
        <#list tc.preConditionDescription as line>
            ${line}
        </#list>
        Steps:
        <#list tc.stepsDescription as line>
            ${line}
        </#list>
        Expect Result:
        <#list tc.expectDescription as line>
            ${line}
        </#list>
        """
        # 前置条件
        with allure.step("前置条件"):
            pass
        # 执行步骤
        with allure.step('操作步骤'):
            pass
        # 期望结果
        with allure.step('期望结果'):
        <#list tc.expect as line>
        <#if line=="stack">
            stack = can_service.get_stack()
        <#elseif line=="lost">
            can_service.stop_transmit()
        <#elseif line=="clear">
            can_service.clear_stack_data()
        <#elseif line?starts_with("sleep")>
            ${line?lower_case}
        </#if>
        <#if line!="stack" && line!="pass" && line!="clear" && !line?starts_with("sleep")>
            compare(${line?lower_case})
        </#if>
        </#list>
</#list>
