# -*- coding:utf-8 -*-
# -------------------------------------------------------------------------------
#  Copyright (C), 2016-2020, China TSP, All rights reserved
# -------------------------------------------------------------------------------
# Name:        ${fileName}.py
# Purpose:     The file is automatically generated by tools.
# Author:      CD QA Team
# Created:     ${createDate}
# -------------------------------------------------------------------------------
import os
import sys
import allure
import pytest
from time import sleep

from automotive import Utils
from ${projectName}.can.director import Director
from ${projectName}.logger import logger

common_path = Utils.get_folder_path("common", "src", os.getcwd())
sys.path.append(common_path)

from logger import logger
from port import port

result_path = Utils.get_folder_path("result", "src", os.getcwd())
save_path = "\\".join([result_path, "screenshot"])
report_path = "\\".join([result_path, "report"])
template_path = "\\".join([result_path, "template"])
paths = save_path, report_path, template_path

tester = Director(port=port, paths=paths)


@pytest.fixture(scope='class', autouse=True)
@allure.suite('创建测试套件')
def suite():
<#list suites as function>
    <#if function.first?upper_case == "CONDITION">
        tester.conditions.${function.second?lower_case}(<#if function.third??><#list function.third as param><#noparse>"</#noparse>${param}<#noparse>"</#noparse><#if param_index != function.third?size -1>, </#if></#list></#if>)
    <#elseif function.first?upper_case == "ACTION">
        tester.actions.${function.second?lower_case}(<#if function.third??><#list function.third as param><#noparse>"</#noparse>${param}<#noparse>"</#noparse><#if param_index != function.third?size -1>, </#if></#list></#if>)
    <#elseif function.first?upper_case == "SLEEP">
        sleep(${function.second})
    <#elseif function.first?upper_case == "CLEAR">
        tester.service.clear_stack_data()
    <#elseif function.first?upper_case == "LOST">
        tester.service.stop_transmit()
    <#elseif function.first?upper_case == "PAUSE">
        tester.service.stop_transmit(${function.second})
    <#elseif function.first?upper_case == "RESUME">
        <#if function.second??>
        tester.service.stop_transmit(${function.second})
        <#else>
        tester.service.stop_transmit()
        </#if>
    <#elseif function.first?upper_case == "CLICK">
        tester.screen_shot_action.${function.second}()
    <#elseif function.first?upper_case == "SLIDE">
        tester.screen_shot_action.${function.second}()
    <#elseif function.first?upper_case == "PRESS">
        tester.screen_shot_action.${function.second}()
    <#elseif  function.first?upper_case == "SERVICE">
        tester.service.${function.second?lower_case}(<#if function.third??><#list function.third as param><#noparse>"</#noparse>${param}<#noparse>"</#noparse><#if param_index != function.third?size -1>, </#if></#list></#if>)
    <#elseif  function.first?upper_case == "SCREENSHOT">
        tester.screen_shot.${function.second?lower_case}(<#if function.third??><#list function.third as param><#noparse>"</#noparse>${param}<#noparse>"</#noparse><#if param_index != function.third?size -1>, </#if></#list></#if>)
    <#elseif  function.first?upper_case == "YIELD">
    yield suite
    <#elseif function.first?upper_case == "TEXT">
    with allure.step('${function.second}'):
    <#elseif function.first?upper_case ==  "PASS">
        pass
    </#if>
</#list>


<#if functions??>
@pytest.fixture(scope="function", autouse=True)
def function():
<#list functions as function>
    <#if function.first?upper_case == "CONDITION">
    tester.conditions.${function.second?lower_case}(<#if function.third??><#list function.third as param><#noparse>"</#noparse>${param}<#noparse>"</#noparse><#if param_index != function.third?size -1>, </#if></#list></#if>)
    <#elseif function.first?upper_case == "ACTION">
    tester.actions.${function.second?lower_case}(<#if function.third??><#list function.third as param><#noparse>"</#noparse>${param}<#noparse>"</#noparse><#if param_index != function.third?size -1>, </#if></#list></#if>)
    <#elseif function.first?upper_case == "SLEEP">
    sleep(${function.second})
    <#elseif function.first?upper_case == "CLEAR">
    tester.service.clear_stack_data()
    <#elseif function.first?upper_case == "LOST">
    tester.service.stop_transmit()
    <#elseif function.first?upper_case == "PAUSE">
    tester.service.stop_transmit(${function.second})
    <#elseif function.first?upper_case == "RESUME">
        <#if function.second??>
    tester.service.stop_transmit(${function.second})
        <#else>
    tester.service.stop_transmit()
        </#if>
    <#elseif function.first?upper_case == "CLICK">
    tester.screen_shot_action.${function.second?lower_case}(<#if function.third??><#list function.third as param><#noparse>"</#noparse>${param}<#noparse>"</#noparse><#if param_index != function.third?size -1>, </#if></#list></#if>)
    <#elseif function.first?upper_case == "SLIDE">
    tester.screen_shot_action.${function.second?lower_case}(<#if function.third??><#list function.third as param><#noparse>"</#noparse>${param}<#noparse>"</#noparse><#if param_index != function.third?size -1>, </#if></#list></#if>)
    <#elseif function.first?upper_case == "PRESS">
    tester.screen_shot_action.${function.second?lower_case}(<#if function.third??><#list function.third as param><#noparse>"</#noparse>${param}<#noparse>"</#noparse><#if param_index != function.third?size -1>, </#if></#list></#if>)
    <#elseif  function.first?upper_case == "SERVICE">
    tester.service.${function.second?lower_case}(<#if function.third??><#list function.third as param><#noparse>"</#noparse>${param}<#noparse>"</#noparse><#if param_index != function.third?size -1>, </#if></#list></#if>)
    <#elseif  function.first?upper_case == "YIELD">
    yield
    <#elseif function.first?upper_case ==  "PASS">
    pass
    </#if>
</#list>
</#if>


@allure.feature('${objects[0].category?lower_case}')
@pytest.mark.usefixtures("suite")
class Test${objects[0].category?cap_first}(object):
<#list objects as testcase>

    <#if functions??>@pytest.mark.usefixtures("function")</#if>
    @allure.title("${testcase.description}")
    def test_${testcase.functionName?lower_case}(self):
        """
        Description:
            ${testcase.description}
        PreCondition:
            <#list testcase.preCondition as description>
            ${description}
            </#list>
        Steps:
            <#list testcase.steps as step>
            ${step}
            </#list>
        Expect Result:
            <#list testcase.expect as expect>
            ${expect}
            </#list>
        """
        # 前置条件
        with allure.step('前置条件'):
        <#list testcase.preConditionFunctions as function>
            <#if function.first?upper_case == "CONDITION">
            tester.conditions.${function.second?lower_case}(<#if function.third??><#list function.third as param><#noparse>"</#noparse>${param}<#noparse>"</#noparse><#if param_index != function.third?size -1>, </#if></#list></#if>)
            <#elseif function.first?upper_case == "ACTION">
            tester.actions.${function.second?lower_case}(<#if function.third??><#list function.third as param><#noparse>"</#noparse>${param}<#noparse>"</#noparse><#if param_index != function.third?size -1>, </#if></#list></#if>)
            <#elseif function.first?upper_case == "SLEEP">
            sleep(${function.second})
            <#elseif function.first?upper_case == "CLEAR">
            tester.service.clear_stack_data()
            <#elseif function.first?upper_case == "LOST">
            tester.service.stop_transmit()
            <#elseif function.first?upper_case == "PAUSE">
            tester.service.stop_transmit(${function.second})
            <#elseif function.first?upper_case == "RESUME">
                <#if function.second??>
            tester.service.stop_transmit(${function.second})
                <#else>
            tester.service.stop_transmit()
                </#if>
            <#elseif function.first?upper_case == "CLICK">
            tester.screen_shot_action.${function.second?lower_case}(<#if function.third??><#list function.third as param><#noparse>"</#noparse>${param}<#noparse>"</#noparse><#if param_index != function.third?size -1>, </#if></#list></#if>)
            <#elseif function.first?upper_case == "SLIDE">
            tester.screen_shot_action.${function.second?lower_case}(<#if function.third??><#list function.third as param><#noparse>"</#noparse>${param}<#noparse>"</#noparse><#if param_index != function.third?size -1>, </#if></#list></#if>)
            <#elseif function.first?upper_case == "PRESS">
            tester.screen_shot_action.${function.second?lower_case}(<#if function.third??><#list function.third as param><#noparse>"</#noparse>${param}<#noparse>"</#noparse><#if param_index != function.third?size -1>, </#if></#list></#if>)
            </#if>
        </#list>
            sleep(2)
        # 执行步骤
        with allure.step('操作步骤'):
        <#list testcase.stepsFunctions as function>
            <#if function.first?upper_case == "CONDITION">
            tester.conditions.${function.second?lower_case}(<#if function.third??><#list function.third as param><#noparse>"</#noparse>${param}<#noparse>"</#noparse><#if param_index != function.third?size -1>, </#if></#list></#if>)
            <#elseif function.first?upper_case == "ACTION">
            tester.actions.${function.second?lower_case}(<#if function.third??><#list function.third as param><#noparse>"</#noparse>${param}<#noparse>"</#noparse><#if param_index != function.third?size -1>, </#if></#list></#if>)
            <#elseif function.first?upper_case == "SLEEP">
            sleep(${function.second})
            <#elseif function.first?upper_case == "CLEAR">
            tester.service.clear_stack_data()
            <#elseif function.first?upper_case == "LOST">
            tester.service.stop_transmit()
            <#elseif function.first?upper_case == "PAUSE">
            tester.service.stop_transmit(${function.second})
            <#elseif function.first?upper_case == "RESUME">
                <#if function.second!>
            tester.service.stop_transmit(${function.second})
                <#else>
            tester.service.stop_transmit()
                </#if>
            <#elseif function.first?upper_case == "CLICK">
            tester.screen_shot_action.${function.second?lower_case}(<#if function.third??><#list function.third as param><#noparse>"</#noparse>${param}<#noparse>"</#noparse><#if param_index != function.third?size -1>, </#if></#list></#if>)
            <#elseif function.first?upper_case == "SLIDE">
            tester.screen_shot_action.${function.second?lower_case}(<#if function.third??><#list function.third as param><#noparse>"</#noparse>${param}<#noparse>"</#noparse><#if param_index != function.third?size -1>, </#if></#list></#if>)
            <#elseif function.first?upper_case == "PRESS">
            tester.screen_shot_action.${function.second?lower_case}(<#if function.third??><#list function.third as param><#noparse>"</#noparse>${param}<#noparse>"</#noparse><#if param_index != function.third?size -1>, </#if></#list></#if>)
            </#if>
        </#list>
            sleep(2)
        # 期望结果
        with allure.step('期望结果'):
            stack = tester.service.get_stack()
            <#list testcase.canCompares as function>
            assert tester.service.check_signal_value(stack, ${function.messageId}, "${function.signalName}", ${function.signalValue}<#if function.frameCount??>, ${function.frameCount}, exact=${function.exact?string("True", "False")}</#if>)
            </#list>
</#list>