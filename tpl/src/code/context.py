# -------------------------------------------------------------------------------
# Name:        context.py
# Purpose:     The file is automatically generated by tools.
# Author:      CD QA Team
# Created:     2020-10-09 16:47
# -------------------------------------------------------------------------------
import os

from automotive import *
from src.code.configure import *


interval_time = 0.5


class Tester(object):
    def __init__(self):
        # 用于存放保存的内容
        self.save_data = dict()
        self.curve = Curve()
        top_folder = os.path.dirname(os.getcwd())
        resource = "\\".join([top_folder, "resources"])
        # DBC解析出来的文件的路径
        self.dbc = "\\".join([resource, "dbc", dbc_json])
        # 模板图片存放路径
        self.templates = "\\".join([resource, "templates"])
        # 截图图片存放路径
        self.screenshot = "\\".join([resource, "result", "screenshot"])
        # 临时文件存放路径
        self.temp = "\\".join([resource, "result", "screenshot"])

        self.image_compare = ImageCompare()
        self.it6831 = None
        self.konstanter = None
        self.can_service = None
        self.android_service = None
        self.relay = None
        self.air_condition = None
        self.soc = None
        self.mcu = None

        if it6831_serial_baud_rate and it6831_serial_port:
            self.it6831 = It6831Actions(port=it6831_serial_baud_rate, baud_rate=it6831_serial_port)
            logger.info(f"it6831 is initialization")
        if konstanter_serial_port and konstanter_serial_baud_rate:
            self.konstanter = KonstanterActions(port=konstanter_serial_port, baud_rate=konstanter_serial_baud_rate)
            logger.info(f"konstanter is initialization")
        if dbc_json:
            self.can_service = CANService(self.dbc)
            logger.info(f"can_service is initialization")
        if android_automation_type:
            self.android_service = AndroidService(ToolTypeEnum.from_value(android_automation_type))
            logger.info(f"android_service is initialization")
        if max_relay_channel:
            self.relay = RelayActions()
            logger.info(f"relay is initialization")
        if test_case_type == "空调屏" and air_condition_port and air_condition_baud_rate:
            self.air_condition = AirCondition(qnx_screen_shot_path, air_condition_port)
            logger.info(f"air_condition is initialization")
        if soc_serial_port and soc_serial_baud_rate:
            self.soc = SerialPort()
            logger.info(f"soc is initialization")
        if mcu_serial_port and mcu_serial_baud_rate:
            self.mcu = SerialPort()
            logger.info(f"mcu is initialization")

    def open_device(self):
        if self.it6831:
            self.it6831.open()
        if self.konstanter:
            self.konstanter.open()
        if self.android_service:
            if android_automation_type == "appium":
                capability = {
                    "deviceName": android_device_id,
                    "platformVersion": android_version,
                    "platformName": "Android",
                    "automationName": "UiAutomator2",
                    "appPackage": android_app_package,
                    "appActivity": android_app_activity
                }
                self.android_service.connect(android_device_id, capability)
            else:
                self.android_service.connect(android_device_id)
        if self.can_service:
            self.can_service.open_can()
        if self.relay:
            self.relay.open()
        if self.air_condition:
            self.air_condition.connect()
        if self.mcu:
            self.mcu.connect(mcu_serial_port, mcu_serial_baud_rate)
        if self.soc:
            self.soc.connect(soc_serial_port, soc_serial_baud_rate)

    def close_device(self):
        if self.it6831:
            self.it6831.close()
        if self.konstanter:
            self.konstanter.close()
        if self.android_service:
            self.android_service.disconnect()
        if self.can_service:
            self.can_service.close_can()
        if self.relay:
            self.relay.close()
        if self.air_condition:
            self.air_condition.disconnect()

    ####################################################################################################################
    #                                                                                                                  #
    #                                           用于生成表格 --> 屏幕操作(ScreenOpsAction)                                #
    #                                                                                                                  #
    ####################################################################################################################

    def ops_show_dropdown_menu(self):
        """
        下拉菜单显示
        """
        self.air_condition.swipe(display=1, start_x=622, start_y=622, end_x=1, end_y=385, continue_time=1.0)

    def ops_hidden_dropdown_menu(self):
        """
        下拉菜单隐藏
        """
        self.air_condition.swipe(display=1, start_x=622, start_y=622, end_x=385, end_y=1, continue_time=1.0)

    def ops_start_button(self):
        """
        点击一键启动按钮
        """
        self.air_condition.click(display=1, x=642, y=639)

    def ops_slide_up_blow(self):
        """
        风量增加
        """
        self.air_condition.swipe(display=1, start_x=641, start_y=641, end_x=320, end_y=383, continue_time=1.0)

    def ops_slide_down_blow(self):
        """
        风量减少
        """
        self.air_condition.swipe(display=1, start_x=641, start_y=641, end_x=383, end_y=320, continue_time=1.0)

    def ops_slide_up_left_temperature(self):
        """
        左侧温度调节增加
        """
        self.air_condition.swipe(display=1, start_x=401, start_y=401, end_x=326, end_y=397, continue_time=1.0)

    def ops_slide_down_left_temperature(self):
        """
        左侧温度调节减少
        """
        self.air_condition.swipe(display=1, start_x=401, start_y=401, end_x=397, end_y=326, continue_time=1.0)

    def ops_slide_up_right_temperature(self):
        """
        右侧温度调节增加
        """
        self.air_condition.swipe(display=1, start_x=848, start_y=848, end_x=322, end_y=400, continue_time=1.0)

    def ops_slide_down_right_temperature(self):
        """
        右侧温度调节减少
        """
        self.air_condition.swipe(display=1, start_x=848, start_y=848, end_x=400, end_y=322, continue_time=1.0)

    def ops_slide_up_rearrear_left_temperature(self):
        """
        三排左侧温度增加
        """
        self.air_condition.swipe(display=1, start_x=401, start_y=401, end_x=326, end_y=397, continue_time=1.0)

    def ops_slide_up_rearrear_right_temperature(self):
        """
        三排右侧温度增加
        """
        self.air_condition.swipe(display=1, start_x=848, start_y=848, end_x=322, end_y=400, continue_time=1.0)

    def ops_driver_feet(self):
        """
        点击驾驶员侧吹脚
        """
        self.air_condition.click(display=1, x=271, y=482)

    def ops_passenger_feet(self):
        """
        点击副驾驶员侧吹脚
        """
        self.air_condition.click(display=1, x=1004, y=474)

    def ops_front_defrost_button(self):
        """
        前除霜按钮
        """
        self.air_condition.click(display=1, x=267, y=96)

    def ops_rear_defrost_button(self):
        """
        后除霜按钮
        """
        self.air_condition.click(display=1, x=454, y=95)

    def ops_driver_auto(self):
        """
        驾驶侧auto
        """
        self.air_condition.click(display=1, x=243, y=562)

    def ops_passenger_auto(self):
        """
        副驾驶侧auto
        """
        self.air_condition.click(display=1, x=1037, y=562)

    def ops_cycle_button(self):
        """
        内循环按钮
        """
        self.air_condition.click(display=1, x=639, y=95)

    def ops_off_button(self):
        """
        off按钮
        """
        self.air_condition.click(display=1, x=416, y=563)

    def ops_sync_button(self):
        """
        sync按钮
        """
        self.air_condition.click(display=1, x=861, y=560)

    def ops_vent_button(self):
        """
        vent自然通风按钮
        """
        self.air_condition.click(display=1, x=824, y=94)

    def ops_pm25_less(self):
        """
        长按PM2.5小于2秒
        """
        self.air_condition.press(display=1, x=1011, y=99, continue_time=1.0)

    def ops_pm25_more(self):
        """
        按下PM2.5大于2秒
        """
        self.air_condition.press(display=1, x=1011, y=99, continue_time=3.0)

    def ops_pm25_button(self):
        """
        按下PM2.5按钮
        """
        self.air_condition.click(display=1, x=1011, y=99)

    def ops_first_seat_button(self):
        """
        一排座椅
        """
        self.air_condition.click(display=1, x=551, y=494)

    def ops_second_seat_button(self):
        """
        二排座椅
        """
        self.air_condition.click(display=1, x=645, y=493)

    def ops_third_seat_button(self):
        """
        三排座椅
        """
        self.air_condition.click(display=1, x=731, y=493)

    def ops_air_condition_off(self):
        """
        三排空调关闭
        """
        self.air_condition.click(display=1, x=419, y=559)

    def ops_driver_seat(self):
        """
        主驾座椅
        """
        self.air_condition.click(display=1, x=80, y=554)

    def ops_passenger_seat(self):
        """
        副驾座椅
        """
        self.air_condition.click(display=1, x=1213, y=562)

    def ops_driver_vent(self):
        """
        主驾座椅通风
        """
        self.air_condition.click(display=1, x=375, y=155)

    def ops_passenger_vent(self):
        """
        副驾座椅通风
        """
        self.air_condition.click(display=1, x=907, y=154)

    def ops_driver_heat(self):
        """
        主驾座椅加热
        """
        self.air_condition.click(display=1, x=599, y=158)

    def ops_passenger_heat(self):
        """
        副驾座椅加热
        """
        self.air_condition.click(display=1, x=679, y=158)

    def ops_wheel_heating(self):
        """
        方向盘加热
        """
        self.air_condition.click(display=1, x=81, y=97)

    def ops_trunk_button(self):
        """
        后备箱按钮
        """
        self.air_condition.press(display=1, x=93, y=674, continue_time=2.0)

    def ops_adv_park_button(self):
        """
        自动泊车按钮
        """
        self.air_condition.click(display=1, x=806, y=678)

    def ops_amp_button(self):
        """
        AMP开关
        """
        self.air_condition.click(display=1, x=134, y=294)

    def ops_avm_button(self):
        """
        AVM开关（360环视)
        """
        self.air_condition.click(display=1, x=285, y=670)

    def ops_avp_button(self):
        """
        代客泊车按钮
        """
        self.air_condition.click(display=1, x=479, y=675)

    def ops_fragrance_hongqi(self):
        """
        红旗模式
        """
        self.air_condition.click(display=1, x=479, y=675)

    def ops_fragrance_smart(self):
        """
        智能模式
        """
        self.air_condition.click(display=1, x=479, y=675)

    def ops_fragrance_refresh(self):
        """
        提神醒脑
        """
        self.air_condition.click(display=1, x=479, y=675)

    def ops_fragrance_comfortable(self):
        """
        舒心驾驶
        """
        self.air_condition.click(display=1, x=479, y=675)

    def ops_fragrance_surprise(self):
        """
        惊喜香氛
        """
        self.air_condition.click(display=1, x=479, y=675)

    def ops_children_mode(self):
        """
        儿童模式
        """
        self.air_condition.click(display=1, x=134, y=116)

    def ops_smoke_mode(self):
        """
        雾霾模式
        """
        self.air_condition.click(display=1, x=540, y=117)

    def ops_haze_mode(self):
        """
        吸烟模式
        """
        self.air_condition.click(display=1, x=338, y=115)

    def ops_leisure_mode(self):
        """
        休闲模式
        """
        self.air_condition.click(display=1, x=732, y=114)

    def ops_refresh_mode(self):
        """
        提神模式
        """
        self.air_condition.click(display=1, x=938, y=116)

    def ops_sleep_mode(self):
        """
        小憩模式
        """
        self.air_condition.click(display=1, x=1140, y=110)

    def ops_concentration_level_low(self):
        """
        低
        """
        self.air_condition.click(display=1, x=479, y=675)

    def ops_concentration_level_middle(self):
        """
        中
        """
        self.air_condition.click(display=1, x=479, y=675)

    def ops_concentration_level_high(self):
        """
        高
        """
        self.air_condition.click(display=1, x=479, y=675)

    def ops_fragrance_time_1(self):
        """
        1分钟
        """
        self.air_condition.click(display=1, x=479, y=675)

    def ops_fragrance_time_3(self):
        """
        2分钟
        """
        self.air_condition.click(display=1, x=479, y=675)

    def ops_fragrance_time_10(self):
        """
        10分钟
        """
        self.air_condition.click(display=1, x=479, y=675)

    def ops_black_area(self):
        """
        空白区域
        """
        self.air_condition.click(display=1, x=1216, y=170)

    def ops_slide_menu(self):
        """
        59
        """
        self.air_condition.swipe(display=1, start_x=553, start_y=553, end_x=28, end_y=400, continue_time=2.0)

    def ops_click_esc(self):
        """
        60
        """
        self.air_condition.click(display=1, x=1181, y=679)

    def ops_click_hdc(self):
        """
        61
        """
        self.air_condition.click(display=1, x=991, y=680)

    def ops_click_front_ac(self):
        """
        62
        """
        self.air_condition.click(display=1, x=548, y=495)

    def ops_click_rear_ac(self):
        """
        63
        """
        self.air_condition.click(display=1, x=640, y=495)

    def ops_click_rearrear_ac(self):
        """
        64
        """
        self.air_condition.click(display=1, x=730, y=492)

    def ops_silde_blowlevel_add(self):
        """
        65
        """
        self.air_condition.swipe(display=1, start_x=641, start_y=641, end_x=325, end_y=385, continue_time=1.0)

    def ops_silde_blowlevel_sub(self):
        """
        66
        """
        self.air_condition.swipe(display=1, start_x=641, start_y=641, end_x=383, end_y=320, continue_time=1.0)

    def ops_silde_drivertemp_add(self):
        """
        67
        """
        self.air_condition.swipe(display=1, start_x=401, start_y=401, end_x=326, end_y=397, continue_time=1.0)

    def ops_silde_passengertemp_add(self):
        """
        68
        """
        self.air_condition.swipe(display=1, start_x=848, start_y=848, end_x=322, end_y=400, continue_time=1.0)

    def ops_click_driver_def(self):
        """
        69
        """
        self.air_condition.click(display=1, x=182, y=156)

    def ops_click_driver_face(self):
        """
        70
        """
        self.air_condition.click(display=1, x=150, y=373)

    def ops_click_driver_foot(self):
        """
        71
        """
        self.air_condition.click(display=1, x=275, y=474)

    def ops_press_driver_def(self):
        """
        72
        """
        self.air_condition.press(display=1, x=182, y=156, continue_time=0.05)

    def ops_press_driver_face(self):
        """
        73
        """
        self.air_condition.press(display=1, x=150, y=373, continue_time=0.05)

    def ops_press_driver_foot(self):
        """
        74
        """
        self.air_condition.press(display=1, x=275, y=474, continue_time=0.05)

    def ops_click_passenger_face(self):
        """
        75
        """
        self.air_condition.click(display=1, x=1124, y=368)

    def ops_click_passenger_foot(self):
        """
        76
        """
        self.air_condition.click(display=1, x=997, y=474)

    def ops_click_def_mode(self):
        """
        77
        """
        self.air_condition.click(display=1, x=262, y=95)

    def ops_click_fl_auto_mode(self):
        """
        78
        """
        self.air_condition.click(display=1, x=243, y=563)

    def ops_click_fr_auto_mode(self):
        """
        79
        """
        self.air_condition.click(display=1, x=1035, y=561)

    def ops_click_ac_switch(self):
        """
        80
        """
        self.air_condition.click(display=1, x=413, y=562)

    def ops_click_frsrec_mode(self):
        """
        81
        """
        self.air_condition.click(display=1, x=641, y=95)

    def ops_click_sync_mode(self):
        """
        82
        """
        self.air_condition.click(display=1, x=859, y=564)

    def ops_click_naturalair_mode(self):
        """
        83
        """
        self.air_condition.click(display=1, x=827, y=95)

    def ops_click_rear_auto_mode_1(self):
        """
        84
        """
        self.air_condition.click(display=1, x=858, y=563)

    def ops_click_rear_face_1(self):
        """
        85
        """
        self.air_condition.click(display=1, x=151, y=370)

    def ops_silde_rear_blowlevel_add_1(self):
        """
        86
        """
        self.air_condition.swipe(display=1, start_x=642, start_y=642, end_x=255, end_y=318, continue_time=1.0)

    def ops_silde_rearleft_temp_add_1(self):
        """
        87
        """
        self.air_condition.swipe(display=1, start_x=411, start_y=411, end_x=255, end_y=318, continue_time=1.0)

    def ops_silde_rearright_temp_add_1(self):
        """
        88
        """
        self.air_condition.swipe(display=1, start_x=861, start_y=861, end_x=255, end_y=318, continue_time=1.0)

    def ops_click_ion(self):
        """
        89
        """
        self.air_condition.click(display=1, x=1198, y=98)

    def ops_click_pm25(self):
        """
        90
        """
        self.air_condition.click(display=1, x=1010, y=93)

    def ops_press_pm25(self):
        """
        91
        """
        self.air_condition.press(display=1, x=1010, y=93, continue_time=3.0)

    def ops_click_fl_seat(self):
        """
        92
        """
        self.air_condition.click(display=1, x=79, y=565)

    def ops_click_fl_seat_vent(self):
        """
        93
        """
        self.air_condition.click(display=1, x=370, y=156)

    def ops_click_fl_seat_heat(self):
        """
        94
        """
        self.air_condition.click(display=1, x=600, y=160)

    def ops_click_fl_butterfly_massage(self):
        """
        95
        """
        self.air_condition.click(display=1, x=825, y=332)

    def ops_click_fl_snake_massage(self):
        """
        96
        """
        self.air_condition.click(display=1, x=595, y=333)

    def ops_click_fl_wave_massage(self):
        """
        97
        """
        self.air_condition.click(display=1, x=370, y=332)

    def ops_press_fl_seat_memory_1(self):
        """
        98
        """
        self.air_condition.press(display=1, x=371, y=483, continue_time=2.5)

    def ops_click_fl_seat_memory_2(self):
        """
        99
        """
        self.air_condition.press(display=1, x=596, y=487, continue_time=2.5)

    def ops_click_fl_seat_memory_3(self):
        """
        100
        """
        self.air_condition.press(display=1, x=828, y=486, continue_time=2.5)

    def ops_click_fr_seat(self):
        """
        101
        """
        self.air_condition.click(display=1, x=1202, y=561)

    def ops_click_fr_seat_vent(self):
        """
        102
        """
        self.air_condition.click(display=1, x=678, y=158)

    def ops_click_fr_seat_heat(self):
        """
        103
        """
        self.air_condition.click(display=1, x=904, y=155)

    def ops_click_fr_butterfly_massage(self):
        """
        104
        """
        self.air_condition.click(display=1, x=910, y=324)

    def ops_click_fr_snake_massage(self):
        """
        105
        """
        self.air_condition.click(display=1, x=683, y=333)

    def ops_click_fr_wave_massage(self):
        """
        106
        """
        self.air_condition.click(display=1, x=456, y=340)

    def ops_click_fr_seat_memory_1(self):
        """
        107
        """
        self.air_condition.press(display=1, x=455, y=471, continue_time=2.5)

    def ops_click_fr_seat_memory_2(self):
        """
        108
        """
        self.air_condition.press(display=1, x=687, y=466, continue_time=2.5)

    def ops_click_fr_seat_memory_3(self):
        """
        109
        """
        self.air_condition.press(display=1, x=910, y=467, continue_time=2.5)

    def ops_click_france_error_sure_button(self):
        """
        110
        """
        self.air_condition.click(display=1, x=639, y=463)

    def ops_click_rearwindow_heat(self):
        """
        111
        """
        self.air_condition.click(display=1, x=452, y=92)

    def ops_click_steeringwheel_heat(self):
        """
        112
        """
        self.air_condition.click(display=1, x=75, y=96)

    def ops_press_luggagedoor(self):
        """
        113
        """
        self.air_condition.click(display=1, x=94, y=681)

    def ops_click_fragrance_hongqi_mode(self):
        """
        114
        """
        self.air_condition.click(display=1, x=335, y=118)

    def ops_click_fragrance_calm_mode(self):
        """
        115
        """
        self.air_condition.click(display=1, x=335, y=118)

    def ops_click_fragrance_refresh_mode(self):
        """
        116
        """
        self.air_condition.click(display=1, x=536, y=117)

    def ops_click_fragrance_user_defined_mode(self):
        """
        117
        """
        self.air_condition.click(display=1, x=940, y=115)

    def ops_click_fragrance_auto_mode(self):
        """
        118
        """
        self.air_condition.click(display=1, x=132, y=117)

    def ops_click_fragrance_concentratio_high(self):
        """
        119
        """
        self.air_condition.click(display=1, x=370, y=289)

    def ops_click_fragrance_time_10min(self):
        """
        120
        """
        self.air_condition.click(display=1, x=997, y=289)

    def ops_press_fr_seat_memory_1(self):
        """
        121
        """
        self.air_condition.press(display=1, x=455, y=471, continue_time=2.5)

    ####################################################################################################################
    #                                                                                                                  #
    #                                           用于生成表格 --> 截图操作(ScreenShotAction)                               #
    #                                                                                                                  #
    ####################################################################################################################

    def screenshot_rear_window_heating_status(self):
        """
        后风窗强制除霜开关高亮
        """
        image_name = f"rear_window_heating_status"
        self.air_condition.screen_shot(image_name=image_name, count=1, interval_time=interval_time, display=1)

    def screenshot_steering_wheel_heat_presevation(self):
        """
        方向盘加热保持中
        """
        image_name = f"steering_wheel_heat_presevation"
        self.air_condition.screen_shot(image_name=image_name, count=1, interval_time=interval_time, display=1)

    def screenshot_steering_wheel_heat_heating(self):
        """
        方向盘加热加热中
        """
        image_name = f"steering_wheel_heat_heating"
        self.air_condition.screen_shot(image_name=image_name, count=1, interval_time=interval_time, display=1)

    def screenshot_one_button_start_off(self):
        """
        一键启动虚拟开关置灰
        """
        image_name = f"one_button_start_off"
        self.air_condition.screen_shot(image_name=image_name, count=1, interval_time=interval_time, display=1)

    def screenshot_back_trunk_of(self):
        """
        后备箱关闭
        """
        image_name = f"back_trunk_of"
        self.air_condition.screen_shot(image_name=image_name, count=1, interval_time=interval_time, display=1)

    def screenshot_luggage_door_manual_on(self):
        """
        弹出关闭中提示框
        """
        image_name = f"luggage_door_manual_on"
        self.air_condition.screen_shot(image_name=image_name, count=1, interval_time=interval_time, display=1)

    def screenshot_luggage_door_manual_off(self):
        """
        关闭中提示框消失
        """
        image_name = f"luggage_door_manual_off"
        self.air_condition.screen_shot(image_name=image_name, count=1, interval_time=interval_time, display=1)

    def screenshot_adv_searchingforpark_in(self):
        """
        APA(自动泊车)高亮开关1
        """
        image_name = f"adv_searchingforpark_in"
        self.air_condition.screen_shot(image_name=image_name, count=1, interval_time=interval_time, display=1)

    def screenshot_adv_searchingforpark_out(self):
        """
        APA(自动泊车)高亮开关2
        """
        image_name = f"adv_searchingforpark_out"
        self.air_condition.screen_shot(image_name=image_name, count=1, interval_time=interval_time, display=1)

    def screenshot_adv_mapupdate(self):
        """
        APA(自动泊车)高亮开关3
        """
        image_name = f"adv_mapupdate"
        self.air_condition.screen_shot(image_name=image_name, count=1, interval_time=interval_time, display=1)

    def screenshot_adv_parkingin(self):
        """
        APA(自动泊车)高亮开关4
        """
        image_name = f"adv_parkingin"
        self.air_condition.screen_shot(image_name=image_name, count=1, interval_time=interval_time, display=1)

    def screenshot_adv_parkingout(self):
        """
        APA(自动泊车)高亮开关5
        """
        image_name = f"adv_parkingout"
        self.air_condition.screen_shot(image_name=image_name, count=1, interval_time=interval_time, display=1)

    def screenshot_adv_driveroverride(self):
        """
        APA(自动泊车)高亮开关6
        """
        image_name = f"adv_driveroverride"
        self.air_condition.screen_shot(image_name=image_name, count=1, interval_time=interval_time, display=1)

    def screenshot_adv_suspended(self):
        """
        APA(自动泊车)高亮开关7
        """
        image_name = f"adv_suspended"
        self.air_condition.screen_shot(image_name=image_name, count=1, interval_time=interval_time, display=1)

    def screenshot_adv_abort(self):
        """
        APA(自动泊车)高亮开关8
        """
        image_name = f"adv_abort"
        self.air_condition.screen_shot(image_name=image_name, count=1, interval_time=interval_time, display=1)

    def screenshot_adv_finish(self):
        """
        APA(自动泊车)高亮开关9
        """
        image_name = f"adv_finish"
        self.air_condition.screen_shot(image_name=image_name, count=1, interval_time=interval_time, display=1)

    def screenshot_adv_error(self):
        """
        APA(自动泊车)高亮开关10
        """
        image_name = f"adv_error"
        self.air_condition.screen_shot(image_name=image_name, count=1, interval_time=interval_time, display=1)

    def screenshot_apa_switch_on(self):
        """
        APA(自动泊车)高亮开关11
        """
        image_name = f"apa_switch_on"
        self.air_condition.screen_shot(image_name=image_name, count=1, interval_time=interval_time, display=1)

    def screenshot_apa_switch_off(self):
        """
        APA开关熄灭
        """
        image_name = f"apa_switch_off"
        self.air_condition.screen_shot(image_name=image_name, count=1, interval_time=interval_time, display=1)

    def screenshot_avm_swtich_on(self):
        """
        AVM开关打开
        """
        image_name = f"avm_swtich_on"
        self.air_condition.screen_shot(image_name=image_name, count=1, interval_time=interval_time, display=1)

    def screenshot_esc_switch_open_ign_on(self):
        """
        打开车身稳定开关
        """
        image_name = f"esc_switch_open_ign_on"
        self.air_condition.screen_shot(image_name=image_name, count=1, interval_time=interval_time, display=1)

    def screenshot_esc_switch_close_ign_on(self):
        """
        关闭车身稳定开关
        """
        image_name = f"esc_switch_close_ign_on"
        self.air_condition.screen_shot(image_name=image_name, count=1, interval_time=interval_time, display=1)

    def screenshot_hdc_switch_open_ign_on(self):
        """
        打开陡坡缓降开关
        """
        image_name = f"hdc_switch_open_ign_on"
        self.air_condition.screen_shot(image_name=image_name, count=1, interval_time=interval_time, display=1)

    def screenshot_hdc_switch_close_ign_on(self):
        """
        关闭陡坡缓降开关
        """
        image_name = f"hdc_switch_close_ign_on"
        self.air_condition.screen_shot(image_name=image_name, count=1, interval_time=interval_time, display=1)

    def screenshot_blowlevel_1_ign_on(self):
        """
        设置前排空调吹风等级为1级
        """
        image_name = f"blowlevel_one_ign_on"
        self.air_condition.screen_shot(image_name=image_name, count=1, interval_time=interval_time, display=1)

    def screenshot_blowlevel_2_ign_on(self):
        """
        设置前排空调吹风等级为2级
        """
        image_name = f"blowlevel_two_ign_on"
        self.air_condition.screen_shot(image_name=image_name, count=1, interval_time=interval_time, display=1)

    def screenshot_blowlevel_3_ign_on(self):
        """
        设置前排空调吹风等级为3级
        """
        image_name = f"blowlevel_three_ign_on"
        self.air_condition.screen_shot(image_name=image_name, count=1, interval_time=interval_time, display=1)

    def screenshot_blowlevel_4_ign_on(self):
        """
        设置前排空调吹风等级为4级
        """
        image_name = f"blowlevel_four_ign_on"
        self.air_condition.screen_shot(image_name=image_name, count=1, interval_time=interval_time, display=1)

    def screenshot_blowlevel_5_ign_on(self):
        """
        设置前排空调吹风等级为5级
        """
        image_name = f"blowlevel_five_ign_on"
        self.air_condition.screen_shot(image_name=image_name, count=1, interval_time=interval_time, display=1)

    def screenshot_blowlevel_6_ign_on(self):
        """
        设置前排空调吹风等级为6级
        """
        image_name = f"blowlevel_six_ign_on"
        self.air_condition.screen_shot(image_name=image_name, count=1, interval_time=interval_time, display=1)

    def screenshot_blowlevel_7_ign_on(self):
        """
        设置前排空调吹风等级为7级
        """
        image_name = f"blowlevel_seven_ign_on"
        self.air_condition.screen_shot(image_name=image_name, count=1, interval_time=interval_time, display=1)

    def screenshot_driver_temp_lo_ign_on(self):
        """
        驾驶员空调温度显示Lo
        """
        image_name = f"driver_temp_lo_ign_on"
        self.air_condition.screen_shot(image_name=image_name, count=1, interval_time=interval_time, display=1)

    def screenshot_driver_temp_18_ign_on(self):
        """
        驾驶员空调温度显示18℃
        """
        image_name = f"driver_temp_oneeight_ign_on"
        self.air_condition.screen_shot(image_name=image_name, count=1, interval_time=interval_time, display=1)

    def screenshot_driver_temp_32_ign_on(self):
        """
        驾驶员空调温度显示32℃
        """
        image_name = f"driver_temp_threetwo_ign_on"
        self.air_condition.screen_shot(image_name=image_name, count=1, interval_time=interval_time, display=1)

    def screenshot_driver_temp_hi_ign_on(self):
        """
        驾驶员空调温度显示Hi
        """
        image_name = f"driver_temp_hi_ign_on"
        self.air_condition.screen_shot(image_name=image_name, count=1, interval_time=interval_time, display=1)

    def screenshot_passenger_temp_lo_ign_on(self):
        """
        前排乘客空调温度显示Lo
        """
        image_name = f"passenger_temp_lo_ign_on"
        self.air_condition.screen_shot(image_name=image_name, count=1, interval_time=interval_time, display=1)

    def screenshot_passenger_temp_18_ign_on(self):
        """
        前排乘客空调温度显示18℃
        """
        image_name = f"passenger_temp_oneeight_ign_on"
        self.air_condition.screen_shot(image_name=image_name, count=1, interval_time=interval_time, display=1)

    def screenshot_passenger_temp_32_ign_on(self):
        """
        前排乘客空调温度显示32℃
        """
        image_name = f"passenger_temp_threetwo_ign_on"
        self.air_condition.screen_shot(image_name=image_name, count=1, interval_time=interval_time, display=1)

    def screenshot_passenger_temp_hi_ign_on(self):
        """
        前排乘客空调温度显示Hi
        """
        image_name = f"passenger_temp_hi_ign_on"
        self.air_condition.screen_shot(image_name=image_name, count=1, interval_time=interval_time, display=1)

    def screenshot_driver_blowmode_face_ign_on(self):
        """
        显示驾驶员模式为吹面模式
        """
        image_name = f"driver_blowmode_face_ign_on"
        self.air_condition.screen_shot(image_name=image_name, count=1, interval_time=interval_time, display=1)

    def screenshot_driver_blowmode_face_def_ign_on(self):
        """
        显示驾驶员模式为吹面除霜模式
        """
        image_name = f"driver_blowmode_face_def_ign_on"
        self.air_condition.screen_shot(image_name=image_name, count=1, interval_time=interval_time, display=1)

    def screenshot_driver_blowmode_face_foot_ign_on(self):
        """
        显示驾驶员模式为吹面吹脚模式
        """
        image_name = f"driver_blowmode_face_foot_ign_on"
        self.air_condition.screen_shot(image_name=image_name, count=1, interval_time=interval_time, display=1)

    def screenshot_driver_blowmode_face_foot_def_ign_on(self):
        """
        显示驾驶员模式为吹面吹脚除霜模式
        """
        image_name = f"driver_blowmode_face_foot_def_ign_on"
        self.air_condition.screen_shot(image_name=image_name, count=1, interval_time=interval_time, display=1)

    def screenshot_driver_blowmode_foot_ign_on(self):
        """
        显示驾驶员模式为吹脚模式
        """
        image_name = f"driver_blowmode_foot_ign_on"
        self.air_condition.screen_shot(image_name=image_name, count=1, interval_time=interval_time, display=1)

    def screenshot_driver_blowmode_foot_def_ign_on(self):
        """
        显示驾驶员模式为吹脚除霜模式
        """
        image_name = f"driver_blowmode_foot_def_ign_on"
        self.air_condition.screen_shot(image_name=image_name, count=1, interval_time=interval_time, display=1)

    def screenshot_driver_blowmode_def_ign_on(self):
        """
        显示驾驶员模式为除霜模式
        """
        image_name = f"driver_blowmode_def_ign_on"
        self.air_condition.screen_shot(image_name=image_name, count=1, interval_time=interval_time, display=1)

    def screenshot_passenger_blowmode_face_ign_on(self):
        """
        显示前排乘客模式为吹面模式
        """
        image_name = f"passenger_blowmode_face_ign_on"
        self.air_condition.screen_shot(image_name=image_name, count=1, interval_time=interval_time, display=1)

    def screenshot_passenger_blowmode_foot_ign_on(self):
        """
        显示前排乘客模式为吹脚模式
        """
        image_name = f"passenger_blowmode_foot_ign_on"
        self.air_condition.screen_shot(image_name=image_name, count=1, interval_time=interval_time, display=1)

    def screenshot_passenger_blowmode_face_foot_ign_on(self):
        """
        显示前排乘客模式为吹面吹脚模式
        """
        image_name = f"passenger_blowmode_face_foot_ign_on"
        self.air_condition.screen_shot(image_name=image_name, count=1, interval_time=interval_time, display=1)

    def screenshot_def_mode_open_ign_on(self):
        """
        打开前除霜开关
        """
        image_name = f"def_mode_open_ign_on"
        self.air_condition.screen_shot(image_name=image_name, count=1, interval_time=interval_time, display=1)

    def screenshot_def_mode_close_ign_on(self):
        """
        关闭前除霜开关
        """
        image_name = f"def_mode_close_ign_on"
        self.air_condition.screen_shot(image_name=image_name, count=1, interval_time=interval_time, display=1)

    def screenshot_fl_auto_mode_open_ign_on(self):
        """
        打开驾驶员侧Auto开关
        """
        image_name = f"fl_auto_mode_open_ign_on"
        self.air_condition.screen_shot(image_name=image_name, count=1, interval_time=interval_time, display=1)

    def screenshot_fl_auto_mode_close_ign_on(self):
        """
        关闭驾驶员侧Auto开关
        """
        image_name = f"fl_auto_mode_close_ign_on"
        self.air_condition.screen_shot(image_name=image_name, count=1, interval_time=interval_time, display=1)

    def screenshot_fr_auto_mode_open_ign_on(self):
        """
        打开前排乘客Auto开关
        """
        image_name = f"fr_auto_mode_open_ign_on"
        self.air_condition.screen_shot(image_name=image_name, count=1, interval_time=interval_time, display=1)

    def screenshot_fr_auto_mode_close_ign_on(self):
        """
        关闭前排乘客Auto开关
        """
        image_name = f"fr_auto_mode_close_ign_on"
        self.air_condition.screen_shot(image_name=image_name, count=1, interval_time=interval_time, display=1)

    def screenshot_ac_open_ign_on(self):
        """
        前排空调OFF开关不亮
        """
        image_name = f"ac_open_ign_on"
        self.air_condition.screen_shot(image_name=image_name, count=1, interval_time=interval_time, display=1)

    def screenshot_ac_close_ign_on(self):
        """
        前排空调OFF开关高亮
        """
        image_name = f"ac_close_ign_on"
        self.air_condition.screen_shot(image_name=image_name, count=1, interval_time=interval_time, display=1)

    def screenshot_frs_mode_open(self):
        """
        打开空调外循环
        """
        image_name = f"frs_mode_open"
        self.air_condition.screen_shot(image_name=image_name, count=1, interval_time=interval_time, display=1)

    def screenshot_rec_mode_open(self):
        """
        打开空调内循环
        """
        image_name = f"rec_mode_open"
        self.air_condition.screen_shot(image_name=image_name, count=1, interval_time=interval_time, display=1)

    def screenshot_frs_rec_mode_open(self):
        """
        打开空调双向通风
        """
        image_name = f"frs_rec_mode_open"
        self.air_condition.screen_shot(image_name=image_name, count=1, interval_time=interval_time, display=1)

    def screenshot_sync_mode_open(self):
        """
        同步开关高亮
        """
        image_name = f"sync_mode_open"
        self.air_condition.screen_shot(image_name=image_name, count=1, interval_time=interval_time, display=1)

    def screenshot_sync_mode_close(self):
        """
        同步开关不亮
        """
        image_name = f"sync_mode_close"
        self.air_condition.screen_shot(image_name=image_name, count=1, interval_time=interval_time, display=1)

    def screenshot_sync_signal_miss(self):
        """
        同步开关不亮
        """
        image_name = f"sync_signal_miss"
        self.air_condition.screen_shot(image_name=image_name, count=1, interval_time=interval_time, display=1)

    def screenshot_naturalair_mode_open(self):
        """
        自然通风开关高亮
        """
        image_name = f"naturalair_mode_open"
        self.air_condition.screen_shot(image_name=image_name, count=1, interval_time=interval_time, display=1)

    def screenshot_naturalair_mode_close(self):
        """
        自然通风开关变暗
        """
        image_name = f"naturalair_mode_close"
        self.air_condition.screen_shot(image_name=image_name, count=1, interval_time=interval_time, display=1)

    def screenshot_naturalair_signal_miss(self):
        """
        自然通风开关变暗
        """
        image_name = f"naturalair_signal_miss"
        self.air_condition.screen_shot(image_name=image_name, count=1, interval_time=interval_time, display=1)

    def screenshot_ion_mode_open(self):
        """
        ION开关高亮
        """
        image_name = f"ion_mode_open"
        self.air_condition.screen_shot(image_name=image_name, count=1, interval_time=interval_time, display=1)

    def screenshot_ion_mode_close(self):
        """
        ION开关不亮
        """
        image_name = f"ion_mode_close"
        self.air_condition.screen_shot(image_name=image_name, count=1, interval_time=interval_time, display=1)

    def screenshot_ambient_temp_low_40(self):
        """
        车外温度-40℃
        """
        image_name = f"ambient_temp_low_fourzero"
        self.air_condition.screen_shot(image_name=image_name, count=1, interval_time=interval_time, display=1)

    def screenshot_ambient_temp_0(self):
        """
        车外温度0℃
        """
        image_name = f"ambient_temp_zero"
        self.air_condition.screen_shot(image_name=image_name, count=1, interval_time=interval_time, display=1)

    def screenshot_ambient_temp_86_5(self):
        """
        车外温度86.5℃
        """
        image_name = f"ambient_temp_eightsix_five"
        self.air_condition.screen_shot(image_name=image_name, count=1, interval_time=interval_time, display=1)

    def screenshot_pm25_100_green_open(self):
        """
        PM25开关高亮
        """
        image_name = f"pmtwofive_onezerozero_green_open"
        self.air_condition.screen_shot(image_name=image_name, count=1, interval_time=interval_time, display=1)

    def screenshot_pm25_180_red_open(self):
        """
        PM25开关高亮
        """
        image_name = f"pmtwofive_oneeightzero_red_open"
        self.air_condition.screen_shot(image_name=image_name, count=1, interval_time=interval_time, display=1)

    def screenshot_ads_open(self):
        """
        防雾图标出现
        """
        image_name = f"ads_open"
        self.air_condition.screen_shot(image_name=image_name, count=1, interval_time=interval_time, display=1)

    def screenshot_ads_close(self):
        """
        防雾图标隐藏
        """
        image_name = f"ads_close"
        self.air_condition.screen_shot(image_name=image_name, count=1, interval_time=interval_time, display=1)

    def screenshot_rear_blowlevel_1_ign_on(self):
        """
        设置二排空调吹风等级为1级
        """
        image_name = f"rear_blowlevel_one_ign_on"
        self.air_condition.screen_shot(image_name=image_name, count=1, interval_time=interval_time, display=1)

    def screenshot_rear_blowlevel_2_ign_on(self):
        """
        设置二排空调吹风等级为2级
        """
        image_name = f"rear_blowlevel_two_ign_on"
        self.air_condition.screen_shot(image_name=image_name, count=1, interval_time=interval_time, display=1)

    def screenshot_rear_blowlevel_3_ign_on(self):
        """
        设置二排空调吹风等级为3级
        """
        image_name = f"rear_blowlevel_three_ign_on"
        self.air_condition.screen_shot(image_name=image_name, count=1, interval_time=interval_time, display=1)

    def screenshot_rear_blowlevel_4_ign_on(self):
        """
        设置二排空调吹风等级为4级
        """
        image_name = f"rear_blowlevel_four_ign_on"
        self.air_condition.screen_shot(image_name=image_name, count=1, interval_time=interval_time, display=1)

    def screenshot_rear_blowlevel_5_ign_on(self):
        """
        设置二排空调吹风等级为5级
        """
        image_name = f"rear_blowlevel_five_ign_on"
        self.air_condition.screen_shot(image_name=image_name, count=1, interval_time=interval_time, display=1)

    def screenshot_rear_blowlevel_6_ign_on(self):
        """
        设置二排空调吹风等级为6级
        """
        image_name = f"rear_blowlevel_six_ign_on"
        self.air_condition.screen_shot(image_name=image_name, count=1, interval_time=interval_time, display=1)

    def screenshot_rear_blowlevel_7_ign_on(self):
        """
        设置二排空调吹风等级为7级
        """
        image_name = f"rear_blowlevel_seven_ign_on"
        self.air_condition.screen_shot(image_name=image_name, count=1, interval_time=interval_time, display=1)

    def screenshot_rear_left_temp_lo_ign_on(self):
        """
        二排左侧空调温度显示Lo
        """
        image_name = f"rear_left_temp_lo_ign_on"
        self.air_condition.screen_shot(image_name=image_name, count=1, interval_time=interval_time, display=1)

    def screenshot_rear_left_temp_18_ign_on(self):
        """
        二排左侧空调温度显示18℃
        """
        image_name = f"rear_left_temp_oneeight_ign_on"
        self.air_condition.screen_shot(image_name=image_name, count=1, interval_time=interval_time, display=1)

    def screenshot_rear_left_temp_32_ign_on(self):
        """
        二排左侧空调温度显示32℃
        """
        image_name = f"rear_left_temp_threetwo_ign_on"
        self.air_condition.screen_shot(image_name=image_name, count=1, interval_time=interval_time, display=1)

    def screenshot_rear_left_temp_hi_ign_on(self):
        """
        二排左侧空调温度显示Hi
        """
        image_name = f"rear_left_temp_hi_ign_on"
        self.air_condition.screen_shot(image_name=image_name, count=1, interval_time=interval_time, display=1)

    def screenshot_rear_right_temp_lo_ign_on(self):
        """
        二排右侧空调温度显示Lo
        """
        image_name = f"rear_right_temp_lo_ign_on"
        self.air_condition.screen_shot(image_name=image_name, count=1, interval_time=interval_time, display=1)

    def screenshot_rear_right_temp_18_ign_on(self):
        """
        二排右侧空调温度显示18℃
        """
        image_name = f"rear_right_temp_oneeight_ign_on"
        self.air_condition.screen_shot(image_name=image_name, count=1, interval_time=interval_time, display=1)

    def screenshot_rear_right_temp_32_ign_on(self):
        """
        二排右侧空调温度显示32℃
        """
        image_name = f"rear_right_temp_threetwo_ign_on"
        self.air_condition.screen_shot(image_name=image_name, count=1, interval_time=interval_time, display=1)

    def screenshot_rear_right_temp_hi_ign_on(self):
        """
        二排右侧空调温度显示Hi
        """
        image_name = f"rear_right_temp_hi_ign_on"
        self.air_condition.screen_shot(image_name=image_name, count=1, interval_time=interval_time, display=1)

    def screenshot_rear_blowmode_face_ign_on(self):
        """
        显示二排空调模式为吹面模式
        """
        image_name = f"rear_blowmode_face_ign_on"
        self.air_condition.screen_shot(image_name=image_name, count=1, interval_time=interval_time, display=1)

    def screenshot_rear_blowmode_foot_ign_on(self):
        """
        显示二排空调模式为吹脚模式
        """
        image_name = f"rear_blowmode_foot_ign_on"
        self.air_condition.screen_shot(image_name=image_name, count=1, interval_time=interval_time, display=1)

    def screenshot_rear_blowmode_face_foot_ign_on(self):
        """
        显示二排空调模式为吹面吹脚模式
        """
        image_name = f"rear_blowmode_face_foot_ign_on"
        self.air_condition.screen_shot(image_name=image_name, count=1, interval_time=interval_time, display=1)

    def screenshot_rear_auto_mode_open_ign_on(self):
        """
        二排Auto开关高亮
        """
        image_name = f"rear_auto_mode_open_ign_on"
        self.air_condition.screen_shot(image_name=image_name, count=1, interval_time=interval_time, display=1)

    def screenshot_rear_auto_mode_close_ign_on(self):
        """
        二排Auto开关不亮
        """
        image_name = f"rear_auto_mode_close_ign_on"
        self.air_condition.screen_shot(image_name=image_name, count=1, interval_time=interval_time, display=1)

    def screenshot_rearrear_blowlevel_1_ign_on(self):
        """
        设置三排空调吹风等级为1级
        """
        image_name = f"rearrear_blowlevel_one_ign_on"
        self.air_condition.screen_shot(image_name=image_name, count=1, interval_time=interval_time, display=1)

    def screenshot_rearrear_blowlevel_2_ign_on(self):
        """
        设置三排空调吹风等级为2级
        """
        image_name = f"rearrear_blowlevel_two_ign_on"
        self.air_condition.screen_shot(image_name=image_name, count=1, interval_time=interval_time, display=1)

    def screenshot_rearrear_blowlevel_3_ign_on(self):
        """
        设置三排空调吹风等级为3级
        """
        image_name = f"rearrear_blowlevel_three_ign_on"
        self.air_condition.screen_shot(image_name=image_name, count=1, interval_time=interval_time, display=1)

    def screenshot_rearrear_blowlevel_4_ign_on(self):
        """
        设置三排空调吹风等级为4级
        """
        image_name = f"rearrear_blowlevel_four_ign_on"
        self.air_condition.screen_shot(image_name=image_name, count=1, interval_time=interval_time, display=1)

    def screenshot_rearrear_blowlevel_5_ign_on(self):
        """
        设置三排空调吹风等级为5级
        """
        image_name = f"rearrear_blowlevel_five_ign_on"
        self.air_condition.screen_shot(image_name=image_name, count=1, interval_time=interval_time, display=1)

    def screenshot_rearrear_left_temp_lo_ign_on(self):
        """
        三排左侧空调温度显示Lo
        """
        image_name = f"rearrear_left_temp_lo_ign_on"
        self.air_condition.screen_shot(image_name=image_name, count=1, interval_time=interval_time, display=1)

    def screenshot_rearrear_left_temp_m1_ign_on(self):
        """
        三排左侧空调温度显示M1
        """
        image_name = f"rearrear_left_temp_mone_ign_on"
        self.air_condition.screen_shot(image_name=image_name, count=1, interval_time=interval_time, display=1)

    def screenshot_rearrear_left_temp_m2_ign_on(self):
        """
        三排左侧空调温度显示M2
        """
        image_name = f"rearrear_left_temp_mtwo_ign_on"
        self.air_condition.screen_shot(image_name=image_name, count=1, interval_time=interval_time, display=1)

    def screenshot_rearrear_left_temp_m3_ign_on(self):
        """
        三排左侧空调温度显示M3
        """
        image_name = f"rearrear_left_temp_mthree_ign_on"
        self.air_condition.screen_shot(image_name=image_name, count=1, interval_time=interval_time, display=1)

    def screenshot_rearrear_left_temp_m4_ign_on(self):
        """
        三排左侧空调温度显示M4
        """
        image_name = f"rearrear_left_temp_mfour_ign_on"
        self.air_condition.screen_shot(image_name=image_name, count=1, interval_time=interval_time, display=1)

    def screenshot_rearrear_left_temp_hi_ign_on(self):
        """
        三排左侧空调温度显示Hi
        """
        image_name = f"rearrear_left_temp_hi_ign_on"
        self.air_condition.screen_shot(image_name=image_name, count=1, interval_time=interval_time, display=1)

    def screenshot_rearrear_right_temp_lo_ign_on(self):
        """
        三排右侧空调温度显示Lo
        """
        image_name = f"rearrear_right_temp_lo_ign_on"
        self.air_condition.screen_shot(image_name=image_name, count=1, interval_time=interval_time, display=1)

    def screenshot_rearrear_right_temp_m1_ign_on(self):
        """
        三排右侧空调温度显示M1
        """
        image_name = f"rearrear_right_temp_mone_ign_on"
        self.air_condition.screen_shot(image_name=image_name, count=1, interval_time=interval_time, display=1)

    def screenshot_rearrear_right_temp_m2_ign_on(self):
        """
        三排右侧空调温度显示M2
        """
        image_name = f"rearrear_right_temp_mtwo_ign_on"
        self.air_condition.screen_shot(image_name=image_name, count=1, interval_time=interval_time, display=1)

    def screenshot_rearrear_right_temp_m3_ign_on(self):
        """
        三排右侧空调温度显示M3
        """
        image_name = f"rearrear_right_temp_mthree_ign_on"
        self.air_condition.screen_shot(image_name=image_name, count=1, interval_time=interval_time, display=1)

    def screenshot_rearrear_right_temp_m4_ign_on(self):
        """
        三排右侧空调温度显示M4
        """
        image_name = f"rearrear_right_temp_mfour_ign_on"
        self.air_condition.screen_shot(image_name=image_name, count=1, interval_time=interval_time, display=1)

    def screenshot_rearrear_right_temp_hi_ign_on(self):
        """
        三排右侧空调温度显示Hi
        """
        image_name = f"rearrear_right_temp_hi_ign_on"
        self.air_condition.screen_shot(image_name=image_name, count=1, interval_time=interval_time, display=1)

    def screenshot_rearrear_blowmode_face_ign_on(self):
        """
        显示三排空调模式为吹面模式
        """
        image_name = f"rearrear_blowmode_face_ign_on"
        self.air_condition.screen_shot(image_name=image_name, count=1, interval_time=interval_time, display=1)

    def screenshot_rearrear_blowmode_foot_ign_on(self):
        """
        显示三排空调模式为吹脚模式
        """
        image_name = f"rearrear_blowmode_foot_ign_on"
        self.air_condition.screen_shot(image_name=image_name, count=1, interval_time=interval_time, display=1)

    def screenshot_rearrear_blowmode_face_foot_ign_on(self):
        """
        显示三排空调模式为吹面吹脚模式
        """
        image_name = f"rearrear_blowmode_face_foot_ign_on"
        self.air_condition.screen_shot(image_name=image_name, count=1, interval_time=interval_time, display=1)

    def screenshot_rearrear_auto_mode_open_ign_on(self):
        """
        三排Auto开关高亮
        """
        image_name = f"rearrear_auto_mode_open_ign_on"
        self.air_condition.screen_shot(image_name=image_name, count=1, interval_time=interval_time, display=1)

    def screenshot_rearrear_auto_mode_close_ign_on(self):
        """
        三排Auto开关不亮
        """
        image_name = f"rearrear_auto_mode_close_ign_on"
        self.air_condition.screen_shot(image_name=image_name, count=1, interval_time=interval_time, display=1)

    def screenshot_rearrear_ac_open_ign_on(self):
        """
        三排空调OFF开关不亮
        """
        image_name = f"rearrear_ac_open_ign_on"
        self.air_condition.screen_shot(image_name=image_name, count=1, interval_time=interval_time, display=1)

    def screenshot_rearrear_ac_close_ign_on(self):
        """
        三排空调OFF开关高亮
        """
        image_name = f"rearrear_ac_close_ign_on"
        self.air_condition.screen_shot(image_name=image_name, count=1, interval_time=interval_time, display=1)

    def screenshot_fl_seat_vent_level_3_on(self):
        """
        驾驶员座椅3级通风开启
        """
        image_name = f"fl_seat_vent_level_three_on"
        self.air_condition.screen_shot(image_name=image_name, count=1, interval_time=interval_time, display=1)

    def screenshot_fl_seat_vent_level_2_on(self):
        """
        驾驶员座椅2级通风开启
        """
        image_name = f"fl_seat_vent_level_two_on"
        self.air_condition.screen_shot(image_name=image_name, count=1, interval_time=interval_time, display=1)

    def screenshot_fl_seat_vent_level_off(self):
        """
        驾驶员座椅通风关闭
        """
        image_name = f"fl_seat_vent_level_off"
        self.air_condition.screen_shot(image_name=image_name, count=1, interval_time=interval_time, display=1)

    def screenshot_fl_seat_heat_level_3_on(self):
        """
        驾驶员座椅3级加热开启
        """
        image_name = f"fl_seat_heat_level_three_on"
        self.air_condition.screen_shot(image_name=image_name, count=1, interval_time=interval_time, display=1)

    def screenshot_fl_seat_heat_level_2_on(self):
        """
        驾驶员座椅2级加热开启
        """
        image_name = f"fl_seat_heat_level_two_on"
        self.air_condition.screen_shot(image_name=image_name, count=1, interval_time=interval_time, display=1)

    def screenshot_fl_seat_heat_level_off(self):
        """
        驾驶员座椅加热关闭
        """
        image_name = f"fl_seat_heat_level_off"
        self.air_condition.screen_shot(image_name=image_name, count=1, interval_time=interval_time, display=1)

    def screenshot_fl_seatmassage_wave_level_1(self):
        """
        驾驶员座椅1级波浪按摩
        """
        image_name = f"fl_seatmassage_wave_level_one"
        self.air_condition.screen_shot(image_name=image_name, count=1, interval_time=interval_time, display=1)

    def screenshot_fl_seatmassage_snake_level_2(self):
        """
        驾驶员座椅2级蛇形按摩
        """
        image_name = f"fl_seatmassage_snake_level_two"
        self.air_condition.screen_shot(image_name=image_name, count=1, interval_time=interval_time, display=1)

    def screenshot_fl_seatmassage_butterfly_level_3(self):
        """
        驾驶员座椅3级蝴蝶按摩
        """
        image_name = f"fl_seatmassage_butterfly_level_three"
        self.air_condition.screen_shot(image_name=image_name, count=1, interval_time=interval_time, display=1)

    def screenshot_fl_seatmemory_pos1(self):
        """
        主驾座椅记忆位置1
        """
        image_name = f"fl_seatmemory_posone"
        self.air_condition.screen_shot(image_name=image_name, count=1, interval_time=interval_time, display=1)

    def screenshot_fr_seat_vent_level_3_on(self):
        """
        前排乘客座椅3级通风开启
        """
        image_name = f"fr_seat_vent_level_three_on"
        self.air_condition.screen_shot(image_name=image_name, count=1, interval_time=interval_time, display=1)

    def screenshot_fr_seat_vent_level_2_on(self):
        """
        前排乘客座椅2级通风开启
        """
        image_name = f"fr_seat_vent_level_two_on"
        self.air_condition.screen_shot(image_name=image_name, count=1, interval_time=interval_time, display=1)

    def screenshot_fr_seat_vent_level_off(self):
        """
        前排乘客座椅通风关闭
        """
        image_name = f"fr_seat_vent_level_off"
        self.air_condition.screen_shot(image_name=image_name, count=1, interval_time=interval_time, display=1)

    def screenshot_fr_seat_heat_level_3_on(self):
        """
        前排乘客座椅3级加热开启
        """
        image_name = f"fr_seat_heat_level_three_on"
        self.air_condition.screen_shot(image_name=image_name, count=1, interval_time=interval_time, display=1)

    def screenshot_fr_seat_heat_level_2_on(self):
        """
        前排乘客座椅2级加热开启
        """
        image_name = f"fr_seat_heat_level_two_on"
        self.air_condition.screen_shot(image_name=image_name, count=1, interval_time=interval_time, display=1)

    def screenshot_fr_seat_heat_level_off(self):
        """
        前排乘客座椅加热关闭
        """
        image_name = f"fr_seat_heat_level_off"
        self.air_condition.screen_shot(image_name=image_name, count=1, interval_time=interval_time, display=1)

    def screenshot_fr_seatmassage_wave_level_1(self):
        """
        前排乘客座椅1级波浪按摩
        """
        image_name = f"fr_seatmassage_wave_level_one"
        self.air_condition.screen_shot(image_name=image_name, count=1, interval_time=interval_time, display=1)

    def screenshot_fr_seatmassage_snake_level_2(self):
        """
        前排乘客座椅2级蛇形按摩
        """
        image_name = f"fr_seatmassage_snake_level_two"
        self.air_condition.screen_shot(image_name=image_name, count=1, interval_time=interval_time, display=1)

    def screenshot_fr_seatmassage_butterfry_level_3(self):
        """
        前排乘客座椅3级蝴蝶按摩
        """
        image_name = f"fr_seatmassage_butterfry_level_three"
        self.air_condition.screen_shot(image_name=image_name, count=1, interval_time=interval_time, display=1)

    def screenshot_fr_seatmemory_pos1(self):
        """
        前排乘客座椅记忆位置1
        """
        image_name = f"fr_seatmemory_posone"
        self.air_condition.screen_shot(image_name=image_name, count=1, interval_time=interval_time, display=1)

    def screenshot_rearwindow_heating_open(self):
        """
        打开后除霜
        """
        image_name = f"rearwindow_heating_open"
        self.air_condition.screen_shot(image_name=image_name, count=1, interval_time=interval_time, display=1)

    def screenshot_rearwindow_heating_close(self):
        """
        关闭后除霜
        """
        image_name = f"rearwindow_heating_close"
        self.air_condition.screen_shot(image_name=image_name, count=1, interval_time=interval_time, display=1)

    def screenshot_steeringwheel_heat_open(self):
        """
        打开方向盘加热
        """
        image_name = f"steeringwheel_heat_open"
        self.air_condition.screen_shot(image_name=image_name, count=1, interval_time=interval_time, display=1)

    def screenshot_steeringwheel_heat_close(self):
        """
        关闭方向盘加热
        """
        image_name = f"steeringwheel_heat_close"
        self.air_condition.screen_shot(image_name=image_name, count=1, interval_time=interval_time, display=1)

    def screenshot_luggagedoor_opening(self):
        """
        尾门打开中
        """
        image_name = f"luggagedoor_opening"
        self.air_condition.screen_shot(image_name=image_name, count=1, interval_time=interval_time, display=1)

    def screenshot_luggagedoor_manual(self):
        """
        尾门暂停中
        """
        image_name = f"luggagedoor_manual"
        self.air_condition.screen_shot(image_name=image_name, count=1, interval_time=interval_time, display=1)

    def screenshot_luggagedoor_closing(self):
        """
        尾门关闭中
        """
        image_name = f"luggagedoor_closing"
        self.air_condition.screen_shot(image_name=image_name, count=1, interval_time=interval_time, display=1)

    def screenshot_open_sober(self):
        """
        开启提神模式
        """
        image_name = f"open_sober"
        self.air_condition.screen_shot(image_name=image_name, count=1, interval_time=interval_time, display=1)

    def screenshot_open_leisure(self):
        """
        开启休闲模式
        """
        image_name = f"open_leisure"
        self.air_condition.screen_shot(image_name=image_name, count=1, interval_time=interval_time, display=1)

    ####################################################################################################################
    #                                                                                                                  #
    #                                           用于生成表格 --> Can信号(CanAction)                                      #
    #                                                                                                                  #
    ####################################################################################################################

    def ign_on(self):
        """
        1
        """
        self.can_service.send_can_signal_message(msg=562, signal={"PowerMode": 0x4})

    def ign_off(self):
        """
        2
        """
        self.can_service.send_can_signal_message(msg=562, signal={"PowerMode": 0x0})

    def gw_ota_mode_on(self):
        """
        3
        """
        self.can_service.send_can_signal_message(msg=688, signal={"GW_OTAMode": 0X1})

    def gw_ota_mode_off(self):
        """
        4
        """
        self.can_service.send_can_signal_message(msg=688, signal={"GW_OTAMode": 0X0})

    def rear_window_heating_status_on(self):
        """
        5
        """
        self.can_service.send_can_signal_message(msg=576, signal={"RearWindowHeatingStatus": 0x1})

    def rear_window_heating_status_off(self):
        """
        6
        """
        self.can_service.send_can_signal_message(msg=576, signal={"RearWindowHeatingStatus": 0x0})

    def steering_wheel_heat_presevation(self):
        """
        7
        """
        self.can_service.send_can_signal_message(msg=561, signal={"BCM_SteeringWheelheatInd": 0x2})

    def steering_wheel_heat_heating(self):
        """
        8
        """
        self.can_service.send_can_signal_message(msg=561, signal={"BCM_SteeringWheelheatInd": 0x1})

    def steering_wheel_heat_off(self):
        """
        9
        """
        self.can_service.send_can_signal_message(msg=561, signal={"BCM_SteeringWheelheatInd": 0x0})

    def vehiclespeed_3km(self):
        """
        10
        """
        self.can_service.send_can_signal_message(msg=192, signal={"VehicleSpeed": 300})

    def vehiclespeed_10km(self):
        """
        11
        """
        self.can_service.send_can_signal_message(msg=192, signal={"VehicleSpeed": 1000})

    def vehiclespeed_6km(self):
        """
        12
        """
        self.can_service.send_can_signal_message(msg=192, signal={"VehicleSpeed": 600})

    def vehiclespeed_0km(self):
        """
        13
        """
        self.can_service.send_can_signal_message(msg=192, signal={"VehicleSpeed": 0})

    def vehiclespeed_2km(self):
        """
        14
        """
        self.can_service.send_can_signal_message(msg=192, signal={"VehicleSpeed": 200})

    def luggage_door_init(self):
        """
        15
        """
        self.can_service.send_can_signal_message(msg=578, signal={"LuggageDoorWorkingSt": 0x1})

    def luggage_door_translatch(self):
        """
        16
        """
        self.can_service.send_can_signal_message(msg=578, signal={"LuggageDoorWorkingSt": 0x2})

    def luggage_door_closed(self):
        """
        17
        """
        self.can_service.send_can_signal_message(msg=578, signal={"LuggageDoorWorkingSt": 0x3})

    def luggage_door_manual(self):
        """
        18
        """
        self.can_service.send_can_signal_message(msg=578, signal={"LuggageDoorWorkingSt": 0x4})

    def luggage_door_closing(self):
        """
        19
        """
        self.can_service.send_can_signal_message(msg=578, signal={"LuggageDoorWorkingSt": 0x5})

    def luggage_door_opening(self):
        """
        20
        """
        self.can_service.send_can_signal_message(msg=578, signal={"LuggageDoorWorkingSt": 0x6})

    def luggage_door_open(self):
        """
        21
        """
        self.can_service.send_can_signal_message(msg=578, signal={"LuggageDoorWorkingSt": 0x7})

    def fragrance_refresh(self):
        """
        22
        """
        self.can_service.send_can_signal_message(msg=561, signal={"BCM_FragranceType": 0x0})

    def fragrance_hongqi(self):
        """
        23
        """
        self.can_service.send_can_signal_message(msg=561, signal={"BCM_FragranceType": 0x1})

    def fragrance_calm(self):
        """
        24
        """
        self.can_service.send_can_signal_message(msg=561, signal={"BCM_FragranceType": 0x2})

    def fragrance_user_define(self):
        """
        25
        """
        self.can_service.send_can_signal_message(msg=561, signal={"BCM_FragranceType": 0x3})

    def fragrance_auto_function_status(self):
        """
        26
        """
        self.can_service.send_can_signal_message(msg=561, signal={"BCM_FragranceAutoFunctionStatu_s": 0x1})

    def fragrance_3min(self):
        """
        27
        """
        self.can_service.send_can_signal_message(msg=561, signal={"BCM_FragranceTime": 0x2})

    def working_status_off(self):
        """
        28
        """
        self.can_service.send_can_signal_message(msg=306, signal={"WorkingSt_ESC": 0x0})

    def working_status_on(self):
        """
        29
        """
        self.can_service.send_can_signal_message(msg=306, signal={"WorkingSt_ESC": 0x1})

    def door_close(self):
        """
        30
        """
        self.can_service.send_can_signal_message(msg=586, signal={"DoorSt_FL": 0X0})

    def door_open(self):
        """
        31
        """
        self.can_service.send_can_signal_message(msg=586, signal={"DoorSt_FL": 0X1})

    def blow_level_1(self):
        """
        32
        """
        self.can_service.send_can_signal_message(msg=546, signal={"BlowLevel": 0X1})

    def blow_level_2(self):
        """
        33
        """
        self.can_service.send_can_signal_message(msg=546, signal={"BlowLevel": 0X2})

    def blow_level_3(self):
        """
        34
        """
        self.can_service.send_can_signal_message(msg=546, signal={"BlowLevel": 0X3})

    def blow_level_4(self):
        """
        35
        """
        self.can_service.send_can_signal_message(msg=546, signal={"BlowLevel": 0X4})

    def blow_level_6(self):
        """
        36
        """
        self.can_service.send_can_signal_message(msg=546, signal={"BlowLevel": 0X6})

    def blow_level_7(self):
        """
        37
        """
        self.can_service.send_can_signal_message(msg=546, signal={"BlowLevel": 0X7})

    def driver_temperature_25(self):
        """
        38
        """
        self.can_service.send_can_signal_message(msg=546, signal={"ExpectTemp_Left": 20})

    def driver_temperature_low(self):
        """
        39
        """
        self.can_service.send_can_signal_message(msg=546, signal={"ExpectTemp_Left": 5})

    def driver_temperature_31(self):
        """
        40
        """
        self.can_service.send_can_signal_message(msg=546, signal={"ExpectTemp_Left": 32})

    def driver_temperature_30_5(self):
        """
        41
        """
        self.can_service.send_can_signal_message(msg=546, signal={"ExpectTemp_Left": 31})

    def passenger_temperature_25(self):
        """
        42
        """
        self.can_service.send_can_signal_message(msg=546, signal={"ExpectTemp_Right": 20})

    def passenger_temperature_low(self):
        """
        43
        """
        self.can_service.send_can_signal_message(msg=546, signal={"ExpectTemp_Right": 5})

    def passenger_temperature_31(self):
        """
        44
        """
        self.can_service.send_can_signal_message(msg=546, signal={"ExpectTemp_Right": 32})

    def passenger_temperature_30_5(self):
        """
        45
        """
        self.can_service.send_can_signal_message(msg=546, signal={"ExpectTemp_Right": 31})

    def driver_blow_mode_defrost(self):
        """
        46
        """
        self.can_service.send_can_signal_message(msg=546, signal={"BlowMode_FL": 0X7})

    def driver_blow_mode_face(self):
        """
        47
        """
        self.can_service.send_can_signal_message(msg=546, signal={"BlowMode_FL": 0X1})

    def passenger_blow_mode_face(self):
        """
        48
        """
        self.can_service.send_can_signal_message(msg=546, signal={"BlowMode_FR": 0X1})

    def passenger_blow_mode_face_feet(self):
        """
        49
        """
        self.can_service.send_can_signal_message(msg=546, signal={"BlowMode_FR": 0X3})

    def def_mode_off(self):
        """
        50
        """
        self.can_service.send_can_signal_message(msg=546, signal={"DEFMode": 0x0})

    def def_mode_on(self):
        """
        51
        """
        self.can_service.send_can_signal_message(msg=546, signal={"DEFMode": 0x1})

    def driver_auto_mode_off(self):
        """
        52
        """
        self.can_service.send_can_signal_message(msg=546, signal={"AutoMode": 0X0})

    def driver_auto_mode_on(self):
        """
        53
        """
        self.can_service.send_can_signal_message(msg=546, signal={"AutoMode": 0X1})

    def passenger_auto_mode_off(self):
        """
        54
        """
        self.can_service.send_can_signal_message(msg=546, signal={"AutoMode_FR": 0X0})

    def passenger_auto_mode_on(self):
        """
        55
        """
        self.can_service.send_can_signal_message(msg=546, signal={"AutoMode_FR": 0X1})

    def cycle_mode_interal(self):
        """
        56
        """
        self.can_service.send_can_signal_message(msg=546, signal={"FRSRECMode": 0X2})

    def cycle_mode_exteral(self):
        """
        57
        """
        self.can_service.send_can_signal_message(msg=546, signal={"FRSRECMode": 0X1})

    def cycle_mode_off(self):
        """
        58
        """
        self.can_service.send_can_signal_message(msg=546, signal={"FRSRECMode": 0X0})

    def sync_mode_off(self):
        """
        59
        """
        self.can_service.send_can_signal_message(msg=546, signal={"SyncMode": 0X0})

    def sync_mode_on(self):
        """
        60
        """
        self.can_service.send_can_signal_message(msg=546, signal={"SyncMode": 0X1})

    def vent_mode_off(self):
        """
        61
        """
        self.can_service.send_can_signal_message(msg=552, signal={"NaturalAirinessSt": 0X0})

    def vent_mode_on(self):
        """
        62
        """
        self.can_service.send_can_signal_message(msg=552, signal={"NaturalAirinessSt": 0X1})

    def ambient_temperature_3_5(self):
        """
        63
        """
        self.can_service.send_can_signal_message(msg=546, signal={"AmbientTemp": 87})

    def ambient_temperature_3(self):
        """
        64
        """
        self.can_service.send_can_signal_message(msg=546, signal={"AmbientTemp": 86})

    def ambient_temperature_4(self):
        """
        65
        """
        self.can_service.send_can_signal_message(msg=546, signal={"AmbientTemp": 88})

    def pm25_monitor(self):
        """
        66
        """
        self.can_service.send_can_signal_message(msg=552, signal={"PM25St": 0X1})

    def pm25_purifying(self):
        """
        67
        """
        self.can_service.send_can_signal_message(msg=552, signal={"PM25St": 0X3})

    def pm25_tested(self):
        """
        68
        """
        self.can_service.send_can_signal_message(msg=552, signal={"PM25St": 0X2})

    def auto_mode_2rd_off(self):
        """
        69
        """
        self.can_service.send_can_signal_message(msg=552, signal={"AutoMode_R": 0X0})

    def auto_mode_2rd_on(self):
        """
        70
        """
        self.can_service.send_can_signal_message(msg=552, signal={"AutoMode_R": 0X1})

    def blow_mode_2rd_face(self):
        """
        71
        """
        self.can_service.send_can_signal_message(msg=552, signal={"BlowMode_Rear": 0X1})

    def blow_mode_2rd_face_feet(self):
        """
        72
        """
        self.can_service.send_can_signal_message(msg=552, signal={"BlowMode_Rear": 0X2})

    def rear_left_level_0(self):
        """
        73
        """
        self.can_service.send_can_signal_message(msg=547, signal={"ExpectTemp_RearRearLeft": 0X0})

    def rear_left_level_1(self):
        """
        74
        """
        self.can_service.send_can_signal_message(msg=547, signal={"ExpectTemp_RearRearLeft": 0X1})

    def rear_left_level_2(self):
        """
        75
        """
        self.can_service.send_can_signal_message(msg=547, signal={"ExpectTemp_RearRearLeft": 0X2})

    def rear_left_level_3(self):
        """
        76
        """
        self.can_service.send_can_signal_message(msg=547, signal={"ExpectTemp_RearRearLeft": 0X3})

    def rear_left_level_4(self):
        """
        77
        """
        self.can_service.send_can_signal_message(msg=547, signal={"ExpectTemp_RearRearLeft": 0X4})

    def rear_right_level_0(self):
        """
        78
        """
        self.can_service.send_can_signal_message(msg=547, signal={"ExpectTemp_RearRearRight": 0X0})

    def rear_right_level_1(self):
        """
        79
        """
        self.can_service.send_can_signal_message(msg=547, signal={"ExpectTemp_RearRearRight": 0X1})

    def rear_right_level_2(self):
        """
        80
        """
        self.can_service.send_can_signal_message(msg=547, signal={"ExpectTemp_RearRearRight": 0X2})

    def rear_right_level_3(self):
        """
        81
        """
        self.can_service.send_can_signal_message(msg=547, signal={"ExpectTemp_RearRearRight": 0X3})

    def rear_right_level_4(self):
        """
        82
        """
        self.can_service.send_can_signal_message(msg=547, signal={"ExpectTemp_RearRearRight": 0X4})

    def rear_rear_blow_level0(self):
        """
        83
        """
        self.can_service.send_can_signal_message(msg=547, signal={"RearRearBlowLevel": 0X0})

    def rear_rear_blow_level1(self):
        """
        84
        """
        self.can_service.send_can_signal_message(msg=547, signal={"RearRearBlowLevel": 0X1})

    def rear_rear_blow_level2(self):
        """
        85
        """
        self.can_service.send_can_signal_message(msg=547, signal={"RearRearBlowLevel": 0X2})

    def rear_rear_blow_level3(self):
        """
        86
        """
        self.can_service.send_can_signal_message(msg=547, signal={"RearRearBlowLevel": 0X3})

    def rear_rear_blow_level4(self):
        """
        87
        """
        self.can_service.send_can_signal_message(msg=547, signal={"RearRearBlowLevel": 0X4})

    def rear_rear_blow_level5(self):
        """
        88
        """
        self.can_service.send_can_signal_message(msg=547, signal={"RearRearBlowLevel": 0X5})

    def rear_rear_blow_mode_face_feet(self):
        """
        89
        """
        self.can_service.send_can_signal_message(msg=547, signal={"BlowMode_RearRear": 0X2})

    def rear_rear_blow_mode_face(self):
        """
        90
        """
        self.can_service.send_can_signal_message(msg=547, signal={"BlowMode_RearRear": 0X1})

    def auto_mode_3th_off(self):
        """
        91
        """
        self.can_service.send_can_signal_message(msg=547, signal={"AutoMode_RR": 0X0})

    def auto_mode_3th_on(self):
        """
        92
        """
        self.can_service.send_can_signal_message(msg=547, signal={"AutoMode_RR": 0X1})

    def work_status_off(self):
        """
        93
        """
        self.can_service.send_can_signal_message(msg=547, signal={"WorkingSt_AC_RR": 0X0})

    def work_status_on(self):
        """
        94
        """
        self.can_service.send_can_signal_message(msg=547, signal={"WorkingSt_AC_RR": 0X1})

    def driver_seat_vent_off(self):
        """
        95
        """
        self.can_service.send_can_signal_message(msg=582, signal={"SeatVentInd_FL": 0x0})

    def driver_seat_vent_level1(self):
        """
        96
        """
        self.can_service.send_can_signal_message(msg=582, signal={"SeatVentInd_FL": 0x1})

    def driver_seat_vent_level3(self):
        """
        97
        """
        self.can_service.send_can_signal_message(msg=582, signal={"SeatVentInd_FL": 0x3})

    def passenger_seat_vent_off(self):
        """
        98
        """
        self.can_service.send_can_signal_message(msg=582, signal={"SeatVentInd_FR": 0x0})

    def passenger_seat_vent_level2(self):
        """
        99
        """
        self.can_service.send_can_signal_message(msg=582, signal={"SeatVentInd_FR": 0x2})

    def passenger_seat_vent_level3(self):
        """
        100
        """
        self.can_service.send_can_signal_message(msg=582, signal={"SeatVentInd_FR": 0x3})

    def driver_seat_heat_off(self):
        """
        101
        """
        self.can_service.send_can_signal_message(msg=582, signal={"SeatheatInd_FL": 0x0})

    def driver_seat_heat_level2(self):
        """
        102
        """
        self.can_service.send_can_signal_message(msg=582, signal={"SeatheatInd_FL": 0x2})

    def driver_seat_heat_level3(self):
        """
        103
        """
        self.can_service.send_can_signal_message(msg=582, signal={"SeatheatInd_FL": 0x3})

    def passenger_seat_heat_off(self):
        """
        104
        """
        self.can_service.send_can_signal_message(msg=582, signal={"SeatheatInd_FR": 0x0})

    def passenger_seat_heat_level2(self):
        """
        105
        """
        self.can_service.send_can_signal_message(msg=582, signal={"SeatheatInd_FR": 0x2})

    def passenger_seat_heat_level3(self):
        """
        106
        """
        self.can_service.send_can_signal_message(msg=582, signal={"SeatheatInd_FR": 0x3})

    def adv_park_standby(self):
        """
        107
        """
        self.can_service.send_can_signal_message(msg=592, signal={"ADV_ParkStatus": 0x1})

    def adv_searchingforpark_in(self):
        """
        108
        """
        self.can_service.send_can_signal_message(msg=592, signal={"ADV_ParkStatus": 0x2})

    def adv_searchingforpark_out(self):
        """
        109
        """
        self.can_service.send_can_signal_message(msg=592, signal={"ADV_ParkStatus": 0x3})

    def adv_mapupdate(self):
        """
        110
        """
        self.can_service.send_can_signal_message(msg=592, signal={"ADV_ParkStatus": 0x4})

    def adv_parkingin(self):
        """
        111
        """
        self.can_service.send_can_signal_message(msg=592, signal={"ADV_ParkStatus": 0x5})

    def adv_parkingout(self):
        """
        112
        """
        self.can_service.send_can_signal_message(msg=592, signal={"ADV_ParkStatus": 0x6})

    def adv_driveroverride(self):
        """
        113
        """
        self.can_service.send_can_signal_message(msg=592, signal={"ADV_ParkStatus": 0x7})

    def adv_suspended(self):
        """
        114
        """
        self.can_service.send_can_signal_message(msg=592, signal={"ADV_ParkStatus": 0x8})

    def adv_abort(self):
        """
        115
        """
        self.can_service.send_can_signal_message(msg=592, signal={"ADV_ParkStatus": 0x9})

    def adv_finish(self):
        """
        116
        """
        self.can_service.send_can_signal_message(msg=592, signal={"ADV_ParkStatus": 0xA})

    def adv_error(self):
        """
        117
        """
        self.can_service.send_can_signal_message(msg=592, signal={"ADV_ParkStatus": 0xB})

    def avp_navi_off(self):
        """
        118
        """
        self.can_service.send_can_signal_message(msg=595, signal={"ADV_AVPNaviAvaialble": 0X0})

    def avp_navi_on(self):
        """
        119
        """
        self.can_service.send_can_signal_message(msg=595, signal={"ADV_AVPNaviAvaialble": 0X1})

    def avp_park_in_off(self):
        """
        120
        """
        self.can_service.send_can_signal_message(msg=595, signal={"ADV_AVPParkInAvaialble": 0X0})

    def avp_park_in_on(self):
        """
        121
        """
        self.can_service.send_can_signal_message(msg=595, signal={"ADV_AVPParkInAvaialble": 0X1})

    def avp_park_out_off(self):
        """
        122
        """
        self.can_service.send_can_signal_message(msg=595, signal={"ADV_AVPParkOutAvaialble": 0X0})

    def avp_park_out_on(self):
        """
        123
        """
        self.can_service.send_can_signal_message(msg=595, signal={"ADV_AVPParkOutAvaialble": 0X1})

    def hpa_navi_off(self):
        """
        124
        """
        self.can_service.send_can_signal_message(msg=595, signal={"ADV_HPANaviAvaialble": 0X0})

    def hpa_navi_on(self):
        """
        125
        """
        self.can_service.send_can_signal_message(msg=595, signal={"ADV_HPANaviAvaialble": 0X1})

    def hpa_park_in_off(self):
        """
        126
        """
        self.can_service.send_can_signal_message(msg=595, signal={"ADV_HPAParkInAvaialble": 0X0})

    def hpa_park_in_on(self):
        """
        127
        """
        self.can_service.send_can_signal_message(msg=595, signal={"ADV_HPAParkInAvaialble": 0X1})

    def hpa_park_out_off(self):
        """
        128
        """
        self.can_service.send_can_signal_message(msg=595, signal={"ADV_HPAParkOutAvaialble": 0x0})

    def hpa_park_out_on(self):
        """
        129
        """
        self.can_service.send_can_signal_message(msg=595, signal={"ADV_HPAParkOutAvaialble": 0x1})

    def avs_on(self):
        """
        130
        """
        self.can_service.send_can_signal_message(msg=600, signal={"AVSSt": 0X1})

    def avs_off(self):
        """
        131
        """
        self.can_service.send_can_signal_message(msg=600, signal={"AVSSt": 0X0})

    def pdc_off(self):
        """
        132
        """
        self.can_service.send_can_signal_message(msg=604, signal={"SysSt_PDC": 0X0})

    def pdc_on(self):
        """
        133
        """
        self.can_service.send_can_signal_message(msg=604, signal={"SysSt_PDC": 0X1})

    def ac_open(self):
        """
        134
        """
        self.can_service.send_can_signal_message(msg=546, signal={"WorkingSt_AC": 0x1})

    def ac_close(self):
        """
        135
        """
        self.can_service.send_can_signal_message(msg=546, signal={"WorkingSt_AC": 0x0})

    def rearrear_ac_open(self):
        """
        136
        """
        self.can_service.send_can_signal_message(msg=547, signal={"WorkingSt_AC_RR": 0x1})

    def rearrear_ac_close(self):
        """
        137
        """
        self.can_service.send_can_signal_message(msg=547, signal={"WorkingSt_AC_RR": 0x0})

    def open_esc_switch(self):
        """
        138
        """
        self.can_service.send_can_signal_message(msg=306, signal={"WorkingSt_ESC": 0x1})

    def close_esc_switch(self):
        """
        139
        """
        self.can_service.send_can_signal_message(msg=306, signal={"WorkingSt_ESC": 0x0})

    def open_hdc_switch(self):
        """
        140
        """
        self.can_service.send_can_signal_message(msg=306, signal={"WorkingSt_HDC": 0x1})

    def close_hdc_switch(self):
        """
        141
        """
        self.can_service.send_can_signal_message(msg=306, signal={"WorkingSt_HDC": 0x0})

    def blowlevel_1(self):
        """
        142
        """
        self.can_service.send_can_signal_message(msg=546, signal={"BlowLevel": 1})

    def blowlevel_2(self):
        """
        143
        """
        self.can_service.send_can_signal_message(msg=546, signal={"BlowLevel": 2})

    def blowlevel_3(self):
        """
        144
        """
        self.can_service.send_can_signal_message(msg=546, signal={"BlowLevel": 3})

    def blowlevel_4(self):
        """
        145
        """
        self.can_service.send_can_signal_message(msg=546, signal={"BlowLevel": 4})

    def blowlevel_5(self):
        """
        146
        """
        self.can_service.send_can_signal_message(msg=546, signal={"BlowLevel": 5})

    def blowlevel_6(self):
        """
        147
        """
        self.can_service.send_can_signal_message(msg=546, signal={"BlowLevel": 6})

    def blowlevel_7(self):
        """
        148
        """
        self.can_service.send_can_signal_message(msg=546, signal={"BlowLevel": 7})

    def driver_temp_lo(self):
        """
        149
        """
        self.can_service.send_can_signal_message(msg=546, signal={"ExpectTemp_Left": 5})

    def driver_temp_18(self):
        """
        150
        """
        self.can_service.send_can_signal_message(msg=546, signal={"ExpectTemp_Left": 6})

    def driver_temp_32(self):
        """
        151
        """
        self.can_service.send_can_signal_message(msg=546, signal={"ExpectTemp_Left": 34})

    def driver_temp_hi(self):
        """
        152
        """
        self.can_service.send_can_signal_message(msg=546, signal={"ExpectTemp_Left": 36})

    def passenger_temp_lo(self):
        """
        153
        """
        self.can_service.send_can_signal_message(msg=546, signal={"ExpectTemp_Right": 5})

    def passenger_temp_18(self):
        """
        154
        """
        self.can_service.send_can_signal_message(msg=546, signal={"ExpectTemp_Right": 6})

    def passenger_temp_32(self):
        """
        155
        """
        self.can_service.send_can_signal_message(msg=546, signal={"ExpectTemp_Right": 34})

    def passenger_temp_hi(self):
        """
        156
        """
        self.can_service.send_can_signal_message(msg=546, signal={"ExpectTemp_Right": 36})

    def driver_face(self):
        """
        157
        """
        self.can_service.send_can_signal_message(msg=546, signal={"BlowMode_FL": 0x1})

    def driver_face_def(self):
        """
        158
        """
        self.can_service.send_can_signal_message(msg=546, signal={"BlowMode_FL": 0x2})

    def driver_face_foot(self):
        """
        159
        """
        self.can_service.send_can_signal_message(msg=546, signal={"BlowMode_FL": 0x3})

    def driver_face_foot_def(self):
        """
        160
        """
        self.can_service.send_can_signal_message(msg=546, signal={"BlowMode_FL": 0x4})

    def driver_foot(self):
        """
        161
        """
        self.can_service.send_can_signal_message(msg=546, signal={"BlowMode_FL": 0x5})

    def driver_foot_def(self):
        """
        162
        """
        self.can_service.send_can_signal_message(msg=546, signal={"BlowMode_FL": 0x6})

    def driver_def(self):
        """
        163
        """
        self.can_service.send_can_signal_message(msg=546, signal={"BlowMode_FL": 0x7})

    def passenger_face(self):
        """
        164
        """
        self.can_service.send_can_signal_message(msg=546, signal={"BlowMode_FR": 0x1})

    def passenger_foot(self):
        """
        165
        """
        self.can_service.send_can_signal_message(msg=546, signal={"BlowMode_FR": 0x3})

    def passenger_foot_face(self):
        """
        166
        """
        self.can_service.send_can_signal_message(msg=546, signal={"BlowMode_FR": 0x2})

    def def_close(self):
        """
        167
        """
        self.can_service.send_can_signal_message(msg=546, signal={"DEFMode": 0x0})

    def def_open(self):
        """
        168
        """
        self.can_service.send_can_signal_message(msg=546, signal={"DEFMode": 0x1})

    def fl_auto_close(self):
        """
        169
        """
        self.can_service.send_can_signal_message(msg=546, signal={"AutoMode": 0x0})

    def fl_auto_open(self):
        """
        170
        """
        self.can_service.send_can_signal_message(msg=546, signal={"AutoMode": 0x1})

    def fr_auto_close(self):
        """
        171
        """
        self.can_service.send_can_signal_message(msg=546, signal={"AutoMode_FR": 0x0})

    def fr_auto_open(self):
        """
        172
        """
        self.can_service.send_can_signal_message(msg=546, signal={"AutoMode_FR": 0x1})

    def frsrec_mode_inactive(self):
        """
        173
        """
        self.can_service.send_can_signal_message(msg=546, signal={"FRSRECMode": 0x0})

    def frs_mode(self):
        """
        174
        """
        self.can_service.send_can_signal_message(msg=546, signal={"FRSRECMode": 0x1})

    def rec_mode(self):
        """
        175
        """
        self.can_service.send_can_signal_message(msg=546, signal={"FRSRECMode": 0x2})

    def frs_rec_mode(self):
        """
        176
        """
        self.can_service.send_can_signal_message(msg=546, signal={"FRSRECMode": 0x3})

    def sync_mode_close(self):
        """
        177
        """
        self.can_service.send_can_signal_message(msg=546, signal={"SyncMode": 0x0})

    def sync_mode_open(self):
        """
        178
        """
        self.can_service.send_can_signal_message(msg=546, signal={"SyncMode": 0x1})

    def naturalair_close(self):
        """
        179
        """
        self.can_service.send_can_signal_message(msg=552, signal={"NaturalAirinessSt": 0x0})

    def naturalair_open(self):
        """
        180
        """
        self.can_service.send_can_signal_message(msg=552, signal={"NaturalAirinessSt": 0x1})

    def rear_left_temp_lo(self):
        """
        181
        """
        self.can_service.send_can_signal_message(msg=552, signal={"ExpectTemp_RearLeft": 5})

    def rear_left_temp_18(self):
        """
        182
        """
        self.can_service.send_can_signal_message(msg=552, signal={"ExpectTemp_RearLeft": 6})

    def rear_left_temp_32(self):
        """
        183
        """
        self.can_service.send_can_signal_message(msg=552, signal={"ExpectTemp_RearLeft": 34})

    def rear_left_temp_hi(self):
        """
        184
        """
        self.can_service.send_can_signal_message(msg=552, signal={"ExpectTemp_RearLeft": 36})

    def rear_right_temp_lo(self):
        """
        185
        """
        self.can_service.send_can_signal_message(msg=552, signal={"ExpectTemp_RearRight": 5})

    def rear_right_temp_18(self):
        """
        186
        """
        self.can_service.send_can_signal_message(msg=552, signal={"ExpectTemp_RearRight": 6})

    def rear_right_temp_32(self):
        """
        187
        """
        self.can_service.send_can_signal_message(msg=552, signal={"ExpectTemp_RearRight": 34})

    def rear_right_temp_hi(self):
        """
        188
        """
        self.can_service.send_can_signal_message(msg=552, signal={"ExpectTemp_RearRight": 36})

    def rear_blowmode_face(self):
        """
        189
        """
        self.can_service.send_can_signal_message(msg=552, signal={"BlowMode_Rear": 0x1})

    def rear_blowmode_foot(self):
        """
        190
        """
        self.can_service.send_can_signal_message(msg=552, signal={"BlowMode_Rear": 0x3})

    def rear_blowmode_face_foot(self):
        """
        191
        """
        self.can_service.send_can_signal_message(msg=552, signal={"BlowMode_Rear": 0x2})

    def rear_auto_mode_close(self):
        """
        192
        """
        self.can_service.send_can_signal_message(msg=552, signal={"AutoMode_R": 0x0})

    def rear_auto_mode_open(self):
        """
        193
        """
        self.can_service.send_can_signal_message(msg=552, signal={"AutoMode_R": 0x1})

    def rearrear_blowlevel_1(self):
        """
        194
        """
        self.can_service.send_can_signal_message(msg=547, signal={"RearRearBlowLevel": 1})

    def rearrear_blowlevel_2(self):
        """
        195
        """
        self.can_service.send_can_signal_message(msg=547, signal={"RearRearBlowLevel": 2})

    def rearrear_blowlevel_3(self):
        """
        196
        """
        self.can_service.send_can_signal_message(msg=547, signal={"RearRearBlowLevel": 3})

    def rearrear_blowlevel_4(self):
        """
        197
        """
        self.can_service.send_can_signal_message(msg=547, signal={"RearRearBlowLevel": 4})

    def rearrear_blowlevel_5(self):
        """
        198
        """
        self.can_service.send_can_signal_message(msg=547, signal={"RearRearBlowLevel": 5})

    def rearrear_left_temp_lo(self):
        """
        199
        """
        self.can_service.send_can_signal_message(msg=547, signal={"ExpectTemp_RearRearLeft": 0})

    def rearrear_left_temp_m1(self):
        """
        200
        """
        self.can_service.send_can_signal_message(msg=547, signal={"ExpectTemp_RearRearLeft": 1})

    def rearrear_left_temp_m2(self):
        """
        201
        """
        self.can_service.send_can_signal_message(msg=547, signal={"ExpectTemp_RearRearLeft": 2})

    def rearrear_left_temp_m3(self):
        """
        202
        """
        self.can_service.send_can_signal_message(msg=547, signal={"ExpectTemp_RearRearLeft": 3})

    def rearrear_left_temp_m4(self):
        """
        203
        """
        self.can_service.send_can_signal_message(msg=547, signal={"ExpectTemp_RearRearLeft": 4})

    def rearrear_left_temp_hi(self):
        """
        204
        """
        self.can_service.send_can_signal_message(msg=547, signal={"ExpectTemp_RearRearLeft": 5})

    def rearrear_right_temp_lo(self):
        """
        205
        """
        self.can_service.send_can_signal_message(msg=547, signal={"ExpectTemp_RearRearRight": 0})

    def rearrear_right_temp_m1(self):
        """
        206
        """
        self.can_service.send_can_signal_message(msg=547, signal={"ExpectTemp_RearRearRight": 1})

    def rearrear_right_temp_m2(self):
        """
        207
        """
        self.can_service.send_can_signal_message(msg=547, signal={"ExpectTemp_RearRearRight": 2})

    def rearrear_right_temp_m3(self):
        """
        208
        """
        self.can_service.send_can_signal_message(msg=547, signal={"ExpectTemp_RearRearRight": 3})

    def rearrear_right_temp_m4(self):
        """
        209
        """
        self.can_service.send_can_signal_message(msg=547, signal={"ExpectTemp_RearRearRight": 4})

    def rearrear_right_temp_hi(self):
        """
        210
        """
        self.can_service.send_can_signal_message(msg=547, signal={"ExpectTemp_RearRearRight": 5})

    def rearrear_blowmode_face(self):
        """
        211
        """
        self.can_service.send_can_signal_message(msg=547, signal={"BlowMode_RearRear": 1})

    def rearrear_blowmode_foot(self):
        """
        212
        """
        self.can_service.send_can_signal_message(msg=547, signal={"BlowMode_RearRear": 3})

    def rearrear_blowmode_face_foot(self):
        """
        213
        """
        self.can_service.send_can_signal_message(msg=547, signal={"BlowMode_RearRear": 2})

    def rearrear_auto_mode_close(self):
        """
        214
        """
        self.can_service.send_can_signal_message(msg=547, signal={"AutoMode_RR": 0x0})

    def rearrear_auto_mode_open(self):
        """
        215
        """
        self.can_service.send_can_signal_message(msg=547, signal={"AutoMode_RR": 0x1})

    def ion_off(self):
        """
        216
        """
        self.can_service.send_can_signal_message(msg=552, signal={"IONSt": 0})

    def ion_on(self):
        """
        217
        """
        self.can_service.send_can_signal_message(msg=552, signal={"IONSt": 1})

    def ion_cleanon(self):
        """
        218
        """
        self.can_service.send_can_signal_message(msg=552, signal={"IONSt": 2})

    def ambient_temp_low_40(self):
        """
        219
        """
        self.can_service.send_can_signal_message(msg=546, signal={"AmbientTemp": 0})

    def ambient_temp_0(self):
        """
        220
        """
        self.can_service.send_can_signal_message(msg=546, signal={"AmbientTemp": 40})

    def ambient_temp_86_5(self):
        """
        221
        """
        self.can_service.send_can_signal_message(msg=546, signal={"AmbientTemp": 253})

    def pm25_off(self):
        """
        222
        """
        self.can_service.send_can_signal_message(msg=552, signal={"PM25St": 0})

    def pm25_testing(self):
        """
        223
        """
        self.can_service.send_can_signal_message(msg=552, signal={"PM25St": 1})

    def pm25_testing_finish(self):
        """
        224
        """
        self.can_service.send_can_signal_message(msg=552, signal={"PM25St": 2})

    def pm25_cleaning(self):
        """
        225
        """
        self.can_service.send_can_signal_message(msg=552, signal={"PM25St": 3})

    def pm25_100(self):
        """
        226
        """
        self.can_service.send_can_signal_message(msg=552, signal={"PM25Data": 100})

    def pm25_180(self):
        """
        227
        """
        self.can_service.send_can_signal_message(msg=552, signal={"PM25Data": 180})

    def pm25_no_color(self):
        """
        228
        """
        self.can_service.send_can_signal_message(msg=552, signal={"PM25Color": 0})

    def pm25_green(self):
        """
        229
        """
        self.can_service.send_can_signal_message(msg=552, signal={"PM25Color": 1})

    def pm25_yellow(self):
        """
        230
        """
        self.can_service.send_can_signal_message(msg=552, signal={"PM25Color": 2})

    def pm25_red(self):
        """
        231
        """
        self.can_service.send_can_signal_message(msg=552, signal={"PM25Color": 3})

    def ads_off(self):
        """
        232
        """
        self.can_service.send_can_signal_message(msg=546, signal={"ADSSt": 0})

    def ads_on(self):
        """
        233
        """
        self.can_service.send_can_signal_message(msg=546, signal={"ADSSt": 1})

    def fl_seat_vent_off(self):
        """
        234
        """
        self.can_service.send_can_signal_message(msg=582, signal={"SeatVentInd_FL": 0})

    def fl_seat_vent_level_1(self):
        """
        235
        """
        self.can_service.send_can_signal_message(msg=582, signal={"SeatVentInd_FL": 1})

    def fl_seat_vent_level_2(self):
        """
        236
        """
        self.can_service.send_can_signal_message(msg=582, signal={"SeatVentInd_FL": 2})

    def fl_seat_vent_level_3(self):
        """
        237
        """
        self.can_service.send_can_signal_message(msg=582, signal={"SeatVentInd_FL": 3})

    def fr_seat_vent_off(self):
        """
        238
        """
        self.can_service.send_can_signal_message(msg=582, signal={"SeatVentInd_FR": 0})

    def fr_seat_vent_level_1(self):
        """
        239
        """
        self.can_service.send_can_signal_message(msg=582, signal={"SeatVentInd_FR": 1})

    def fr_seat_vent_level_2(self):
        """
        240
        """
        self.can_service.send_can_signal_message(msg=582, signal={"SeatVentInd_FR": 2})

    def fr_seat_vent_level_3(self):
        """
        241
        """
        self.can_service.send_can_signal_message(msg=582, signal={"SeatVentInd_FR": 3})

    def fl_seat_heat_off(self):
        """
        242
        """
        self.can_service.send_can_signal_message(msg=582, signal={"SeatheatInd_FL": 0})

    def fl_seat_heat_level_1(self):
        """
        243
        """
        self.can_service.send_can_signal_message(msg=582, signal={"SeatheatInd_FL": 1})

    def fl_seat_heat_level_2(self):
        """
        244
        """
        self.can_service.send_can_signal_message(msg=582, signal={"SeatheatInd_FL": 2})

    def fl_seat_heat_level_3(self):
        """
        245
        """
        self.can_service.send_can_signal_message(msg=582, signal={"SeatheatInd_FL": 3})

    def fr_seat_heat_off(self):
        """
        246
        """
        self.can_service.send_can_signal_message(msg=582, signal={"SeatheatInd_FR": 0})

    def fr_seat_heat_level_1(self):
        """
        247
        """
        self.can_service.send_can_signal_message(msg=582, signal={"SeatheatInd_FR": 1})

    def fr_seat_heat_level_2(self):
        """
        248
        """
        self.can_service.send_can_signal_message(msg=582, signal={"SeatheatInd_FR": 2})

    def fr_seat_heat_level_3(self):
        """
        249
        """
        self.can_service.send_can_signal_message(msg=582, signal={"SeatheatInd_FR": 3})

    def fl_wavemassage_mode(self):
        """
        250
        """
        self.can_service.send_can_signal_message(msg=583, signal={"SeatMassageModeInd_FL": 1})

    def fl_snakemassage_mode(self):
        """
        251
        """
        self.can_service.send_can_signal_message(msg=583, signal={"SeatMassageModeInd_FL": 2})

    def fl_butterflymassage_mode(self):
        """
        252
        """
        self.can_service.send_can_signal_message(msg=583, signal={"SeatMassageModeInd_FL": 3})

    def fl_seatmassage_level_1(self):
        """
        253
        """
        self.can_service.send_can_signal_message(msg=583, signal={"SeatMassageLevelInd_FL": 0})

    def fl_seatmassage_level_2(self):
        """
        254
        """
        self.can_service.send_can_signal_message(msg=583, signal={"SeatMassageLevelInd_FL": 1})

    def fl_seatmassage_level_3(self):
        """
        255
        """
        self.can_service.send_can_signal_message(msg=583, signal={"SeatMassageLevelInd_FL": 2})

    def fl_seatmassage_off(self):
        """
        256
        """
        self.can_service.send_can_signal_message(msg=583, signal={"SeatMassageFuncInd_FL": 0})

    def fl_seatmassage_on(self):
        """
        257
        """
        self.can_service.send_can_signal_message(msg=583, signal={"SeatMassageFuncInd_FL": 1})

    def fr_wavemassage_mode(self):
        """
        258
        """
        self.can_service.send_can_signal_message(msg=583, signal={"SeatMassageModeInd_FR": 1})

    def fr_snakemassage_mode(self):
        """
        259
        """
        self.can_service.send_can_signal_message(msg=583, signal={"SeatMassageModeInd_FR": 2})

    def fr_butterflymassage_mode(self):
        """
        260
        """
        self.can_service.send_can_signal_message(msg=583, signal={"SeatMassageModeInd_FR": 3})

    def fr_seatmassage_level_1(self):
        """
        261
        """
        self.can_service.send_can_signal_message(msg=583, signal={"SeatMassageLevelInd_FR": 0})

    def fr_seatmassage_level_2(self):
        """
        262
        """
        self.can_service.send_can_signal_message(msg=583, signal={"SeatMassageLevelInd_FR": 1})

    def fr_seatmassage_level_3(self):
        """
        263
        """
        self.can_service.send_can_signal_message(msg=583, signal={"SeatMassageLevelInd_FR": 2})

    def fr_seatmassage_off(self):
        """
        264
        """
        self.can_service.send_can_signal_message(msg=583, signal={"SeatMassageFuncInd_FR": 0})

    def fr_seatmassage_on(self):
        """
        265
        """
        self.can_service.send_can_signal_message(msg=583, signal={"SeatMassageFuncInd_FR": 1})

    def rl_seat_vent_off(self):
        """
        266
        """
        self.can_service.send_can_signal_message(msg=583, signal={"SeatVentInd_RL": 0})

    def rl_seat_vent_level_1(self):
        """
        267
        """
        self.can_service.send_can_signal_message(msg=583, signal={"SeatVentInd_RL": 1})

    def rl_seat_vent_level_2(self):
        """
        268
        """
        self.can_service.send_can_signal_message(msg=583, signal={"SeatVentInd_RL": 2})

    def rl_seat_vent_level_3(self):
        """
        269
        """
        self.can_service.send_can_signal_message(msg=583, signal={"SeatVentInd_RL": 3})

    def rr_seat_vent_off(self):
        """
        270
        """
        self.can_service.send_can_signal_message(msg=583, signal={"SeatVentInd_RR": 0})

    def rr_seat_vent_level_1(self):
        """
        271
        """
        self.can_service.send_can_signal_message(msg=583, signal={"SeatVentInd_RR": 1})

    def rr_seat_vent_level_2(self):
        """
        272
        """
        self.can_service.send_can_signal_message(msg=583, signal={"SeatVentInd_RR": 2})

    def rr_seat_vent_level_3(self):
        """
        273
        """
        self.can_service.send_can_signal_message(msg=583, signal={"SeatVentInd_RR": 3})

    def rl_seat_heat_off(self):
        """
        274
        """
        self.can_service.send_can_signal_message(msg=582, signal={"SeatheatInd_RL": 0})

    def rl_seat_heat_level_1(self):
        """
        275
        """
        self.can_service.send_can_signal_message(msg=582, signal={"SeatheatInd_RL": 1})

    def rl_seat_heat_level_2(self):
        """
        276
        """
        self.can_service.send_can_signal_message(msg=582, signal={"SeatheatInd_RL": 2})

    def rl_seat_heat_level_3(self):
        """
        277
        """
        self.can_service.send_can_signal_message(msg=582, signal={"SeatheatInd_RL": 3})

    def rr_seat_heat_off(self):
        """
        278
        """
        self.can_service.send_can_signal_message(msg=582, signal={"SeatheatInd_RR": 0})

    def rr_seat_heat_level_1(self):
        """
        279
        """
        self.can_service.send_can_signal_message(msg=582, signal={"SeatheatInd_RR": 1})

    def rr_seat_heat_level_2(self):
        """
        280
        """
        self.can_service.send_can_signal_message(msg=582, signal={"SeatheatInd_RR": 2})

    def rr_seat_heat_level_3(self):
        """
        281
        """
        self.can_service.send_can_signal_message(msg=582, signal={"SeatheatInd_RR": 3})

    def rl_wavemassage_mode(self):
        """
        282
        """
        self.can_service.send_can_signal_message(msg=583, signal={"SeatMassageModeInd_RL": 1})

    def rl_snakemassage_mode(self):
        """
        283
        """
        self.can_service.send_can_signal_message(msg=583, signal={"SeatMassageModeInd_RL": 2})

    def rl_butterflymassage_mode(self):
        """
        284
        """
        self.can_service.send_can_signal_message(msg=583, signal={"SeatMassageModeInd_RL": 3})

    def rl_seatmassage_level_1(self):
        """
        285
        """
        self.can_service.send_can_signal_message(msg=583, signal={"SeatMassageLevelInd_RL": 0})

    def rl_seatmassage_level_2(self):
        """
        286
        """
        self.can_service.send_can_signal_message(msg=583, signal={"SeatMassageLevelInd_RL": 1})

    def rl_seatmassage_level_3(self):
        """
        287
        """
        self.can_service.send_can_signal_message(msg=583, signal={"SeatMassageLevelInd_RL": 2})

    def rl_seatmassage_off(self):
        """
        288
        """
        self.can_service.send_can_signal_message(msg=583, signal={"SeatMassageFuncInd_RL": 0})

    def rl_seatmassage_on(self):
        """
        289
        """
        self.can_service.send_can_signal_message(msg=583, signal={"SeatMassageFuncInd_RL": 1})

    def rr_wavemassage_mode(self):
        """
        290
        """
        self.can_service.send_can_signal_message(msg=583, signal={"SeatMassageModeInd_RR": 1})

    def rr_snakemassage_mode(self):
        """
        291
        """
        self.can_service.send_can_signal_message(msg=583, signal={"SeatMassageModeInd_RR": 2})

    def rr_butterflymassage_mode(self):
        """
        292
        """
        self.can_service.send_can_signal_message(msg=583, signal={"SeatMassageModeInd_RR": 3})

    def rr_seatmassage_level_1(self):
        """
        293
        """
        self.can_service.send_can_signal_message(msg=583, signal={"SeatMassageLevelInd_RR": 0})

    def rr_seatmassage_level_2(self):
        """
        294
        """
        self.can_service.send_can_signal_message(msg=583, signal={"SeatMassageLevelInd_RR": 1})

    def rr_seatmassage_level_3(self):
        """
        295
        """
        self.can_service.send_can_signal_message(msg=583, signal={"SeatMassageLevelInd_RR": 2})

    def rr_seatmassage_off(self):
        """
        296
        """
        self.can_service.send_can_signal_message(msg=583, signal={"SeatMassageFuncInd_RR": 0})

    def rr_seatmassage_on(self):
        """
        297
        """
        self.can_service.send_can_signal_message(msg=583, signal={"SeatMassageFuncInd_RR": 1})

    def fl_seat_memory_success(self):
        """
        298
        """
        self.can_service.send_can_signal_message(msg=564, signal={"MemoryRemind": 1})

    def fr_seat_memory_success(self):
        """
        299
        """
        self.can_service.send_can_signal_message(msg=581, signal={"SeatPostionMemoryResult_PSCU": 1})

    def rearwindow_heating_on(self):
        """
        300
        """
        self.can_service.send_can_signal_message(msg=576, signal={"RearWindowHeatingStatus": 1})

    def rearwindow_heating_off(self):
        """
        301
        """
        self.can_service.send_can_signal_message(msg=576, signal={"RearWindowHeatingStatus": 0})

    def steeringwheel_heat_off(self):
        """
        302
        """
        self.can_service.send_can_signal_message(msg=561, signal={"BCM_SteeringWheelheatInd": 0})

    def steeringwheel_heat_on(self):
        """
        303
        """
        self.can_service.send_can_signal_message(msg=561, signal={"BCM_SteeringWheelheatInd": 1})

    def luggagedoor_closed(self):
        """
        304
        """
        self.can_service.send_can_signal_message(msg=578, signal={"LuggageDoorWorkingSt": 2})

    def luggagedoor_manual(self):
        """
        305
        """
        self.can_service.send_can_signal_message(msg=578, signal={"LuggageDoorWorkingSt": 3})

    def luggagedoor_closing(self):
        """
        306
        """
        self.can_service.send_can_signal_message(msg=578, signal={"LuggageDoorWorkingSt": 4})

    def luggagedoor_opening(self):
        """
        307
        """
        self.can_service.send_can_signal_message(msg=578, signal={"LuggageDoorWorkingSt": 5})

    def fragrance_off(self):
        """
        308
        """
        self.can_service.send_can_signal_message(msg=561, signal={"BCM_FragranceWorkingStatus": 0})

    def fragrance_on(self):
        """
        309
        """
        self.can_service.send_can_signal_message(msg=561, signal={"BCM_FragranceWorkingStatus": 1})

    def fragrance_type_refreshmode(self):
        """
        312
        """
        self.can_service.send_can_signal_message(msg=561, signal={"BCM_FragranceType": 0})

    def fragrance_type_hongqimode(self):
        """
        313
        """
        self.can_service.send_can_signal_message(msg=561, signal={"BCM_FragranceType": 1})

    def fragrance_type_calmmode(self):
        """
        314
        """
        self.can_service.send_can_signal_message(msg=561, signal={"BCM_FragranceType": 2})

    def fragrance_type_user_defined(self):
        """
        315
        """
        self.can_service.send_can_signal_message(msg=561, signal={"BCM_FragranceType": 3})

    def fragrance_concentration_level_1(self):
        """
        316
        """
        self.can_service.send_can_signal_message(msg=561, signal={"BCM_FragranceConcentration": 0})

    def fragrance_concentration_level_2(self):
        """
        317
        """
        self.can_service.send_can_signal_message(msg=561, signal={"BCM_FragranceConcentration": 1})

    def fragrance_concentration_level_3(self):
        """
        318
        """
        self.can_service.send_can_signal_message(msg=561, signal={"BCM_FragranceConcentration": 2})

    def fragrance_time_1min(self):
        """
        319
        """
        self.can_service.send_can_signal_message(msg=561, signal={"BCM_FragranceTime": 0})

    def fragrance_time_3min(self):
        """
        320
        """
        self.can_service.send_can_signal_message(msg=561, signal={"BCM_FragranceTime": 1})

    def fragrance_time_10min(self):
        """
        321
        """
        self.can_service.send_can_signal_message(msg=561, signal={"BCM_FragranceTime": 2})

    def fragrance_autofunction_off(self):
        """
        322
        """
        self.can_service.send_can_signal_message(msg=561, signal={"BCM_FragranceAutoFunctionStatu_s": 0})

    def fragrance_autofunction_on(self):
        """
        323
        """
        self.can_service.send_can_signal_message(msg=561, signal={"BCM_FragranceAutoFunctionStatu_s": 1})

    def fragrance_noerror(self):
        """
        324
        """
        self.can_service.send_can_signal_message(msg=561, signal={"BCM_FragranceErrorSt": 0})

    def fragrance_error(self):
        """
        325
        """
        self.can_service.send_can_signal_message(msg=561, signal={"BCM_FragranceErrorSt": 1})

    def sunshade_opening(self):
        """
        326
        """
        self.can_service.send_can_signal_message(msg=566, signal={"WorkingStatus_SSM": 1})

    def sunshade_closing(self):
        """
        327
        """
        self.can_service.send_can_signal_message(msg=566, signal={"WorkingStatus_SSM": 2})

    def sunroof_opening(self):
        """
        328
        """
        self.can_service.send_can_signal_message(msg=566, signal={"WorkingStatus_SMA": 1})

    def sunroof_closing(self):
        """
        329
        """
        self.can_service.send_can_signal_message(msg=566, signal={"WorkingStatus_SMA": 2})

    def remote_mode_on(self):
        """
        330
        """
        self.can_service.send_can_signal_message(msg=688, signal={"GW_RemoteVehicleMode": 0X1})

    def remote_mode_off(self):
        """
        331
        """
        self.can_service.send_can_signal_message(msg=688, signal={"GW_RemoteVehicleMode": 0X0})

    def sunroof_inactive(self):
        """
        334
        """
        self.can_service.send_can_signal_message(msg=566, signal={"WorkingStatus_SMA": 0X0})

    def sunroof_open(self):
        """
        335
        """
        self.can_service.send_can_signal_message(msg=566, signal={"WorkingStatus_SMA": 0X1})

    def sunroof_close(self):
        """
        336
        """
        self.can_service.send_can_signal_message(msg=566, signal={"WorkingStatus_SMA": 0X2})

    def sunshade_inactive(self):
        """
        337
        """
        self.can_service.send_can_signal_message(msg=566, signal={"WorkingStatus_SSM": 0X0})

    def sunshade_open(self):
        """
        338
        """
        self.can_service.send_can_signal_message(msg=566, signal={"WorkingStatus_SSM": 0X1})

    def sunshade_close(self):
        """
        339
        """
        self.can_service.send_can_signal_message(msg=566, signal={"WorkingStatus_SSM": 0X2})

    def sober_mode_on(self):
        """
        340
        """
        self.can_service.send_can_signal_message(msg=664, signal={"HU_SobermodeFunctionInd": 0X1})

    def leisure_mode_on(self):
        """
        341
        """
        self.can_service.send_can_signal_message(msg=664, signal={"HU_LeisuremodeFunctionInd": 0X1})

    def blow_level_5(self):
        """
        342
        """
        self.can_service.send_can_signal_message(msg=546, signal={"BlowLevel": 0X5})

    def left_temperature_18(self):
        """
        343
        """
        self.can_service.send_can_signal_message(msg=552, signal={"ExpectTemp_RearLeft": 0x6})

    def left_temperature_24(self):
        """
        344
        """
        self.can_service.send_can_signal_message(msg=552, signal={"ExpectTemp_RearLeft": 0x18})

    def right_temperature_18(self):
        """
        345
        """
        self.can_service.send_can_signal_message(msg=552, signal={"ExpectTemp_RearRight": 0X6})

    def right_temperature_24(self):
        """
        346
        """
        self.can_service.send_can_signal_message(msg=552, signal={"ExpectTemp_RearRight": 0X18})

    def blowmode_face(self):
        """
        347
        """
        self.can_service.send_can_signal_message(msg=552, signal={"BlowMode_Rear": 0X1})

    def automode_close(self):
        """
        348
        """
        self.can_service.send_can_signal_message(msg=552, signal={"AutoMode_R": 0x0})

    def automode_open(self):
        """
        349
        """
        self.can_service.send_can_signal_message(msg=552, signal={"AutoMode_R": 0x1})

    def ac_woring_on(self):
        """
        350
        """
        self.can_service.send_can_signal_message(msg=546, signal={"WorkingSt_AC": 0x1})

    def ac_woring_off(self):
        """
        351
        """
        self.can_service.send_can_signal_message(msg=546, signal={"WorkingSt_AC": 0x0})

    def seatvent_rear_left_close(self):
        """
        352
        """
        self.can_service.send_can_signal_message(msg=583, signal={"SeatVentInd_RL": 0X0})

    def seatvent_rear_left_2(self):
        """
        353
        """
        self.can_service.send_can_signal_message(msg=583, signal={"SeatVentInd_RL": 0X2})

    def seatvent_rear_right_3(self):
        """
        354
        """
        self.can_service.send_can_signal_message(msg=583, signal={"SeatVentInd_RR": 0X3})

    def seatvent_rear_right_close(self):
        """
        355
        """
        self.can_service.send_can_signal_message(msg=583, signal={"SeatVentInd_RR": 0X0})

    def seatvent_rear_right_2(self):
        """
        356
        """
        self.can_service.send_can_signal_message(msg=583, signal={"SeatVentInd_RR": 0X2})

    def seatheat_rear_left_close(self):
        """
        357
        """
        self.can_service.send_can_signal_message(msg=582, signal={"SeatheatInd_RL": 0X0})

    def seatheat_rear_left_3(self):
        """
        358
        """
        self.can_service.send_can_signal_message(msg=582, signal={"SeatheatInd_RL": 0X3})

    def seatheat_rear_right_close(self):
        """
        359
        """
        self.can_service.send_can_signal_message(msg=582, signal={"SeatheatInd_RR": 0X0})

    def seatheat_rear_right_3(self):
        """
        360
        """
        self.can_service.send_can_signal_message(msg=582, signal={"SeatheatInd_RR": 0X3})

    def seat_fun_left_open(self):
        """
        361
        """
        self.can_service.send_can_signal_message(msg=583, signal={"SeatMassageFuncInd_RL": 0x1})

    def seatmode_left_wave(self):
        """
        362
        """
        self.can_service.send_can_signal_message(msg=583, signal={"SeatMassageModeInd_RL": 0x0})

    def seatlevel_left_2(self):
        """
        363
        """
        self.can_service.send_can_signal_message(msg=583, signal={"SeatMassageLevelInd_RL": 0X1})

    def seat_fun_right_open(self):
        """
        364
        """
        self.can_service.send_can_signal_message(msg=583, signal={"SeatMassageFuncInd_RR": 0x1})

    def seatmode_right_butterfly(self):
        """
        365
        """
        self.can_service.send_can_signal_message(msg=583, signal={"SeatMassageModeInd_RR": 0x2})

    def seatlevel_right_3(self):
        """
        366
        """
        self.can_service.send_can_signal_message(msg=583, signal={"SeatMassageLevelInd_RR": 0X2})

    ####################################################################################################################
    #                                                                                                                  #
    #                                           用于生成表格 --> CAN信号对比(CanCompare)                                  #
    #                                                                                                                  #
    ####################################################################################################################

    def cancompare_adv_park_click(self, stack) -> tuple:
        """
        自动泊车寻车开关开启
        """
        return self.can_service.check_signal_value(stack=stack, msg_id=737, sig_name="FCP_APAFunctionReq", expect_value=2, count=1, exact=False),

    def cancompare_adv_park_click1(self, stack) -> tuple:
        """
        自动泊车寻车开关开启1
        """
        return self.can_service.check_signal_value(stack=stack, msg_id=737, sig_name="FCP_APAFunctionReq", expect_value=1, count=1, exact=False),

    def cancompare_adv_park_click2(self, stack) -> tuple:
        """
        自动泊车寻车开关开启2
        """
        return self.can_service.check_signal_value(stack=stack, msg_id=737, sig_name="FCP_APAFunctionReq", expect_value=1, count=1, exact=False),

    def cancompare_adv_park_click3(self, stack) -> tuple:
        """
        自动泊车寻车开关开启3
        """
        return self.can_service.check_signal_value(stack=stack, msg_id=737, sig_name="FCP_APAFunctionReq", expect_value=1, count=1, exact=False),

    def cancompare_adv_park_click4(self, stack) -> tuple:
        """
        自动泊车寻车开关开启4
        """
        return self.can_service.check_signal_value(stack=stack, msg_id=737, sig_name="FCP_APAFunctionReq", expect_value=1, count=1, exact=False),

    def cancompare_adv_park_click5(self, stack) -> tuple:
        """
        自动泊车寻车开关开启5
        """
        return self.can_service.check_signal_value(stack=stack, msg_id=737, sig_name="FCP_APAFunctionReq", expect_value=1, count=1, exact=False),

    def cancompare_adv_park_click6(self, stack) -> tuple:
        """
        自动泊车寻车开关开启6
        """
        return self.can_service.check_signal_value(stack=stack, msg_id=737, sig_name="FCP_APAFunctionReq", expect_value=1, count=1, exact=False),

    def cancompare_adv_park_click7(self, stack) -> tuple:
        """
        自动泊车寻车开关开启7
        """
        return self.can_service.check_signal_value(stack=stack, msg_id=737, sig_name="FCP_APAFunctionReq", expect_value=1, count=1, exact=False),

    def cancompare_adv_park_click8(self, stack) -> tuple:
        """
        自动泊车寻车开关开启8
        """
        return self.can_service.check_signal_value(stack=stack, msg_id=737, sig_name="FCP_APAFunctionReq", expect_value=1, count=1, exact=False),

    def cancompare_adv_park_click9(self, stack) -> tuple:
        """
        自动泊车寻车开关开启9
        """
        return self.can_service.check_signal_value(stack=stack, msg_id=737, sig_name="FCP_APAFunctionReq", expect_value=1, count=1, exact=False),

    def cancompare_adv_park_click10(self, stack) -> tuple:
        """
        自动泊车寻车开关开启10
        """
        return self.can_service.check_signal_value(stack=stack, msg_id=737, sig_name="FCP_APAFunctionReq", expect_value=1, count=1, exact=False),

    def cancompare_avp_click(self, stack) -> tuple:
        """
        代客泊车开关打开
        """
        return self.can_service.check_signal_value(stack=stack, msg_id=737, sig_name="FCP_AVPFunctionReq", expect_value=2, count=1, exact=False),

    def cancompare_avm_click(self, stack) -> tuple:
        """
        360环视开关打开
        """
        return self.can_service.check_signal_value(stack=stack, msg_id=737, sig_name="FCP_AVSFunctionReq", expect_value=2, count=1, exact=False),

    ####################################################################################################################
    #                                                                                                                  #
    #                                           用于生成表格 --> 图片对比(ImageCompare)                                   #
    #                                                                                                                  #
    ####################################################################################################################

    def compare_rear_window_heating_status(self) -> tuple:
        """
        后风窗强制除霜开关高亮
        """
        compare_property = CompareProperty()
        image_name = "rear_window_heating_status"
        dark = "bcm_rear_window_heating_status.bmp"
        light = "bcm_rear_window_heating_status.bmp"
        compare_type = "亮图"
        compare_property.set_value(name=image_name,
                                   compare_type=compare_type,
                                   screen_shot_images_path=self.screenshot,
                                   light_template="\\".join([self.templates, light]),
                                   dark_template="\\".join([self.templates, dark]),
                                   positions=[(406, 63, 96, 66)],
                                   similarity=90.0,
                                   gray=False,
                                   gray_threshold=0)
        result = self.image_compare.compare(compare_property)
        files = self.image_compare.handle_images(compare_property, self.temp)
        return result, files, compare_property.type, compare_property.light_template, compare_property.dark_template

    def compare_steering_wheel_heat_presevation(self) -> tuple:
        """
        方向盘加热保持中
        """
        compare_property = CompareProperty()
        image_name = "steering_wheel_heat_presevation"
        dark = "bcm_wheel_heating_statusone.bmp"
        light = "bcm_wheel_heating_statusone.bmp"
        compare_type = "暗图"
        compare_property.set_value(name=image_name,
                                   compare_type=compare_type,
                                   screen_shot_images_path=self.screenshot,
                                   light_template="\\".join([self.templates, light]),
                                   dark_template="\\".join([self.templates, dark]),
                                   positions=[(44, 61, 71, 66)],
                                   similarity=90.0,
                                   gray=False,
                                   gray_threshold=0)
        result = self.image_compare.compare(compare_property)
        files = self.image_compare.handle_images(compare_property, self.temp)
        return result, files, compare_property.type, compare_property.light_template, compare_property.dark_template

    def compare_steering_wheel_heat_heating(self) -> tuple:
        """
        方向盘加热加热中
        """
        compare_property = CompareProperty()
        image_name = "steering_wheel_heat_heating"
        dark = "bcm_wheel_heating_statustwo.bmp"
        light = "bcm_wheel_heating_statustwo.bmp"
        compare_type = "亮图"
        compare_property.set_value(name=image_name,
                                   compare_type=compare_type,
                                   screen_shot_images_path=self.screenshot,
                                   light_template="\\".join([self.templates, light]),
                                   dark_template="\\".join([self.templates, dark]),
                                   positions=[(44, 61, 71, 66)],
                                   similarity=90.0,
                                   gray=False,
                                   gray_threshold=0)
        result = self.image_compare.compare(compare_property)
        files = self.image_compare.handle_images(compare_property, self.temp)
        return result, files, compare_property.type, compare_property.light_template, compare_property.dark_template

    def compare_one_button_start_off(self) -> tuple:
        """
        一键启动虚拟开关置灰
        """
        compare_property = CompareProperty()
        image_name = "one_button_start_off"
        dark = "bcm_one_button_start.bmp"
        light = "bcm_one_button_start.bmp"
        compare_type = "暗图"
        compare_property.set_value(name=image_name,
                                   compare_type=compare_type,
                                   screen_shot_images_path=self.screenshot,
                                   light_template="\\".join([self.templates, light]),
                                   dark_template="\\".join([self.templates, dark]),
                                   positions=[(603, 606, 76, 83)],
                                   similarity=90.0,
                                   gray=False,
                                   gray_threshold=0)
        result = self.image_compare.compare(compare_property)
        files = self.image_compare.handle_images(compare_property, self.temp)
        return result, files, compare_property.type, compare_property.light_template, compare_property.dark_template

    def compare_back_trunk_of(self) -> tuple:
        """
        后备箱关闭
        """
        compare_property = CompareProperty()
        image_name = "back_trunk_of"
        dark = "bcm_back_trunk.bmp"
        light = "bcm_back_trunk.bmp"
        compare_type = "暗图"
        compare_property.set_value(name=image_name,
                                   compare_type=compare_type,
                                   screen_shot_images_path=self.screenshot,
                                   light_template="\\".join([self.templates, light]),
                                   dark_template="\\".join([self.templates, dark]),
                                   positions=[(44, 645, 108, 71)],
                                   similarity=90.0,
                                   gray=False,
                                   gray_threshold=0)
        result = self.image_compare.compare(compare_property)
        files = self.image_compare.handle_images(compare_property, self.temp)
        return result, files, compare_property.type, compare_property.light_template, compare_property.dark_template

    def compare_luggage_door_manual_on(self) -> tuple:
        """
        弹出关闭中提示框
        """
        compare_property = CompareProperty()
        image_name = "luggage_door_manual_on"
        dark = "bcm_luggage_door_manual_on.bmp"
        light = "bcm_luggage_door_manual_on.bmp"
        compare_type = "亮图"
        compare_property.set_value(name=image_name,
                                   compare_type=compare_type,
                                   screen_shot_images_path=self.screenshot,
                                   light_template="\\".join([self.templates, light]),
                                   dark_template="\\".join([self.templates, dark]),
                                   positions=[(29, 590, 136, 125)],
                                   similarity=90.0,
                                   gray=False,
                                   gray_threshold=0)
        result = self.image_compare.compare(compare_property)
        files = self.image_compare.handle_images(compare_property, self.temp)
        return result, files, compare_property.type, compare_property.light_template, compare_property.dark_template

    def compare_luggage_door_manual_off(self) -> tuple:
        """
        关闭中提示框消失
        """
        compare_property = CompareProperty()
        image_name = "luggage_door_manual_off"
        dark = "bcm_luggage_door_manual_off.bmp"
        light = "bcm_luggage_door_manual_off.bmp"
        compare_type = "暗图"
        compare_property.set_value(name=image_name,
                                   compare_type=compare_type,
                                   screen_shot_images_path=self.screenshot,
                                   light_template="\\".join([self.templates, light]),
                                   dark_template="\\".join([self.templates, dark]),
                                   positions=[(29, 590, 136, 125)],
                                   similarity=90.0,
                                   gray=False,
                                   gray_threshold=0)
        result = self.image_compare.compare(compare_property)
        files = self.image_compare.handle_images(compare_property, self.temp)
        return result, files, compare_property.type, compare_property.light_template, compare_property.dark_template

    def compare_adv_searchingforpark_in(self) -> tuple:
        """
        APA(自动泊车)高亮开关1
        """
        compare_property = CompareProperty()
        image_name = "adv_searchingforpark_in"
        dark = "adas_apa_switchone.bmp"
        light = "adas_apa_switchone.bmp"
        compare_type = "亮图"
        compare_property.set_value(name=image_name,
                                   compare_type=compare_type,
                                   screen_shot_images_path=self.screenshot,
                                   light_template="\\".join([self.templates, light]),
                                   dark_template="\\".join([self.templates, dark]),
                                   positions=[(742, 643, 130, 73)],
                                   similarity=90.0,
                                   gray=False,
                                   gray_threshold=0)
        result = self.image_compare.compare(compare_property)
        files = self.image_compare.handle_images(compare_property, self.temp)
        return result, files, compare_property.type, compare_property.light_template, compare_property.dark_template

    def compare_adv_searchingforpark_out(self) -> tuple:
        """
        APA(自动泊车)高亮开关2
        """
        compare_property = CompareProperty()
        image_name = "adv_searchingforpark_out"
        dark = "adas_apa_switchtwo.bmp"
        light = "adas_apa_switchtwo.bmp"
        compare_type = "亮图"
        compare_property.set_value(name=image_name,
                                   compare_type=compare_type,
                                   screen_shot_images_path=self.screenshot,
                                   light_template="\\".join([self.templates, light]),
                                   dark_template="\\".join([self.templates, dark]),
                                   positions=[(742, 643, 130, 73)],
                                   similarity=90.0,
                                   gray=False,
                                   gray_threshold=0)
        result = self.image_compare.compare(compare_property)
        files = self.image_compare.handle_images(compare_property, self.temp)
        return result, files, compare_property.type, compare_property.light_template, compare_property.dark_template

    def compare_adv_mapupdate(self) -> tuple:
        """
        APA(自动泊车)高亮开关3
        """
        compare_property = CompareProperty()
        image_name = "adv_mapupdate"
        dark = "adas_apa_switchthree.bmp"
        light = "adas_apa_switchthree.bmp"
        compare_type = "亮图"
        compare_property.set_value(name=image_name,
                                   compare_type=compare_type,
                                   screen_shot_images_path=self.screenshot,
                                   light_template="\\".join([self.templates, light]),
                                   dark_template="\\".join([self.templates, dark]),
                                   positions=[(742, 643, 130, 73)],
                                   similarity=90.0,
                                   gray=False,
                                   gray_threshold=0)
        result = self.image_compare.compare(compare_property)
        files = self.image_compare.handle_images(compare_property, self.temp)
        return result, files, compare_property.type, compare_property.light_template, compare_property.dark_template

    def compare_adv_parkingin(self) -> tuple:
        """
        APA(自动泊车)高亮开关4
        """
        compare_property = CompareProperty()
        image_name = "adv_parkingin"
        dark = "adas_apa_switchfour.bmp"
        light = "adas_apa_switchfour.bmp"
        compare_type = "亮图"
        compare_property.set_value(name=image_name,
                                   compare_type=compare_type,
                                   screen_shot_images_path=self.screenshot,
                                   light_template="\\".join([self.templates, light]),
                                   dark_template="\\".join([self.templates, dark]),
                                   positions=[(742, 643, 130, 73)],
                                   similarity=90.0,
                                   gray=False,
                                   gray_threshold=0)
        result = self.image_compare.compare(compare_property)
        files = self.image_compare.handle_images(compare_property, self.temp)
        return result, files, compare_property.type, compare_property.light_template, compare_property.dark_template

    def compare_adv_parkingout(self) -> tuple:
        """
        APA(自动泊车)高亮开关5
        """
        compare_property = CompareProperty()
        image_name = "adv_parkingout"
        dark = "adas_apa_switchfive.bmp"
        light = "adas_apa_switchfive.bmp"
        compare_type = "亮图"
        compare_property.set_value(name=image_name,
                                   compare_type=compare_type,
                                   screen_shot_images_path=self.screenshot,
                                   light_template="\\".join([self.templates, light]),
                                   dark_template="\\".join([self.templates, dark]),
                                   positions=[(742, 643, 130, 73)],
                                   similarity=90.0,
                                   gray=False,
                                   gray_threshold=0)
        result = self.image_compare.compare(compare_property)
        files = self.image_compare.handle_images(compare_property, self.temp)
        return result, files, compare_property.type, compare_property.light_template, compare_property.dark_template

    def compare_adv_driveroverride(self) -> tuple:
        """
        APA(自动泊车)高亮开关6
        """
        compare_property = CompareProperty()
        image_name = "adv_driveroverride"
        dark = "adas_apa_switchsix.bmp"
        light = "adas_apa_switchsix.bmp"
        compare_type = "亮图"
        compare_property.set_value(name=image_name,
                                   compare_type=compare_type,
                                   screen_shot_images_path=self.screenshot,
                                   light_template="\\".join([self.templates, light]),
                                   dark_template="\\".join([self.templates, dark]),
                                   positions=[(742, 643, 130, 73)],
                                   similarity=90.0,
                                   gray=False,
                                   gray_threshold=0)
        result = self.image_compare.compare(compare_property)
        files = self.image_compare.handle_images(compare_property, self.temp)
        return result, files, compare_property.type, compare_property.light_template, compare_property.dark_template

    def compare_adv_suspended(self) -> tuple:
        """
        APA(自动泊车)高亮开关7
        """
        compare_property = CompareProperty()
        image_name = "adv_suspended"
        dark = "adas_apa_switchseven.bmp"
        light = "adas_apa_switchseven.bmp"
        compare_type = "亮图"
        compare_property.set_value(name=image_name,
                                   compare_type=compare_type,
                                   screen_shot_images_path=self.screenshot,
                                   light_template="\\".join([self.templates, light]),
                                   dark_template="\\".join([self.templates, dark]),
                                   positions=[(742, 643, 130, 73)],
                                   similarity=90.0,
                                   gray=False,
                                   gray_threshold=0)
        result = self.image_compare.compare(compare_property)
        files = self.image_compare.handle_images(compare_property, self.temp)
        return result, files, compare_property.type, compare_property.light_template, compare_property.dark_template

    def compare_adv_abort(self) -> tuple:
        """
        APA(自动泊车)高亮开关8
        """
        compare_property = CompareProperty()
        image_name = "adv_abort"
        dark = "adas_apa_switcheight.bmp"
        light = "adas_apa_switcheight.bmp"
        compare_type = "亮图"
        compare_property.set_value(name=image_name,
                                   compare_type=compare_type,
                                   screen_shot_images_path=self.screenshot,
                                   light_template="\\".join([self.templates, light]),
                                   dark_template="\\".join([self.templates, dark]),
                                   positions=[(742, 643, 130, 73)],
                                   similarity=90.0,
                                   gray=False,
                                   gray_threshold=0)
        result = self.image_compare.compare(compare_property)
        files = self.image_compare.handle_images(compare_property, self.temp)
        return result, files, compare_property.type, compare_property.light_template, compare_property.dark_template

    def compare_adv_finish(self) -> tuple:
        """
        APA(自动泊车)高亮开关9
        """
        compare_property = CompareProperty()
        image_name = "adv_finish"
        dark = "adas_apa_switchnine.bmp"
        light = "adas_apa_switchnine.bmp"
        compare_type = "亮图"
        compare_property.set_value(name=image_name,
                                   compare_type=compare_type,
                                   screen_shot_images_path=self.screenshot,
                                   light_template="\\".join([self.templates, light]),
                                   dark_template="\\".join([self.templates, dark]),
                                   positions=[(742, 643, 130, 73)],
                                   similarity=90.0,
                                   gray=False,
                                   gray_threshold=0)
        result = self.image_compare.compare(compare_property)
        files = self.image_compare.handle_images(compare_property, self.temp)
        return result, files, compare_property.type, compare_property.light_template, compare_property.dark_template

    def compare_adv_error(self) -> tuple:
        """
        APA(自动泊车)高亮开关10
        """
        compare_property = CompareProperty()
        image_name = "adv_error"
        dark = "adas_apa_switchonezero.bmp"
        light = "adas_apa_switchonezero.bmp"
        compare_type = "亮图"
        compare_property.set_value(name=image_name,
                                   compare_type=compare_type,
                                   screen_shot_images_path=self.screenshot,
                                   light_template="\\".join([self.templates, light]),
                                   dark_template="\\".join([self.templates, dark]),
                                   positions=[(742, 643, 130, 73)],
                                   similarity=90.0,
                                   gray=False,
                                   gray_threshold=0)
        result = self.image_compare.compare(compare_property)
        files = self.image_compare.handle_images(compare_property, self.temp)
        return result, files, compare_property.type, compare_property.light_template, compare_property.dark_template

    def compare_apa_switch_on(self) -> tuple:
        """
        APA(自动泊车)高亮开关11
        """
        compare_property = CompareProperty()
        image_name = "apa_switch_on"
        dark = "adas_apa_switchoneone.bmp"
        light = "adas_apa_switchoneone.bmp"
        compare_type = "亮图"
        compare_property.set_value(name=image_name,
                                   compare_type=compare_type,
                                   screen_shot_images_path=self.screenshot,
                                   light_template="\\".join([self.templates, light]),
                                   dark_template="\\".join([self.templates, dark]),
                                   positions=[(742, 643, 130, 73)],
                                   similarity=90.0,
                                   gray=False,
                                   gray_threshold=0)
        result = self.image_compare.compare(compare_property)
        files = self.image_compare.handle_images(compare_property, self.temp)
        return result, files, compare_property.type, compare_property.light_template, compare_property.dark_template

    def compare_apa_switch_off(self) -> tuple:
        """
        APA开关熄灭
        """
        compare_property = CompareProperty()
        image_name = "apa_switch_off"
        dark = "adas_apa_switchonetwo.bmp"
        light = "adas_apa_switchonetwo.bmp"
        compare_type = "暗图"
        compare_property.set_value(name=image_name,
                                   compare_type=compare_type,
                                   screen_shot_images_path=self.screenshot,
                                   light_template="\\".join([self.templates, light]),
                                   dark_template="\\".join([self.templates, dark]),
                                   positions=[(742, 643, 130, 73)],
                                   similarity=90.0,
                                   gray=False,
                                   gray_threshold=0)
        result = self.image_compare.compare(compare_property)
        files = self.image_compare.handle_images(compare_property, self.temp)
        return result, files, compare_property.type, compare_property.light_template, compare_property.dark_template

    def compare_avm_swtich_on(self) -> tuple:
        """
        AVM开关打开
        """
        compare_property = CompareProperty()
        image_name = "avm_swtich_on"
        dark = "adas_avm_switch.bmp"
        light = "adas_avm_switch.bmp"
        compare_type = "亮图"
        compare_property.set_value(name=image_name,
                                   compare_type=compare_type,
                                   screen_shot_images_path=self.screenshot,
                                   light_template="\\".join([self.templates, light]),
                                   dark_template="\\".join([self.templates, dark]),
                                   positions=[(421, 643, 118, 70)],
                                   similarity=90.0,
                                   gray=False,
                                   gray_threshold=0)
        result = self.image_compare.compare(compare_property)
        files = self.image_compare.handle_images(compare_property, self.temp)
        return result, files, compare_property.type, compare_property.light_template, compare_property.dark_template

    def compare_esc_switch_open_ign_on(self) -> tuple:
        """
        打开车身稳定开关
        """
        compare_property = CompareProperty()
        image_name = "esc_switch_open_ign_on"
        dark = "esp_esc_switch_open_ign_on.bmp"
        light = "esp_esc_switch_open_ign_on.bmp"
        compare_type = "亮图"
        compare_property.set_value(name=image_name,
                                   compare_type=compare_type,
                                   screen_shot_images_path=self.screenshot,
                                   light_template="\\".join([self.templates, light]),
                                   dark_template="\\".join([self.templates, dark]),
                                   positions=[(1111, 644, 141, 69)],
                                   similarity=90.0,
                                   gray=False,
                                   gray_threshold=0)
        result = self.image_compare.compare(compare_property)
        files = self.image_compare.handle_images(compare_property, self.temp)
        return result, files, compare_property.type, compare_property.light_template, compare_property.dark_template

    def compare_esc_switch_close_ign_on(self) -> tuple:
        """
        关闭车身稳定开关
        """
        compare_property = CompareProperty()
        image_name = "esc_switch_close_ign_on"
        dark = "esp_esc_switch_close_ign_on.bmp"
        light = "esp_esc_switch_close_ign_on.bmp"
        compare_type = "暗图"
        compare_property.set_value(name=image_name,
                                   compare_type=compare_type,
                                   screen_shot_images_path=self.screenshot,
                                   light_template="\\".join([self.templates, light]),
                                   dark_template="\\".join([self.templates, dark]),
                                   positions=[(1111, 644, 141, 69)],
                                   similarity=90.0,
                                   gray=False,
                                   gray_threshold=0)
        result = self.image_compare.compare(compare_property)
        files = self.image_compare.handle_images(compare_property, self.temp)
        return result, files, compare_property.type, compare_property.light_template, compare_property.dark_template

    def compare_hdc_switch_open_ign_on(self) -> tuple:
        """
        打开陡坡缓降开关
        """
        compare_property = CompareProperty()
        image_name = "hdc_switch_open_ign_on"
        dark = "esp_hdc_switch_open_ign_on.bmp"
        light = "esp_hdc_switch_open_ign_on.bmp"
        compare_type = "亮图"
        compare_property.set_value(name=image_name,
                                   compare_type=compare_type,
                                   screen_shot_images_path=self.screenshot,
                                   light_template="\\".join([self.templates, light]),
                                   dark_template="\\".join([self.templates, dark]),
                                   positions=[(920, 643, 153, 73)],
                                   similarity=90.0,
                                   gray=False,
                                   gray_threshold=0)
        result = self.image_compare.compare(compare_property)
        files = self.image_compare.handle_images(compare_property, self.temp)
        return result, files, compare_property.type, compare_property.light_template, compare_property.dark_template

    def compare_hdc_switch_close_ign_on(self) -> tuple:
        """
        关闭陡坡缓降开关
        """
        compare_property = CompareProperty()
        image_name = "hdc_switch_close_ign_on"
        dark = "esp_hdc_switch_close_ign_on.bmp"
        light = "esp_hdc_switch_close_ign_on.bmp"
        compare_type = "暗图"
        compare_property.set_value(name=image_name,
                                   compare_type=compare_type,
                                   screen_shot_images_path=self.screenshot,
                                   light_template="\\".join([self.templates, light]),
                                   dark_template="\\".join([self.templates, dark]),
                                   positions=[(920, 643, 153, 73)],
                                   similarity=90.0,
                                   gray=False,
                                   gray_threshold=0)
        result = self.image_compare.compare(compare_property)
        files = self.image_compare.handle_images(compare_property, self.temp)
        return result, files, compare_property.type, compare_property.light_template, compare_property.dark_template

    def compare_blowlevel_one_ign_on(self) -> tuple:
        """
        设置前排空调吹风等级为1级
        """
        compare_property = CompareProperty()
        image_name = "blowlevel_one_ign_on"
        dark = "atc_blowlevel_one_ign_on.bmp"
        light = "atc_blowlevel_one_ign_on.bmp"
        compare_type = "亮图"
        compare_property.set_value(name=image_name,
                                   compare_type=compare_type,
                                   screen_shot_images_path=self.screenshot,
                                   light_template="\\".join([self.templates, light]),
                                   dark_template="\\".join([self.templates, dark]),
                                   positions=[(588, 274, 101, 91)],
                                   similarity=90.0,
                                   gray=False,
                                   gray_threshold=0)
        result = self.image_compare.compare(compare_property)
        files = self.image_compare.handle_images(compare_property, self.temp)
        return result, files, compare_property.type, compare_property.light_template, compare_property.dark_template

    def compare_blowlevel_two_ign_on(self) -> tuple:
        """
        设置前排空调吹风等级为2级
        """
        compare_property = CompareProperty()
        image_name = "blowlevel_two_ign_on"
        dark = "atc_blowlevel_two_ign_on.bmp"
        light = "atc_blowlevel_two_ign_on.bmp"
        compare_type = "亮图"
        compare_property.set_value(name=image_name,
                                   compare_type=compare_type,
                                   screen_shot_images_path=self.screenshot,
                                   light_template="\\".join([self.templates, light]),
                                   dark_template="\\".join([self.templates, dark]),
                                   positions=[(588, 274, 101, 91)],
                                   similarity=90.0,
                                   gray=False,
                                   gray_threshold=0)
        result = self.image_compare.compare(compare_property)
        files = self.image_compare.handle_images(compare_property, self.temp)
        return result, files, compare_property.type, compare_property.light_template, compare_property.dark_template

    def compare_blowlevel_three_ign_on(self) -> tuple:
        """
        设置前排空调吹风等级为3级
        """
        compare_property = CompareProperty()
        image_name = "blowlevel_three_ign_on"
        dark = "atc_blowlevel_three_ign_on.bmp"
        light = "atc_blowlevel_three_ign_on.bmp"
        compare_type = "亮图"
        compare_property.set_value(name=image_name,
                                   compare_type=compare_type,
                                   screen_shot_images_path=self.screenshot,
                                   light_template="\\".join([self.templates, light]),
                                   dark_template="\\".join([self.templates, dark]),
                                   positions=[(588, 274, 101, 91)],
                                   similarity=90.0,
                                   gray=False,
                                   gray_threshold=0)
        result = self.image_compare.compare(compare_property)
        files = self.image_compare.handle_images(compare_property, self.temp)
        return result, files, compare_property.type, compare_property.light_template, compare_property.dark_template

    def compare_blowlevel_four_ign_on(self) -> tuple:
        """
        设置前排空调吹风等级为4级
        """
        compare_property = CompareProperty()
        image_name = "blowlevel_four_ign_on"
        dark = "atc_blowlevel_four_ign_on.bmp"
        light = "atc_blowlevel_four_ign_on.bmp"
        compare_type = "亮图"
        compare_property.set_value(name=image_name,
                                   compare_type=compare_type,
                                   screen_shot_images_path=self.screenshot,
                                   light_template="\\".join([self.templates, light]),
                                   dark_template="\\".join([self.templates, dark]),
                                   positions=[(588, 274, 101, 91)],
                                   similarity=90.0,
                                   gray=False,
                                   gray_threshold=0)
        result = self.image_compare.compare(compare_property)
        files = self.image_compare.handle_images(compare_property, self.temp)
        return result, files, compare_property.type, compare_property.light_template, compare_property.dark_template

    def compare_blowlevel_five_ign_on(self) -> tuple:
        """
        设置前排空调吹风等级为5级
        """
        compare_property = CompareProperty()
        image_name = "blowlevel_five_ign_on"
        dark = "atc_blowlevel_five_ign_on.bmp"
        light = "atc_blowlevel_five_ign_on.bmp"
        compare_type = "亮图"
        compare_property.set_value(name=image_name,
                                   compare_type=compare_type,
                                   screen_shot_images_path=self.screenshot,
                                   light_template="\\".join([self.templates, light]),
                                   dark_template="\\".join([self.templates, dark]),
                                   positions=[(588, 274, 101, 91)],
                                   similarity=90.0,
                                   gray=False,
                                   gray_threshold=0)
        result = self.image_compare.compare(compare_property)
        files = self.image_compare.handle_images(compare_property, self.temp)
        return result, files, compare_property.type, compare_property.light_template, compare_property.dark_template

    def compare_blowlevel_six_ign_on(self) -> tuple:
        """
        设置前排空调吹风等级为6级
        """
        compare_property = CompareProperty()
        image_name = "blowlevel_six_ign_on"
        dark = "atc_blowlevel_six_ign_on.bmp"
        light = "atc_blowlevel_six_ign_on.bmp"
        compare_type = "亮图"
        compare_property.set_value(name=image_name,
                                   compare_type=compare_type,
                                   screen_shot_images_path=self.screenshot,
                                   light_template="\\".join([self.templates, light]),
                                   dark_template="\\".join([self.templates, dark]),
                                   positions=[(588, 274, 101, 91)],
                                   similarity=90.0,
                                   gray=False,
                                   gray_threshold=0)
        result = self.image_compare.compare(compare_property)
        files = self.image_compare.handle_images(compare_property, self.temp)
        return result, files, compare_property.type, compare_property.light_template, compare_property.dark_template

    def compare_blowlevel_seven_ign_on(self) -> tuple:
        """
        设置前排空调吹风等级为7级
        """
        compare_property = CompareProperty()
        image_name = "blowlevel_seven_ign_on"
        dark = "atc_blowlevel_seven_ign_on.bmp"
        light = "atc_blowlevel_seven_ign_on.bmp"
        compare_type = "亮图"
        compare_property.set_value(name=image_name,
                                   compare_type=compare_type,
                                   screen_shot_images_path=self.screenshot,
                                   light_template="\\".join([self.templates, light]),
                                   dark_template="\\".join([self.templates, dark]),
                                   positions=[(588, 274, 101, 91)],
                                   similarity=90.0,
                                   gray=False,
                                   gray_threshold=0)
        result = self.image_compare.compare(compare_property)
        files = self.image_compare.handle_images(compare_property, self.temp)
        return result, files, compare_property.type, compare_property.light_template, compare_property.dark_template

    def compare_driver_temp_lo_ign_on(self) -> tuple:
        """
        驾驶员空调温度显示Lo
        """
        compare_property = CompareProperty()
        image_name = "driver_temp_lo_ign_on"
        dark = "atc_driver_temp_lo_ign_on.bmp"
        light = "atc_driver_temp_lo_ign_on.bmp"
        compare_type = "亮图"
        compare_property.set_value(name=image_name,
                                   compare_type=compare_type,
                                   screen_shot_images_path=self.screenshot,
                                   light_template="\\".join([self.templates, light]),
                                   dark_template="\\".join([self.templates, dark]),
                                   positions=[(346, 253, 117, 128)],
                                   similarity=90.0,
                                   gray=False,
                                   gray_threshold=0)
        result = self.image_compare.compare(compare_property)
        files = self.image_compare.handle_images(compare_property, self.temp)
        return result, files, compare_property.type, compare_property.light_template, compare_property.dark_template

    def compare_driver_temp_oneeight_ign_on(self) -> tuple:
        """
        驾驶员空调温度显示18℃
        """
        compare_property = CompareProperty()
        image_name = "driver_temp_oneeight_ign_on"
        dark = "atc_driver_temp_oneeight_ign_on.bmp"
        light = "atc_driver_temp_oneeight_ign_on.bmp"
        compare_type = "亮图"
        compare_property.set_value(name=image_name,
                                   compare_type=compare_type,
                                   screen_shot_images_path=self.screenshot,
                                   light_template="\\".join([self.templates, light]),
                                   dark_template="\\".join([self.templates, dark]),
                                   positions=[(346, 253, 117, 128)],
                                   similarity=90.0,
                                   gray=False,
                                   gray_threshold=0)
        result = self.image_compare.compare(compare_property)
        files = self.image_compare.handle_images(compare_property, self.temp)
        return result, files, compare_property.type, compare_property.light_template, compare_property.dark_template

    def compare_driver_temp_threetwo_ign_on(self) -> tuple:
        """
        驾驶员空调温度显示32℃
        """
        compare_property = CompareProperty()
        image_name = "driver_temp_threetwo_ign_on"
        dark = "atc_driver_temp_threetwo_ign_on.bmp"
        light = "atc_driver_temp_threetwo_ign_on.bmp"
        compare_type = "亮图"
        compare_property.set_value(name=image_name,
                                   compare_type=compare_type,
                                   screen_shot_images_path=self.screenshot,
                                   light_template="\\".join([self.templates, light]),
                                   dark_template="\\".join([self.templates, dark]),
                                   positions=[(346, 253, 117, 128)],
                                   similarity=90.0,
                                   gray=False,
                                   gray_threshold=0)
        result = self.image_compare.compare(compare_property)
        files = self.image_compare.handle_images(compare_property, self.temp)
        return result, files, compare_property.type, compare_property.light_template, compare_property.dark_template

    def compare_driver_temp_hi_ign_on(self) -> tuple:
        """
        驾驶员空调温度显示Hi
        """
        compare_property = CompareProperty()
        image_name = "driver_temp_hi_ign_on"
        dark = "atc_driver_temp_hi_ign_on.bmp"
        light = "atc_driver_temp_hi_ign_on.bmp"
        compare_type = "亮图"
        compare_property.set_value(name=image_name,
                                   compare_type=compare_type,
                                   screen_shot_images_path=self.screenshot,
                                   light_template="\\".join([self.templates, light]),
                                   dark_template="\\".join([self.templates, dark]),
                                   positions=[(346, 253, 117, 128)],
                                   similarity=90.0,
                                   gray=False,
                                   gray_threshold=0)
        result = self.image_compare.compare(compare_property)
        files = self.image_compare.handle_images(compare_property, self.temp)
        return result, files, compare_property.type, compare_property.light_template, compare_property.dark_template

    def compare_passenger_temp_lo_ign_on(self) -> tuple:
        """
        前排乘客空调温度显示Lo
        """
        compare_property = CompareProperty()
        image_name = "passenger_temp_lo_ign_on"
        dark = "atc_passenger_temp_lo_ign_on.bmp"
        light = "atc_passenger_temp_lo_ign_on.bmp"
        compare_type = "亮图"
        compare_property.set_value(name=image_name,
                                   compare_type=compare_type,
                                   screen_shot_images_path=self.screenshot,
                                   light_template="\\".join([self.templates, light]),
                                   dark_template="\\".join([self.templates, dark]),
                                   positions=[(771, 250, 137, 132)],
                                   similarity=90.0,
                                   gray=False,
                                   gray_threshold=0)
        result = self.image_compare.compare(compare_property)
        files = self.image_compare.handle_images(compare_property, self.temp)
        return result, files, compare_property.type, compare_property.light_template, compare_property.dark_template

    def compare_passenger_temp_oneeight_ign_on(self) -> tuple:
        """
        前排乘客空调温度显示18℃
        """
        compare_property = CompareProperty()
        image_name = "passenger_temp_oneeight_ign_on"
        dark = "atc_passenger_temp_oneeight_ign_on.bmp"
        light = "atc_passenger_temp_oneeight_ign_on.bmp"
        compare_type = "亮图"
        compare_property.set_value(name=image_name,
                                   compare_type=compare_type,
                                   screen_shot_images_path=self.screenshot,
                                   light_template="\\".join([self.templates, light]),
                                   dark_template="\\".join([self.templates, dark]),
                                   positions=[(771, 250, 137, 132)],
                                   similarity=90.0,
                                   gray=False,
                                   gray_threshold=0)
        result = self.image_compare.compare(compare_property)
        files = self.image_compare.handle_images(compare_property, self.temp)
        return result, files, compare_property.type, compare_property.light_template, compare_property.dark_template

    def compare_passenger_temp_threetwo_ign_on(self) -> tuple:
        """
        前排乘客空调温度显示32℃
        """
        compare_property = CompareProperty()
        image_name = "passenger_temp_threetwo_ign_on"
        dark = "atc_passenger_temp_threetwo_ign_on.bmp"
        light = "atc_passenger_temp_threetwo_ign_on.bmp"
        compare_type = "亮图"
        compare_property.set_value(name=image_name,
                                   compare_type=compare_type,
                                   screen_shot_images_path=self.screenshot,
                                   light_template="\\".join([self.templates, light]),
                                   dark_template="\\".join([self.templates, dark]),
                                   positions=[(771, 250, 137, 132)],
                                   similarity=90.0,
                                   gray=False,
                                   gray_threshold=0)
        result = self.image_compare.compare(compare_property)
        files = self.image_compare.handle_images(compare_property, self.temp)
        return result, files, compare_property.type, compare_property.light_template, compare_property.dark_template

    def compare_passenger_temp_hi_ign_on(self) -> tuple:
        """
        前排乘客空调温度显示Hi
        """
        compare_property = CompareProperty()
        image_name = "passenger_temp_hi_ign_on"
        dark = "atc_passenger_temp_hi_ign_on.bmp"
        light = "atc_passenger_temp_hi_ign_on.bmp"
        compare_type = "亮图"
        compare_property.set_value(name=image_name,
                                   compare_type=compare_type,
                                   screen_shot_images_path=self.screenshot,
                                   light_template="\\".join([self.templates, light]),
                                   dark_template="\\".join([self.templates, dark]),
                                   positions=[(771, 250, 137, 132)],
                                   similarity=90.0,
                                   gray=False,
                                   gray_threshold=0)
        result = self.image_compare.compare(compare_property)
        files = self.image_compare.handle_images(compare_property, self.temp)
        return result, files, compare_property.type, compare_property.light_template, compare_property.dark_template

    def compare_driver_blowmode_face_ign_on(self) -> tuple:
        """
        显示驾驶员模式为吹面模式
        """
        compare_property = CompareProperty()
        image_name = "driver_blowmode_face_ign_on"
        dark = "atc_driver_blowmode_face_ign_on.bmp"
        light = "atc_driver_blowmode_face_ign_on.bmp"
        compare_type = "亮图"
        compare_property.set_value(name=image_name,
                                   compare_type=compare_type,
                                   screen_shot_images_path=self.screenshot,
                                   light_template="\\".join([self.templates, light]),
                                   dark_template="\\".join([self.templates, dark]),
                                   positions=[(81, 264, 103, 190), (74, 193, 55, 74)],
                                   similarity=90.0,
                                   gray=False,
                                   gray_threshold=0)
        result = self.image_compare.compare(compare_property)
        files = self.image_compare.handle_images(compare_property, self.temp)
        return result, files, compare_property.type, compare_property.light_template, compare_property.dark_template

    def compare_driver_blowmode_face_def_ign_on(self) -> tuple:
        """
        显示驾驶员模式为吹面除霜模式
        """
        compare_property = CompareProperty()
        image_name = "driver_blowmode_face_def_ign_on"
        dark = "atc_driver_blowmode_face_def_ign_on.bmp"
        light = "atc_driver_blowmode_face_def_ign_on.bmp"
        compare_type = "亮图"
        compare_property.set_value(name=image_name,
                                   compare_type=compare_type,
                                   screen_shot_images_path=self.screenshot,
                                   light_template="\\".join([self.templates, light]),
                                   dark_template="\\".join([self.templates, dark]),
                                   positions=[(81, 264, 103, 190), (74, 193, 55, 74), (114, 138, 128, 69)],
                                   similarity=90.0,
                                   gray=False,
                                   gray_threshold=0)
        result = self.image_compare.compare(compare_property)
        files = self.image_compare.handle_images(compare_property, self.temp)
        return result, files, compare_property.type, compare_property.light_template, compare_property.dark_template

    def compare_driver_blowmode_face_foot_ign_on(self) -> tuple:
        """
        显示驾驶员模式为吹面吹脚模式
        """
        compare_property = CompareProperty()
        image_name = "driver_blowmode_face_foot_ign_on"
        dark = "atc_driver_blowmode_face_foot_ign_on.bmp"
        light = "atc_driver_blowmode_face_foot_ign_on.bmp"
        compare_type = "亮图"
        compare_property.set_value(name=image_name,
                                   compare_type=compare_type,
                                   screen_shot_images_path=self.screenshot,
                                   light_template="\\".join([self.templates, light]),
                                   dark_template="\\".join([self.templates, dark]),
                                   positions=[(81, 264, 103, 190), (74, 193, 55, 74), (180, 429, 198, 94)],
                                   similarity=90.0,
                                   gray=False,
                                   gray_threshold=0)
        result = self.image_compare.compare(compare_property)
        files = self.image_compare.handle_images(compare_property, self.temp)
        return result, files, compare_property.type, compare_property.light_template, compare_property.dark_template

    def compare_driver_blowmode_face_foot_def_ign_on(self) -> tuple:
        """
        显示驾驶员模式为吹面吹脚除霜模式
        """
        compare_property = CompareProperty()
        image_name = "driver_blowmode_face_foot_def_ign_on"
        dark = "atc_driver_blowmode_face_foot_def_ign_on.bmp"
        light = "atc_driver_blowmode_face_foot_def_ign_on.bmp"
        compare_type = "亮图"
        compare_property.set_value(name=image_name,
                                   compare_type=compare_type,
                                   screen_shot_images_path=self.screenshot,
                                   light_template="\\".join([self.templates, light]),
                                   dark_template="\\".join([self.templates, dark]),
                                   positions=[(81, 264, 103, 190), (74, 193, 55, 74), (114, 138, 128, 69), (180, 429, 198, 94)],
                                   similarity=90.0,
                                   gray=False,
                                   gray_threshold=0)
        result = self.image_compare.compare(compare_property)
        files = self.image_compare.handle_images(compare_property, self.temp)
        return result, files, compare_property.type, compare_property.light_template, compare_property.dark_template

    def compare_driver_blowmode_foot_ign_on(self) -> tuple:
        """
        显示驾驶员模式为吹脚模式
        """
        compare_property = CompareProperty()
        image_name = "driver_blowmode_foot_ign_on"
        dark = "atc_driver_blowmode_foot_ign_on.bmp"
        light = "atc_driver_blowmode_foot_ign_on.bmp"
        compare_type = "亮图"
        compare_property.set_value(name=image_name,
                                   compare_type=compare_type,
                                   screen_shot_images_path=self.screenshot,
                                   light_template="\\".join([self.templates, light]),
                                   dark_template="\\".join([self.templates, dark]),
                                   positions=[(180, 429, 198, 94)],
                                   similarity=90.0,
                                   gray=False,
                                   gray_threshold=0)
        result = self.image_compare.compare(compare_property)
        files = self.image_compare.handle_images(compare_property, self.temp)
        return result, files, compare_property.type, compare_property.light_template, compare_property.dark_template

    def compare_driver_blowmode_foot_def_ign_on(self) -> tuple:
        """
        显示驾驶员模式为吹脚除霜模式
        """
        compare_property = CompareProperty()
        image_name = "driver_blowmode_foot_def_ign_on"
        dark = "atc_driver_blowmode_foot_def_ign_on.bmp"
        light = "atc_driver_blowmode_foot_def_ign_on.bmp"
        compare_type = "亮图"
        compare_property.set_value(name=image_name,
                                   compare_type=compare_type,
                                   screen_shot_images_path=self.screenshot,
                                   light_template="\\".join([self.templates, light]),
                                   dark_template="\\".join([self.templates, dark]),
                                   positions=[(114, 138, 128, 69), (180, 429, 198, 94)],
                                   similarity=90.0,
                                   gray=False,
                                   gray_threshold=0)
        result = self.image_compare.compare(compare_property)
        files = self.image_compare.handle_images(compare_property, self.temp)
        return result, files, compare_property.type, compare_property.light_template, compare_property.dark_template

    def compare_driver_blowmode_def_ign_on(self) -> tuple:
        """
        显示驾驶员模式为除霜模式
        """
        compare_property = CompareProperty()
        image_name = "driver_blowmode_def_ign_on"
        dark = "atc_driver_blowmode_def_ign_on.bmp"
        light = "atc_driver_blowmode_def_ign_on.bmp"
        compare_type = "亮图"
        compare_property.set_value(name=image_name,
                                   compare_type=compare_type,
                                   screen_shot_images_path=self.screenshot,
                                   light_template="\\".join([self.templates, light]),
                                   dark_template="\\".join([self.templates, dark]),
                                   positions=[(114, 138, 128, 69)],
                                   similarity=90.0,
                                   gray=False,
                                   gray_threshold=0)
        result = self.image_compare.compare(compare_property)
        files = self.image_compare.handle_images(compare_property, self.temp)
        return result, files, compare_property.type, compare_property.light_template, compare_property.dark_template

    def compare_passenger_blowmode_face_ign_on(self) -> tuple:
        """
        显示前排乘客模式为吹面模式
        """
        compare_property = CompareProperty()
        image_name = "passenger_blowmode_face_ign_on"
        dark = "atc_passenger_blowmode_face_ign_on.bmp"
        light = "atc_passenger_blowmode_face_ign_on.bmp"
        compare_type = "亮图"
        compare_property.set_value(name=image_name,
                                   compare_type=compare_type,
                                   screen_shot_images_path=self.screenshot,
                                   light_template="\\".join([self.templates, light]),
                                   dark_template="\\".join([self.templates, dark]),
                                   positions=[(1077, 183, 129, 272)],
                                   similarity=90.0,
                                   gray=False,
                                   gray_threshold=0)
        result = self.image_compare.compare(compare_property)
        files = self.image_compare.handle_images(compare_property, self.temp)
        return result, files, compare_property.type, compare_property.light_template, compare_property.dark_template

    def compare_passenger_blowmode_foot_ign_on(self) -> tuple:
        """
        显示前排乘客模式为吹脚模式
        """
        compare_property = CompareProperty()
        image_name = "passenger_blowmode_foot_ign_on"
        dark = "atc_passenger_blowmode_foot_ign_on.bmp"
        light = "atc_passenger_blowmode_foot_ign_on.bmp"
        compare_type = "亮图"
        compare_property.set_value(name=image_name,
                                   compare_type=compare_type,
                                   screen_shot_images_path=self.screenshot,
                                   light_template="\\".join([self.templates, light]),
                                   dark_template="\\".join([self.templates, dark]),
                                   positions=[(895, 437, 197, 78)],
                                   similarity=90.0,
                                   gray=False,
                                   gray_threshold=0)
        result = self.image_compare.compare(compare_property)
        files = self.image_compare.handle_images(compare_property, self.temp)
        return result, files, compare_property.type, compare_property.light_template, compare_property.dark_template

    def compare_passenger_blowmode_face_foot_ign_on(self) -> tuple:
        """
        显示前排乘客模式为吹面吹脚模式
        """
        compare_property = CompareProperty()
        image_name = "passenger_blowmode_face_foot_ign_on"
        dark = "atc_passenger_blowmode_face_foot_ign_on.bmp"
        light = "atc_passenger_blowmode_face_foot_ign_on.bmp"
        compare_type = "亮图"
        compare_property.set_value(name=image_name,
                                   compare_type=compare_type,
                                   screen_shot_images_path=self.screenshot,
                                   light_template="\\".join([self.templates, light]),
                                   dark_template="\\".join([self.templates, dark]),
                                   positions=[(1077, 183, 129, 272), (895, 437, 197, 78)],
                                   similarity=90.0,
                                   gray=False,
                                   gray_threshold=0)
        result = self.image_compare.compare(compare_property)
        files = self.image_compare.handle_images(compare_property, self.temp)
        return result, files, compare_property.type, compare_property.light_template, compare_property.dark_template

    def compare_def_mode_open_ign_on(self) -> tuple:
        """
        打开前除霜开关
        """
        compare_property = CompareProperty()
        image_name = "def_mode_open_ign_on"
        dark = "atc_def_mode_open_ign_on.bmp"
        light = "atc_def_mode_open_ign_on.bmp"
        compare_type = "亮图"
        compare_property.set_value(name=image_name,
                                   compare_type=compare_type,
                                   screen_shot_images_path=self.screenshot,
                                   light_template="\\".join([self.templates, light]),
                                   dark_template="\\".join([self.templates, dark]),
                                   positions=[(222, 65, 89, 60)],
                                   similarity=90.0,
                                   gray=False,
                                   gray_threshold=0)
        result = self.image_compare.compare(compare_property)
        files = self.image_compare.handle_images(compare_property, self.temp)
        return result, files, compare_property.type, compare_property.light_template, compare_property.dark_template

    def compare_def_mode_close_ign_on(self) -> tuple:
        """
        关闭前除霜开关
        """
        compare_property = CompareProperty()
        image_name = "def_mode_close_ign_on"
        dark = "atc_def_mode_close_ign_on.bmp"
        light = "atc_def_mode_close_ign_on.bmp"
        compare_type = "暗图"
        compare_property.set_value(name=image_name,
                                   compare_type=compare_type,
                                   screen_shot_images_path=self.screenshot,
                                   light_template="\\".join([self.templates, light]),
                                   dark_template="\\".join([self.templates, dark]),
                                   positions=[(222, 65, 89, 60)],
                                   similarity=90.0,
                                   gray=False,
                                   gray_threshold=0)
        result = self.image_compare.compare(compare_property)
        files = self.image_compare.handle_images(compare_property, self.temp)
        return result, files, compare_property.type, compare_property.light_template, compare_property.dark_template

    def compare_fl_auto_mode_open_ign_on(self) -> tuple:
        """
        打开驾驶员侧Auto开关
        """
        compare_property = CompareProperty()
        image_name = "fl_auto_mode_open_ign_on"
        dark = "atc_fl_auto_mode_open_ign_on.bmp"
        light = "atc_fl_auto_mode_open_ign_on.bmp"
        compare_type = "亮图"
        compare_property.set_value(name=image_name,
                                   compare_type=compare_type,
                                   screen_shot_images_path=self.screenshot,
                                   light_template="\\".join([self.templates, light]),
                                   dark_template="\\".join([self.templates, dark]),
                                   positions=[(184, 533, 113, 60)],
                                   similarity=90.0,
                                   gray=False,
                                   gray_threshold=0)
        result = self.image_compare.compare(compare_property)
        files = self.image_compare.handle_images(compare_property, self.temp)
        return result, files, compare_property.type, compare_property.light_template, compare_property.dark_template

    def compare_fl_auto_mode_close_ign_on(self) -> tuple:
        """
        关闭驾驶员侧Auto开关
        """
        compare_property = CompareProperty()
        image_name = "fl_auto_mode_close_ign_on"
        dark = "atc_fl_auto_mode_close_ign_on.bmp"
        light = "atc_fl_auto_mode_close_ign_on.bmp"
        compare_type = "暗图"
        compare_property.set_value(name=image_name,
                                   compare_type=compare_type,
                                   screen_shot_images_path=self.screenshot,
                                   light_template="\\".join([self.templates, light]),
                                   dark_template="\\".join([self.templates, dark]),
                                   positions=[(184, 533, 113, 60)],
                                   similarity=90.0,
                                   gray=False,
                                   gray_threshold=0)
        result = self.image_compare.compare(compare_property)
        files = self.image_compare.handle_images(compare_property, self.temp)
        return result, files, compare_property.type, compare_property.light_template, compare_property.dark_template

    def compare_fr_auto_mode_open_ign_on(self) -> tuple:
        """
        打开前排乘客Auto开关
        """
        compare_property = CompareProperty()
        image_name = "fr_auto_mode_open_ign_on"
        dark = "atc_fr_auto_mode_open_ign_on.bmp"
        light = "atc_fr_auto_mode_open_ign_on.bmp"
        compare_type = "亮图"
        compare_property.set_value(name=image_name,
                                   compare_type=compare_type,
                                   screen_shot_images_path=self.screenshot,
                                   light_template="\\".join([self.templates, light]),
                                   dark_template="\\".join([self.templates, dark]),
                                   positions=[(979, 536, 114, 58)],
                                   similarity=90.0,
                                   gray=False,
                                   gray_threshold=0)
        result = self.image_compare.compare(compare_property)
        files = self.image_compare.handle_images(compare_property, self.temp)
        return result, files, compare_property.type, compare_property.light_template, compare_property.dark_template

    def compare_fr_auto_mode_close_ign_on(self) -> tuple:
        """
        关闭前排乘客Auto开关
        """
        compare_property = CompareProperty()
        image_name = "fr_auto_mode_close_ign_on"
        dark = "atc_fr_auto_mode_close_ign_on.bmp"
        light = "atc_fr_auto_mode_close_ign_on.bmp"
        compare_type = "暗图"
        compare_property.set_value(name=image_name,
                                   compare_type=compare_type,
                                   screen_shot_images_path=self.screenshot,
                                   light_template="\\".join([self.templates, light]),
                                   dark_template="\\".join([self.templates, dark]),
                                   positions=[(979, 536, 114, 58)],
                                   similarity=90.0,
                                   gray=False,
                                   gray_threshold=0)
        result = self.image_compare.compare(compare_property)
        files = self.image_compare.handle_images(compare_property, self.temp)
        return result, files, compare_property.type, compare_property.light_template, compare_property.dark_template

    def compare_ac_open_ign_on(self) -> tuple:
        """
        前排空调OFF开关不亮
        """
        compare_property = CompareProperty()
        image_name = "ac_open_ign_on"
        dark = "atc_ac_open_ign_on.bmp"
        light = "atc_ac_open_ign_on.bmp"
        compare_type = "暗图"
        compare_property.set_value(name=image_name,
                                   compare_type=compare_type,
                                   screen_shot_images_path=self.screenshot,
                                   light_template="\\".join([self.templates, light]),
                                   dark_template="\\".join([self.templates, dark]),
                                   positions=[(374, 539, 82, 49)],
                                   similarity=90.0,
                                   gray=False,
                                   gray_threshold=0)
        result = self.image_compare.compare(compare_property)
        files = self.image_compare.handle_images(compare_property, self.temp)
        return result, files, compare_property.type, compare_property.light_template, compare_property.dark_template

    def compare_ac_close_ign_on(self) -> tuple:
        """
        前排空调OFF开关高亮
        """
        compare_property = CompareProperty()
        image_name = "ac_close_ign_on"
        dark = "atc_ac_close_ign_on.bmp"
        light = "atc_ac_close_ign_on.bmp"
        compare_type = "亮图"
        compare_property.set_value(name=image_name,
                                   compare_type=compare_type,
                                   screen_shot_images_path=self.screenshot,
                                   light_template="\\".join([self.templates, light]),
                                   dark_template="\\".join([self.templates, dark]),
                                   positions=[(374, 539, 82, 49)],
                                   similarity=90.0,
                                   gray=False,
                                   gray_threshold=0)
        result = self.image_compare.compare(compare_property)
        files = self.image_compare.handle_images(compare_property, self.temp)
        return result, files, compare_property.type, compare_property.light_template, compare_property.dark_template

    def compare_frs_mode_open(self) -> tuple:
        """
        打开空调外循环
        """
        compare_property = CompareProperty()
        image_name = "frs_mode_open"
        dark = "atc_frs_mode_open.bmp"
        light = "atc_frs_mode_open.bmp"
        compare_type = "亮图"
        compare_property.set_value(name=image_name,
                                   compare_type=compare_type,
                                   screen_shot_images_path=self.screenshot,
                                   light_template="\\".join([self.templates, light]),
                                   dark_template="\\".join([self.templates, dark]),
                                   positions=[(600, 70, 79, 49)],
                                   similarity=90.0,
                                   gray=False,
                                   gray_threshold=0)
        result = self.image_compare.compare(compare_property)
        files = self.image_compare.handle_images(compare_property, self.temp)
        return result, files, compare_property.type, compare_property.light_template, compare_property.dark_template

    def compare_rec_mode_open(self) -> tuple:
        """
        打开空调内循环
        """
        compare_property = CompareProperty()
        image_name = "rec_mode_open"
        dark = "atc_rec_mode_open.bmp"
        light = "atc_rec_mode_open.bmp"
        compare_type = "亮图"
        compare_property.set_value(name=image_name,
                                   compare_type=compare_type,
                                   screen_shot_images_path=self.screenshot,
                                   light_template="\\".join([self.templates, light]),
                                   dark_template="\\".join([self.templates, dark]),
                                   positions=[(600, 70, 79, 49)],
                                   similarity=90.0,
                                   gray=False,
                                   gray_threshold=0)
        result = self.image_compare.compare(compare_property)
        files = self.image_compare.handle_images(compare_property, self.temp)
        return result, files, compare_property.type, compare_property.light_template, compare_property.dark_template

    def compare_frs_rec_mode_open(self) -> tuple:
        """
        打开空调双向通风
        """
        compare_property = CompareProperty()
        image_name = "frs_rec_mode_open"
        dark = "atc_frs_rec_mode_open.bmp"
        light = "atc_frs_rec_mode_open.bmp"
        compare_type = "亮图"
        compare_property.set_value(name=image_name,
                                   compare_type=compare_type,
                                   screen_shot_images_path=self.screenshot,
                                   light_template="\\".join([self.templates, light]),
                                   dark_template="\\".join([self.templates, dark]),
                                   positions=[(600, 70, 79, 49)],
                                   similarity=90.0,
                                   gray=False,
                                   gray_threshold=0)
        result = self.image_compare.compare(compare_property)
        files = self.image_compare.handle_images(compare_property, self.temp)
        return result, files, compare_property.type, compare_property.light_template, compare_property.dark_template

    def compare_sync_mode_open(self) -> tuple:
        """
        同步开关高亮
        """
        compare_property = CompareProperty()
        image_name = "sync_mode_open"
        dark = "atc_sync_mode_open.bmp"
        light = "atc_sync_mode_open.bmp"
        compare_type = "亮图"
        compare_property.set_value(name=image_name,
                                   compare_type=compare_type,
                                   screen_shot_images_path=self.screenshot,
                                   light_template="\\".join([self.templates, light]),
                                   dark_template="\\".join([self.templates, dark]),
                                   positions=[(807, 537, 105, 50)],
                                   similarity=90.0,
                                   gray=False,
                                   gray_threshold=0)
        result = self.image_compare.compare(compare_property)
        files = self.image_compare.handle_images(compare_property, self.temp)
        return result, files, compare_property.type, compare_property.light_template, compare_property.dark_template

    def compare_sync_mode_close(self) -> tuple:
        """
        同步开关不亮
        """
        compare_property = CompareProperty()
        image_name = "sync_mode_close"
        dark = "atc_sync_mode_close.bmp"
        light = "atc_sync_mode_close.bmp"
        compare_type = "暗图"
        compare_property.set_value(name=image_name,
                                   compare_type=compare_type,
                                   screen_shot_images_path=self.screenshot,
                                   light_template="\\".join([self.templates, light]),
                                   dark_template="\\".join([self.templates, dark]),
                                   positions=[(807, 537, 105, 50)],
                                   similarity=90.0,
                                   gray=False,
                                   gray_threshold=0)
        result = self.image_compare.compare(compare_property)
        files = self.image_compare.handle_images(compare_property, self.temp)
        return result, files, compare_property.type, compare_property.light_template, compare_property.dark_template

    def compare_sync_signal_miss(self) -> tuple:
        """
        同步开关不亮
        """
        compare_property = CompareProperty()
        image_name = "sync_signal_miss"
        dark = "atc_sync_signal_miss.bmp"
        light = "atc_sync_signal_miss.bmp"
        compare_type = "暗图"
        compare_property.set_value(name=image_name,
                                   compare_type=compare_type,
                                   screen_shot_images_path=self.screenshot,
                                   light_template="\\".join([self.templates, light]),
                                   dark_template="\\".join([self.templates, dark]),
                                   positions=[(807, 537, 105, 50)],
                                   similarity=90.0,
                                   gray=False,
                                   gray_threshold=0)
        result = self.image_compare.compare(compare_property)
        files = self.image_compare.handle_images(compare_property, self.temp)
        return result, files, compare_property.type, compare_property.light_template, compare_property.dark_template

    def compare_naturalair_mode_open(self) -> tuple:
        """
        自然通风开关高亮
        """
        compare_property = CompareProperty()
        image_name = "naturalair_mode_open"
        dark = "atc_naturalair_mode_open.bmp"
        light = "atc_naturalair_mode_open.bmp"
        compare_type = "亮图"
        compare_property.set_value(name=image_name,
                                   compare_type=compare_type,
                                   screen_shot_images_path=self.screenshot,
                                   light_template="\\".join([self.templates, light]),
                                   dark_template="\\".join([self.templates, dark]),
                                   positions=[(782, 64, 89, 62)],
                                   similarity=90.0,
                                   gray=False,
                                   gray_threshold=0)
        result = self.image_compare.compare(compare_property)
        files = self.image_compare.handle_images(compare_property, self.temp)
        return result, files, compare_property.type, compare_property.light_template, compare_property.dark_template

    def compare_naturalair_mode_close(self) -> tuple:
        """
        自然通风开关变暗
        """
        compare_property = CompareProperty()
        image_name = "naturalair_mode_close"
        dark = "atc_naturalair_mode_close.bmp"
        light = "atc_naturalair_mode_close.bmp"
        compare_type = "亮图"
        compare_property.set_value(name=image_name,
                                   compare_type=compare_type,
                                   screen_shot_images_path=self.screenshot,
                                   light_template="\\".join([self.templates, light]),
                                   dark_template="\\".join([self.templates, dark]),
                                   positions=[(782, 64, 89, 62)],
                                   similarity=90.0,
                                   gray=False,
                                   gray_threshold=0)
        result = self.image_compare.compare(compare_property)
        files = self.image_compare.handle_images(compare_property, self.temp)
        return result, files, compare_property.type, compare_property.light_template, compare_property.dark_template

    def compare_naturalair_signal_miss(self) -> tuple:
        """
        自然通风开关变暗
        """
        compare_property = CompareProperty()
        image_name = "naturalair_signal_miss"
        dark = "atc_naturalair_signal_miss.bmp"
        light = "atc_naturalair_signal_miss.bmp"
        compare_type = "暗图"
        compare_property.set_value(name=image_name,
                                   compare_type=compare_type,
                                   screen_shot_images_path=self.screenshot,
                                   light_template="\\".join([self.templates, light]),
                                   dark_template="\\".join([self.templates, dark]),
                                   positions=[(782, 64, 89, 62)],
                                   similarity=90.0,
                                   gray=False,
                                   gray_threshold=0)
        result = self.image_compare.compare(compare_property)
        files = self.image_compare.handle_images(compare_property, self.temp)
        return result, files, compare_property.type, compare_property.light_template, compare_property.dark_template

    def compare_ion_mode_open(self) -> tuple:
        """
        ION开关高亮
        """
        compare_property = CompareProperty()
        image_name = "ion_mode_open"
        dark = "atc_ion_mode_open.bmp"
        light = "atc_ion_mode_open.bmp"
        compare_type = "亮图"
        compare_property.set_value(name=image_name,
                                   compare_type=compare_type,
                                   screen_shot_images_path=self.screenshot,
                                   light_template="\\".join([self.templates, light]),
                                   dark_template="\\".join([self.templates, dark]),
                                   positions=[(1160, 65, 76, 60)],
                                   similarity=90.0,
                                   gray=False,
                                   gray_threshold=0)
        result = self.image_compare.compare(compare_property)
        files = self.image_compare.handle_images(compare_property, self.temp)
        return result, files, compare_property.type, compare_property.light_template, compare_property.dark_template

    def compare_ion_mode_close(self) -> tuple:
        """
        ION开关不亮
        """
        compare_property = CompareProperty()
        image_name = "ion_mode_close"
        dark = "atc_ion_mode_close.bmp"
        light = "atc_ion_mode_close.bmp"
        compare_type = "暗图"
        compare_property.set_value(name=image_name,
                                   compare_type=compare_type,
                                   screen_shot_images_path=self.screenshot,
                                   light_template="\\".join([self.templates, light]),
                                   dark_template="\\".join([self.templates, dark]),
                                   positions=[(1160, 65, 76, 60)],
                                   similarity=90.0,
                                   gray=False,
                                   gray_threshold=0)
        result = self.image_compare.compare(compare_property)
        files = self.image_compare.handle_images(compare_property, self.temp)
        return result, files, compare_property.type, compare_property.light_template, compare_property.dark_template

    def compare_ambient_temp_low_fourzero(self) -> tuple:
        """
        车外温度-40℃
        """
        compare_property = CompareProperty()
        image_name = "ambient_temp_low_fourzero"
        dark = "atc_ambient_temp_low_fourzero.bmp"
        light = "atc_ambient_temp_low_fourzero.bmp"
        compare_type = "亮图"
        compare_property.set_value(name=image_name,
                                   compare_type=compare_type,
                                   screen_shot_images_path=self.screenshot,
                                   light_template="\\".join([self.templates, light]),
                                   dark_template="\\".join([self.templates, dark]),
                                   positions=[(933, 2, 181, 47)],
                                   similarity=90.0,
                                   gray=False,
                                   gray_threshold=0)
        result = self.image_compare.compare(compare_property)
        files = self.image_compare.handle_images(compare_property, self.temp)
        return result, files, compare_property.type, compare_property.light_template, compare_property.dark_template

    def compare_ambient_temp_zero(self) -> tuple:
        """
        车外温度0℃
        """
        compare_property = CompareProperty()
        image_name = "ambient_temp_zero"
        dark = "atc_ambient_temp_zero.bmp"
        light = "atc_ambient_temp_zero.bmp"
        compare_type = "亮图"
        compare_property.set_value(name=image_name,
                                   compare_type=compare_type,
                                   screen_shot_images_path=self.screenshot,
                                   light_template="\\".join([self.templates, light]),
                                   dark_template="\\".join([self.templates, dark]),
                                   positions=[(933, 2, 181, 47)],
                                   similarity=90.0,
                                   gray=False,
                                   gray_threshold=0)
        result = self.image_compare.compare(compare_property)
        files = self.image_compare.handle_images(compare_property, self.temp)
        return result, files, compare_property.type, compare_property.light_template, compare_property.dark_template

    def compare_ambient_temp_eightsix_five(self) -> tuple:
        """
        车外温度86.5℃
        """
        compare_property = CompareProperty()
        image_name = "ambient_temp_eightsix_five"
        dark = "atc_ambient_temp_eightsix_five.bmp"
        light = "atc_ambient_temp_eightsix_five.bmp"
        compare_type = "亮图"
        compare_property.set_value(name=image_name,
                                   compare_type=compare_type,
                                   screen_shot_images_path=self.screenshot,
                                   light_template="\\".join([self.templates, light]),
                                   dark_template="\\".join([self.templates, dark]),
                                   positions=[(933, 2, 181, 47)],
                                   similarity=90.0,
                                   gray=False,
                                   gray_threshold=0)
        result = self.image_compare.compare(compare_property)
        files = self.image_compare.handle_images(compare_property, self.temp)
        return result, files, compare_property.type, compare_property.light_template, compare_property.dark_template

    def compare_pmtwofive_onezerozero_green_open(self) -> tuple:
        """
        PM25开关高亮
        """
        compare_property = CompareProperty()
        image_name = "pmtwofive_onezerozero_green_open"
        dark = "atc_pmtwofive_onezerozero_green_open.bmp"
        light = "atc_pmtwofive_onezerozero_green_open.bmp"
        compare_type = "亮图"
        compare_property.set_value(name=image_name,
                                   compare_type=compare_type,
                                   screen_shot_images_path=self.screenshot,
                                   light_template="\\".join([self.templates, light]),
                                   dark_template="\\".join([self.templates, dark]),
                                   positions=[(1153, 1, 103, 42)],
                                   similarity=90.0,
                                   gray=False,
                                   gray_threshold=0)
        result = self.image_compare.compare(compare_property)
        files = self.image_compare.handle_images(compare_property, self.temp)
        return result, files, compare_property.type, compare_property.light_template, compare_property.dark_template

    def compare_pmtwofive_oneeightzero_red_open(self) -> tuple:
        """
        PM25开关高亮
        """
        compare_property = CompareProperty()
        image_name = "pmtwofive_oneeightzero_red_open"
        dark = "atc_pmtwofive_oneeightzero_red_open.bmp"
        light = "atc_pmtwofive_oneeightzero_red_open.bmp"
        compare_type = "亮图"
        compare_property.set_value(name=image_name,
                                   compare_type=compare_type,
                                   screen_shot_images_path=self.screenshot,
                                   light_template="\\".join([self.templates, light]),
                                   dark_template="\\".join([self.templates, dark]),
                                   positions=[(1161, 4, 96, 41)],
                                   similarity=90.0,
                                   gray=False,
                                   gray_threshold=0)
        result = self.image_compare.compare(compare_property)
        files = self.image_compare.handle_images(compare_property, self.temp)
        return result, files, compare_property.type, compare_property.light_template, compare_property.dark_template

    def compare_ads_open(self) -> tuple:
        """
        防雾图标出现
        """
        compare_property = CompareProperty()
        image_name = "ads_open"
        dark = "atc_ads_open.bmp"
        light = "atc_ads_open.bmp"
        compare_type = "亮图"
        compare_property.set_value(name=image_name,
                                   compare_type=compare_type,
                                   screen_shot_images_path=self.screenshot,
                                   light_template="\\".join([self.templates, light]),
                                   dark_template="\\".join([self.templates, dark]),
                                   positions=[(1187, 8, 68, 37)],
                                   similarity=90.0,
                                   gray=False,
                                   gray_threshold=0)
        result = self.image_compare.compare(compare_property)
        files = self.image_compare.handle_images(compare_property, self.temp)
        return result, files, compare_property.type, compare_property.light_template, compare_property.dark_template

    def compare_ads_close(self) -> tuple:
        """
        防雾图标隐藏
        """
        compare_property = CompareProperty()
        image_name = "ads_close"
        dark = "atc_ads_close.bmp"
        light = "atc_ads_close.bmp"
        compare_type = "亮图"
        compare_property.set_value(name=image_name,
                                   compare_type=compare_type,
                                   screen_shot_images_path=self.screenshot,
                                   light_template="\\".join([self.templates, light]),
                                   dark_template="\\".join([self.templates, dark]),
                                   positions=[(1187, 8, 68, 37)],
                                   similarity=90.0,
                                   gray=False,
                                   gray_threshold=0)
        result = self.image_compare.compare(compare_property)
        files = self.image_compare.handle_images(compare_property, self.temp)
        return result, files, compare_property.type, compare_property.light_template, compare_property.dark_template

    def compare_rear_blowlevel_one_ign_on(self) -> tuple:
        """
        设置二排空调吹风等级为1级
        """
        compare_property = CompareProperty()
        image_name = "rear_blowlevel_one_ign_on"
        dark = "atc_rear_rear_blowlevel_one_ign_on.bmp"
        light = "atc_rear_rear_blowlevel_one_ign_on.bmp"
        compare_type = "亮图"
        compare_property.set_value(name=image_name,
                                   compare_type=compare_type,
                                   screen_shot_images_path=self.screenshot,
                                   light_template="\\".join([self.templates, light]),
                                   dark_template="\\".join([self.templates, dark]),
                                   positions=[(588, 274, 101, 91)],
                                   similarity=90.0,
                                   gray=False,
                                   gray_threshold=0)
        result = self.image_compare.compare(compare_property)
        files = self.image_compare.handle_images(compare_property, self.temp)
        return result, files, compare_property.type, compare_property.light_template, compare_property.dark_template

    def compare_rear_blowlevel_two_ign_on(self) -> tuple:
        """
        设置二排空调吹风等级为2级
        """
        compare_property = CompareProperty()
        image_name = "rear_blowlevel_two_ign_on"
        dark = "atc_rear_rear_blowlevel_two_ign_on.bmp"
        light = "atc_rear_rear_blowlevel_two_ign_on.bmp"
        compare_type = "亮图"
        compare_property.set_value(name=image_name,
                                   compare_type=compare_type,
                                   screen_shot_images_path=self.screenshot,
                                   light_template="\\".join([self.templates, light]),
                                   dark_template="\\".join([self.templates, dark]),
                                   positions=[(588, 274, 101, 91)],
                                   similarity=90.0,
                                   gray=False,
                                   gray_threshold=0)
        result = self.image_compare.compare(compare_property)
        files = self.image_compare.handle_images(compare_property, self.temp)
        return result, files, compare_property.type, compare_property.light_template, compare_property.dark_template

    def compare_rear_blowlevel_three_ign_on(self) -> tuple:
        """
        设置二排空调吹风等级为3级
        """
        compare_property = CompareProperty()
        image_name = "rear_blowlevel_three_ign_on"
        dark = "atc_rear_rear_blowlevel_three_ign_on.bmp"
        light = "atc_rear_rear_blowlevel_three_ign_on.bmp"
        compare_type = "亮图"
        compare_property.set_value(name=image_name,
                                   compare_type=compare_type,
                                   screen_shot_images_path=self.screenshot,
                                   light_template="\\".join([self.templates, light]),
                                   dark_template="\\".join([self.templates, dark]),
                                   positions=[(588, 274, 101, 91)],
                                   similarity=90.0,
                                   gray=False,
                                   gray_threshold=0)
        result = self.image_compare.compare(compare_property)
        files = self.image_compare.handle_images(compare_property, self.temp)
        return result, files, compare_property.type, compare_property.light_template, compare_property.dark_template

    def compare_rear_blowlevel_four_ign_on(self) -> tuple:
        """
        设置二排空调吹风等级为4级
        """
        compare_property = CompareProperty()
        image_name = "rear_blowlevel_four_ign_on"
        dark = "atc_rear_rear_blowlevel_four_ign_on.bmp"
        light = "atc_rear_rear_blowlevel_four_ign_on.bmp"
        compare_type = "亮图"
        compare_property.set_value(name=image_name,
                                   compare_type=compare_type,
                                   screen_shot_images_path=self.screenshot,
                                   light_template="\\".join([self.templates, light]),
                                   dark_template="\\".join([self.templates, dark]),
                                   positions=[(588, 274, 101, 91)],
                                   similarity=90.0,
                                   gray=False,
                                   gray_threshold=0)
        result = self.image_compare.compare(compare_property)
        files = self.image_compare.handle_images(compare_property, self.temp)
        return result, files, compare_property.type, compare_property.light_template, compare_property.dark_template

    def compare_rear_blowlevel_five_ign_on(self) -> tuple:
        """
        设置二排空调吹风等级为5级
        """
        compare_property = CompareProperty()
        image_name = "rear_blowlevel_five_ign_on"
        dark = "atc_rear_rear_blowlevel_five_ign_on.bmp"
        light = "atc_rear_rear_blowlevel_five_ign_on.bmp"
        compare_type = "亮图"
        compare_property.set_value(name=image_name,
                                   compare_type=compare_type,
                                   screen_shot_images_path=self.screenshot,
                                   light_template="\\".join([self.templates, light]),
                                   dark_template="\\".join([self.templates, dark]),
                                   positions=[(588, 274, 101, 91)],
                                   similarity=90.0,
                                   gray=False,
                                   gray_threshold=0)
        result = self.image_compare.compare(compare_property)
        files = self.image_compare.handle_images(compare_property, self.temp)
        return result, files, compare_property.type, compare_property.light_template, compare_property.dark_template

    def compare_rear_blowlevel_six_ign_on(self) -> tuple:
        """
        设置二排空调吹风等级为6级
        """
        compare_property = CompareProperty()
        image_name = "rear_blowlevel_six_ign_on"
        dark = "atc_rear_rear_blowlevel_six_ign_on.bmp"
        light = "atc_rear_rear_blowlevel_six_ign_on.bmp"
        compare_type = "亮图"
        compare_property.set_value(name=image_name,
                                   compare_type=compare_type,
                                   screen_shot_images_path=self.screenshot,
                                   light_template="\\".join([self.templates, light]),
                                   dark_template="\\".join([self.templates, dark]),
                                   positions=[(588, 274, 101, 91)],
                                   similarity=90.0,
                                   gray=False,
                                   gray_threshold=0)
        result = self.image_compare.compare(compare_property)
        files = self.image_compare.handle_images(compare_property, self.temp)
        return result, files, compare_property.type, compare_property.light_template, compare_property.dark_template

    def compare_rear_blowlevel_seven_ign_on(self) -> tuple:
        """
        设置二排空调吹风等级为7级
        """
        compare_property = CompareProperty()
        image_name = "rear_blowlevel_seven_ign_on"
        dark = "atc_rear_rear_blowlevel_seven_ign_on.bmp"
        light = "atc_rear_rear_blowlevel_seven_ign_on.bmp"
        compare_type = "亮图"
        compare_property.set_value(name=image_name,
                                   compare_type=compare_type,
                                   screen_shot_images_path=self.screenshot,
                                   light_template="\\".join([self.templates, light]),
                                   dark_template="\\".join([self.templates, dark]),
                                   positions=[(588, 274, 101, 91)],
                                   similarity=90.0,
                                   gray=False,
                                   gray_threshold=0)
        result = self.image_compare.compare(compare_property)
        files = self.image_compare.handle_images(compare_property, self.temp)
        return result, files, compare_property.type, compare_property.light_template, compare_property.dark_template

    def compare_rear_left_temp_lo_ign_on(self) -> tuple:
        """
        二排左侧空调温度显示Lo
        """
        compare_property = CompareProperty()
        image_name = "rear_left_temp_lo_ign_on"
        dark = "atc_rear_rear_left_temp_lo_ign_on.bmp"
        light = "atc_rear_rear_left_temp_lo_ign_on.bmp"
        compare_type = "亮图"
        compare_property.set_value(name=image_name,
                                   compare_type=compare_type,
                                   screen_shot_images_path=self.screenshot,
                                   light_template="\\".join([self.templates, light]),
                                   dark_template="\\".join([self.templates, dark]),
                                   positions=[(346, 253, 117, 128)],
                                   similarity=90.0,
                                   gray=False,
                                   gray_threshold=0)
        result = self.image_compare.compare(compare_property)
        files = self.image_compare.handle_images(compare_property, self.temp)
        return result, files, compare_property.type, compare_property.light_template, compare_property.dark_template

    def compare_rear_left_temp_oneeight_ign_on(self) -> tuple:
        """
        二排左侧空调温度显示18℃
        """
        compare_property = CompareProperty()
        image_name = "rear_left_temp_oneeight_ign_on"
        dark = "atc_rear_rear_left_temp_oneeight_ign_on.bmp"
        light = "atc_rear_rear_left_temp_oneeight_ign_on.bmp"
        compare_type = "亮图"
        compare_property.set_value(name=image_name,
                                   compare_type=compare_type,
                                   screen_shot_images_path=self.screenshot,
                                   light_template="\\".join([self.templates, light]),
                                   dark_template="\\".join([self.templates, dark]),
                                   positions=[(346, 253, 117, 128)],
                                   similarity=90.0,
                                   gray=False,
                                   gray_threshold=0)
        result = self.image_compare.compare(compare_property)
        files = self.image_compare.handle_images(compare_property, self.temp)
        return result, files, compare_property.type, compare_property.light_template, compare_property.dark_template

    def compare_rear_left_temp_threetwo_ign_on(self) -> tuple:
        """
        二排左侧空调温度显示32℃
        """
        compare_property = CompareProperty()
        image_name = "rear_left_temp_threetwo_ign_on"
        dark = "atc_rear_rear_left_temp_threetwo_ign_on.bmp"
        light = "atc_rear_rear_left_temp_threetwo_ign_on.bmp"
        compare_type = "亮图"
        compare_property.set_value(name=image_name,
                                   compare_type=compare_type,
                                   screen_shot_images_path=self.screenshot,
                                   light_template="\\".join([self.templates, light]),
                                   dark_template="\\".join([self.templates, dark]),
                                   positions=[(346, 253, 117, 128)],
                                   similarity=90.0,
                                   gray=False,
                                   gray_threshold=0)
        result = self.image_compare.compare(compare_property)
        files = self.image_compare.handle_images(compare_property, self.temp)
        return result, files, compare_property.type, compare_property.light_template, compare_property.dark_template

    def compare_rear_left_temp_hi_ign_on(self) -> tuple:
        """
        二排左侧空调温度显示Hi
        """
        compare_property = CompareProperty()
        image_name = "rear_left_temp_hi_ign_on"
        dark = "atc_rear_rear_left_temp_hi_ign_on.bmp"
        light = "atc_rear_rear_left_temp_hi_ign_on.bmp"
        compare_type = "亮图"
        compare_property.set_value(name=image_name,
                                   compare_type=compare_type,
                                   screen_shot_images_path=self.screenshot,
                                   light_template="\\".join([self.templates, light]),
                                   dark_template="\\".join([self.templates, dark]),
                                   positions=[(346, 253, 117, 128)],
                                   similarity=90.0,
                                   gray=False,
                                   gray_threshold=0)
        result = self.image_compare.compare(compare_property)
        files = self.image_compare.handle_images(compare_property, self.temp)
        return result, files, compare_property.type, compare_property.light_template, compare_property.dark_template

    def compare_rear_right_temp_lo_ign_on(self) -> tuple:
        """
        二排右侧空调温度显示Lo
        """
        compare_property = CompareProperty()
        image_name = "rear_right_temp_lo_ign_on"
        dark = "atc_rear_rear_right_temp_lo_ign_on.bmp"
        light = "atc_rear_rear_right_temp_lo_ign_on.bmp"
        compare_type = "亮图"
        compare_property.set_value(name=image_name,
                                   compare_type=compare_type,
                                   screen_shot_images_path=self.screenshot,
                                   light_template="\\".join([self.templates, light]),
                                   dark_template="\\".join([self.templates, dark]),
                                   positions=[(771, 250, 137, 132)],
                                   similarity=90.0,
                                   gray=False,
                                   gray_threshold=0)
        result = self.image_compare.compare(compare_property)
        files = self.image_compare.handle_images(compare_property, self.temp)
        return result, files, compare_property.type, compare_property.light_template, compare_property.dark_template

    def compare_rear_right_temp_oneeight_ign_on(self) -> tuple:
        """
        二排右侧空调温度显示18℃
        """
        compare_property = CompareProperty()
        image_name = "rear_right_temp_oneeight_ign_on"
        dark = "atc_rear_rear_right_temp_oneeight_ign_on.bmp"
        light = "atc_rear_rear_right_temp_oneeight_ign_on.bmp"
        compare_type = "亮图"
        compare_property.set_value(name=image_name,
                                   compare_type=compare_type,
                                   screen_shot_images_path=self.screenshot,
                                   light_template="\\".join([self.templates, light]),
                                   dark_template="\\".join([self.templates, dark]),
                                   positions=[(771, 250, 137, 132)],
                                   similarity=90.0,
                                   gray=False,
                                   gray_threshold=0)
        result = self.image_compare.compare(compare_property)
        files = self.image_compare.handle_images(compare_property, self.temp)
        return result, files, compare_property.type, compare_property.light_template, compare_property.dark_template

    def compare_rear_right_temp_threetwo_ign_on(self) -> tuple:
        """
        二排右侧空调温度显示32℃
        """
        compare_property = CompareProperty()
        image_name = "rear_right_temp_threetwo_ign_on"
        dark = "atc_rear_rear_right_temp_threetwo_ign_on.bmp"
        light = "atc_rear_rear_right_temp_threetwo_ign_on.bmp"
        compare_type = "亮图"
        compare_property.set_value(name=image_name,
                                   compare_type=compare_type,
                                   screen_shot_images_path=self.screenshot,
                                   light_template="\\".join([self.templates, light]),
                                   dark_template="\\".join([self.templates, dark]),
                                   positions=[(771, 250, 137, 132)],
                                   similarity=90.0,
                                   gray=False,
                                   gray_threshold=0)
        result = self.image_compare.compare(compare_property)
        files = self.image_compare.handle_images(compare_property, self.temp)
        return result, files, compare_property.type, compare_property.light_template, compare_property.dark_template

    def compare_rear_right_temp_hi_ign_on(self) -> tuple:
        """
        二排右侧空调温度显示Hi
        """
        compare_property = CompareProperty()
        image_name = "rear_right_temp_hi_ign_on"
        dark = "atc_rear_rear_right_temp_hi_ign_on.bmp"
        light = "atc_rear_rear_right_temp_hi_ign_on.bmp"
        compare_type = "亮图"
        compare_property.set_value(name=image_name,
                                   compare_type=compare_type,
                                   screen_shot_images_path=self.screenshot,
                                   light_template="\\".join([self.templates, light]),
                                   dark_template="\\".join([self.templates, dark]),
                                   positions=[(771, 250, 137, 132)],
                                   similarity=90.0,
                                   gray=False,
                                   gray_threshold=0)
        result = self.image_compare.compare(compare_property)
        files = self.image_compare.handle_images(compare_property, self.temp)
        return result, files, compare_property.type, compare_property.light_template, compare_property.dark_template

    def compare_rear_blowmode_face_ign_on(self) -> tuple:
        """
        显示二排空调模式为吹面模式
        """
        compare_property = CompareProperty()
        image_name = "rear_blowmode_face_ign_on"
        dark = "atc_rear_rear_blowmode_face_ign_on.bmp"
        light = "atc_rear_rear_blowmode_face_ign_on.bmp"
        compare_type = "亮图"
        compare_property.set_value(name=image_name,
                                   compare_type=compare_type,
                                   screen_shot_images_path=self.screenshot,
                                   light_template="\\".join([self.templates, light]),
                                   dark_template="\\".join([self.templates, dark]),
                                   positions=[(62, 181, 125, 271), (1056, 200, 155, 253)],
                                   similarity=90.0,
                                   gray=False,
                                   gray_threshold=0)
        result = self.image_compare.compare(compare_property)
        files = self.image_compare.handle_images(compare_property, self.temp)
        return result, files, compare_property.type, compare_property.light_template, compare_property.dark_template

    def compare_rear_blowmode_foot_ign_on(self) -> tuple:
        """
        显示二排空调模式为吹脚模式
        """
        compare_property = CompareProperty()
        image_name = "rear_blowmode_foot_ign_on"
        dark = "atc_rear_rear_blowmode_foot_ign_on.bmp"
        light = "atc_rear_rear_blowmode_foot_ign_on.bmp"
        compare_type = "亮图"
        compare_property.set_value(name=image_name,
                                   compare_type=compare_type,
                                   screen_shot_images_path=self.screenshot,
                                   light_template="\\".join([self.templates, light]),
                                   dark_template="\\".join([self.templates, dark]),
                                   positions=[(183, 432, 208, 93), (903, 435, 188, 83)],
                                   similarity=90.0,
                                   gray=False,
                                   gray_threshold=0)
        result = self.image_compare.compare(compare_property)
        files = self.image_compare.handle_images(compare_property, self.temp)
        return result, files, compare_property.type, compare_property.light_template, compare_property.dark_template

    def compare_rear_blowmode_face_foot_ign_on(self) -> tuple:
        """
        显示二排空调模式为吹面吹脚模式
        """
        compare_property = CompareProperty()
        image_name = "rear_blowmode_face_foot_ign_on"
        dark = "atc_rear_rear_blowmode_face_foot_ign_on.bmp"
        light = "atc_rear_rear_blowmode_face_foot_ign_on.bmp"
        compare_type = "亮图"
        compare_property.set_value(name=image_name,
                                   compare_type=compare_type,
                                   screen_shot_images_path=self.screenshot,
                                   light_template="\\".join([self.templates, light]),
                                   dark_template="\\".join([self.templates, dark]),
                                   positions=[(62, 181, 125, 271), (1056, 200, 155, 253), (183, 432, 208, 93), (903, 435, 188, 83)],
                                   similarity=90.0,
                                   gray=False,
                                   gray_threshold=0)
        result = self.image_compare.compare(compare_property)
        files = self.image_compare.handle_images(compare_property, self.temp)
        return result, files, compare_property.type, compare_property.light_template, compare_property.dark_template

    def compare_rear_auto_mode_open_ign_on(self) -> tuple:
        """
        二排Auto开关高亮
        """
        compare_property = CompareProperty()
        image_name = "rear_auto_mode_open_ign_on"
        dark = "atc_rear_rear_auto_mode_open_ign_on.bmp"
        light = "atc_rear_rear_auto_mode_open_ign_on.bmp"
        compare_type = "亮图"
        compare_property.set_value(name=image_name,
                                   compare_type=compare_type,
                                   screen_shot_images_path=self.screenshot,
                                   light_template="\\".join([self.templates, light]),
                                   dark_template="\\".join([self.templates, dark]),
                                   positions=[(807, 530, 106, 59)],
                                   similarity=90.0,
                                   gray=False,
                                   gray_threshold=0)
        result = self.image_compare.compare(compare_property)
        files = self.image_compare.handle_images(compare_property, self.temp)
        return result, files, compare_property.type, compare_property.light_template, compare_property.dark_template

    def compare_rear_auto_mode_close_ign_on(self) -> tuple:
        """
        二排Auto开关不亮
        """
        compare_property = CompareProperty()
        image_name = "rear_auto_mode_close_ign_on"
        dark = "atc_rear_rear_auto_mode_close_ign_on.bmp"
        light = "atc_rear_rear_auto_mode_close_ign_on.bmp"
        compare_type = "暗图"
        compare_property.set_value(name=image_name,
                                   compare_type=compare_type,
                                   screen_shot_images_path=self.screenshot,
                                   light_template="\\".join([self.templates, light]),
                                   dark_template="\\".join([self.templates, dark]),
                                   positions=[(807, 530, 106, 59)],
                                   similarity=90.0,
                                   gray=False,
                                   gray_threshold=0)
        result = self.image_compare.compare(compare_property)
        files = self.image_compare.handle_images(compare_property, self.temp)
        return result, files, compare_property.type, compare_property.light_template, compare_property.dark_template

    def compare_rearrear_blowlevel_one_ign_on(self) -> tuple:
        """
        设置三排空调吹风等级为1级
        """
        compare_property = CompareProperty()
        image_name = "rearrear_blowlevel_one_ign_on"
        dark = "atc_rearrear_rearrear_blowlevel_one_ign_on.bmp"
        light = "atc_rearrear_rearrear_blowlevel_one_ign_on.bmp"
        compare_type = "亮图"
        compare_property.set_value(name=image_name,
                                   compare_type=compare_type,
                                   screen_shot_images_path=self.screenshot,
                                   light_template="\\".join([self.templates, light]),
                                   dark_template="\\".join([self.templates, dark]),
                                   positions=[(588, 274, 101, 91)],
                                   similarity=90.0,
                                   gray=False,
                                   gray_threshold=0)
        result = self.image_compare.compare(compare_property)
        files = self.image_compare.handle_images(compare_property, self.temp)
        return result, files, compare_property.type, compare_property.light_template, compare_property.dark_template

    def compare_rearrear_blowlevel_two_ign_on(self) -> tuple:
        """
        设置三排空调吹风等级为2级
        """
        compare_property = CompareProperty()
        image_name = "rearrear_blowlevel_two_ign_on"
        dark = "atc_rearrear_rearrear_blowlevel_two_ign_on.bmp"
        light = "atc_rearrear_rearrear_blowlevel_two_ign_on.bmp"
        compare_type = "亮图"
        compare_property.set_value(name=image_name,
                                   compare_type=compare_type,
                                   screen_shot_images_path=self.screenshot,
                                   light_template="\\".join([self.templates, light]),
                                   dark_template="\\".join([self.templates, dark]),
                                   positions=[(588, 274, 101, 91)],
                                   similarity=90.0,
                                   gray=False,
                                   gray_threshold=0)
        result = self.image_compare.compare(compare_property)
        files = self.image_compare.handle_images(compare_property, self.temp)
        return result, files, compare_property.type, compare_property.light_template, compare_property.dark_template

    def compare_rearrear_blowlevel_three_ign_on(self) -> tuple:
        """
        设置三排空调吹风等级为3级
        """
        compare_property = CompareProperty()
        image_name = "rearrear_blowlevel_three_ign_on"
        dark = "atc_rearrear_rearrear_blowlevel_three_ign_on.bmp"
        light = "atc_rearrear_rearrear_blowlevel_three_ign_on.bmp"
        compare_type = "亮图"
        compare_property.set_value(name=image_name,
                                   compare_type=compare_type,
                                   screen_shot_images_path=self.screenshot,
                                   light_template="\\".join([self.templates, light]),
                                   dark_template="\\".join([self.templates, dark]),
                                   positions=[(588, 274, 101, 91)],
                                   similarity=90.0,
                                   gray=False,
                                   gray_threshold=0)
        result = self.image_compare.compare(compare_property)
        files = self.image_compare.handle_images(compare_property, self.temp)
        return result, files, compare_property.type, compare_property.light_template, compare_property.dark_template

    def compare_rearrear_blowlevel_four_ign_on(self) -> tuple:
        """
        设置三排空调吹风等级为4级
        """
        compare_property = CompareProperty()
        image_name = "rearrear_blowlevel_four_ign_on"
        dark = "atc_rearrear_rearrear_blowlevel_four_ign_on.bmp"
        light = "atc_rearrear_rearrear_blowlevel_four_ign_on.bmp"
        compare_type = "亮图"
        compare_property.set_value(name=image_name,
                                   compare_type=compare_type,
                                   screen_shot_images_path=self.screenshot,
                                   light_template="\\".join([self.templates, light]),
                                   dark_template="\\".join([self.templates, dark]),
                                   positions=[(588, 274, 101, 91)],
                                   similarity=90.0,
                                   gray=False,
                                   gray_threshold=0)
        result = self.image_compare.compare(compare_property)
        files = self.image_compare.handle_images(compare_property, self.temp)
        return result, files, compare_property.type, compare_property.light_template, compare_property.dark_template

    def compare_rearrear_blowlevel_five_ign_on(self) -> tuple:
        """
        设置三排空调吹风等级为5级
        """
        compare_property = CompareProperty()
        image_name = "rearrear_blowlevel_five_ign_on"
        dark = "atc_rearrear_rearrear_blowlevel_five_ign_on.bmp"
        light = "atc_rearrear_rearrear_blowlevel_five_ign_on.bmp"
        compare_type = "亮图"
        compare_property.set_value(name=image_name,
                                   compare_type=compare_type,
                                   screen_shot_images_path=self.screenshot,
                                   light_template="\\".join([self.templates, light]),
                                   dark_template="\\".join([self.templates, dark]),
                                   positions=[(588, 274, 101, 91)],
                                   similarity=90.0,
                                   gray=False,
                                   gray_threshold=0)
        result = self.image_compare.compare(compare_property)
        files = self.image_compare.handle_images(compare_property, self.temp)
        return result, files, compare_property.type, compare_property.light_template, compare_property.dark_template

    def compare_rearrear_left_temp_lo_ign_on(self) -> tuple:
        """
        三排左侧空调温度显示Lo
        """
        compare_property = CompareProperty()
        image_name = "rearrear_left_temp_lo_ign_on"
        dark = "atc_rearrear_rearrear_left_temp_lo_ign_on.bmp"
        light = "atc_rearrear_rearrear_left_temp_lo_ign_on.bmp"
        compare_type = "暗图"
        compare_property.set_value(name=image_name,
                                   compare_type=compare_type,
                                   screen_shot_images_path=self.screenshot,
                                   light_template="\\".join([self.templates, light]),
                                   dark_template="\\".join([self.templates, dark]),
                                   positions=[(336, 278, 116, 90)],
                                   similarity=90.0,
                                   gray=False,
                                   gray_threshold=0)
        result = self.image_compare.compare(compare_property)
        files = self.image_compare.handle_images(compare_property, self.temp)
        return result, files, compare_property.type, compare_property.light_template, compare_property.dark_template

    def compare_rearrear_left_temp_mone_ign_on(self) -> tuple:
        """
        三排左侧空调温度显示M1
        """
        compare_property = CompareProperty()
        image_name = "rearrear_left_temp_mone_ign_on"
        dark = "atc_rearrear_rearrear_left_temp_mone_ign_on.bmp"
        light = "atc_rearrear_rearrear_left_temp_mone_ign_on.bmp"
        compare_type = "亮图"
        compare_property.set_value(name=image_name,
                                   compare_type=compare_type,
                                   screen_shot_images_path=self.screenshot,
                                   light_template="\\".join([self.templates, light]),
                                   dark_template="\\".join([self.templates, dark]),
                                   positions=[(336, 278, 116, 90)],
                                   similarity=90.0,
                                   gray=False,
                                   gray_threshold=0)
        result = self.image_compare.compare(compare_property)
        files = self.image_compare.handle_images(compare_property, self.temp)
        return result, files, compare_property.type, compare_property.light_template, compare_property.dark_template

    def compare_rearrear_left_temp_mtwo_ign_on(self) -> tuple:
        """
        三排左侧空调温度显示M2
        """
        compare_property = CompareProperty()
        image_name = "rearrear_left_temp_mtwo_ign_on"
        dark = "atc_rearrear_rearrear_left_temp_mtwo_ign_on.bmp"
        light = "atc_rearrear_rearrear_left_temp_mtwo_ign_on.bmp"
        compare_type = "亮图"
        compare_property.set_value(name=image_name,
                                   compare_type=compare_type,
                                   screen_shot_images_path=self.screenshot,
                                   light_template="\\".join([self.templates, light]),
                                   dark_template="\\".join([self.templates, dark]),
                                   positions=[(336, 278, 116, 90)],
                                   similarity=90.0,
                                   gray=False,
                                   gray_threshold=0)
        result = self.image_compare.compare(compare_property)
        files = self.image_compare.handle_images(compare_property, self.temp)
        return result, files, compare_property.type, compare_property.light_template, compare_property.dark_template

    def compare_rearrear_left_temp_mthree_ign_on(self) -> tuple:
        """
        三排左侧空调温度显示M3
        """
        compare_property = CompareProperty()
        image_name = "rearrear_left_temp_mthree_ign_on"
        dark = "atc_rearrear_rearrear_left_temp_mthree_ign_on.bmp"
        light = "atc_rearrear_rearrear_left_temp_mthree_ign_on.bmp"
        compare_type = "亮图"
        compare_property.set_value(name=image_name,
                                   compare_type=compare_type,
                                   screen_shot_images_path=self.screenshot,
                                   light_template="\\".join([self.templates, light]),
                                   dark_template="\\".join([self.templates, dark]),
                                   positions=[(368, 271, 73, 96)],
                                   similarity=90.0,
                                   gray=False,
                                   gray_threshold=0)
        result = self.image_compare.compare(compare_property)
        files = self.image_compare.handle_images(compare_property, self.temp)
        return result, files, compare_property.type, compare_property.light_template, compare_property.dark_template

    def compare_rearrear_left_temp_mfour_ign_on(self) -> tuple:
        """
        三排左侧空调温度显示M4
        """
        compare_property = CompareProperty()
        image_name = "rearrear_left_temp_mfour_ign_on"
        dark = "atc_rearrear_rearrear_left_temp_mfour_ign_on.bmp"
        light = "atc_rearrear_rearrear_left_temp_mfour_ign_on.bmp"
        compare_type = "亮图"
        compare_property.set_value(name=image_name,
                                   compare_type=compare_type,
                                   screen_shot_images_path=self.screenshot,
                                   light_template="\\".join([self.templates, light]),
                                   dark_template="\\".join([self.templates, dark]),
                                   positions=[(796, 283, 99, 75)],
                                   similarity=90.0,
                                   gray=False,
                                   gray_threshold=0)
        result = self.image_compare.compare(compare_property)
        files = self.image_compare.handle_images(compare_property, self.temp)
        return result, files, compare_property.type, compare_property.light_template, compare_property.dark_template

    def compare_rearrear_left_temp_hi_ign_on(self) -> tuple:
        """
        三排左侧空调温度显示Hi
        """
        compare_property = CompareProperty()
        image_name = "rearrear_left_temp_hi_ign_on"
        dark = "atc_rearrear_rearrear_left_temp_hi_ign_on.bmp"
        light = "atc_rearrear_rearrear_left_temp_hi_ign_on.bmp"
        compare_type = "亮图"
        compare_property.set_value(name=image_name,
                                   compare_type=compare_type,
                                   screen_shot_images_path=self.screenshot,
                                   light_template="\\".join([self.templates, light]),
                                   dark_template="\\".join([self.templates, dark]),
                                   positions=[(368, 271, 73, 96)],
                                   similarity=90.0,
                                   gray=False,
                                   gray_threshold=0)
        result = self.image_compare.compare(compare_property)
        files = self.image_compare.handle_images(compare_property, self.temp)
        return result, files, compare_property.type, compare_property.light_template, compare_property.dark_template

    def compare_rearrear_right_temp_lo_ign_on(self) -> tuple:
        """
        三排右侧空调温度显示Lo
        """
        compare_property = CompareProperty()
        image_name = "rearrear_right_temp_lo_ign_on"
        dark = "atc_rearrear_rearrear_right_temp_lo_ign_on.bmp"
        light = "atc_rearrear_rearrear_right_temp_lo_ign_on.bmp"
        compare_type = "亮图"
        compare_property.set_value(name=image_name,
                                   compare_type=compare_type,
                                   screen_shot_images_path=self.screenshot,
                                   light_template="\\".join([self.templates, light]),
                                   dark_template="\\".join([self.templates, dark]),
                                   positions=[(796, 283, 99, 75)],
                                   similarity=90.0,
                                   gray=False,
                                   gray_threshold=0)
        result = self.image_compare.compare(compare_property)
        files = self.image_compare.handle_images(compare_property, self.temp)
        return result, files, compare_property.type, compare_property.light_template, compare_property.dark_template

    def compare_rearrear_right_temp_mone_ign_on(self) -> tuple:
        """
        三排右侧空调温度显示M1
        """
        compare_property = CompareProperty()
        image_name = "rearrear_right_temp_mone_ign_on"
        dark = "atc_rearrear_rearrear_right_temp_mone_ign_on.bmp"
        light = "atc_rearrear_rearrear_right_temp_mone_ign_on.bmp"
        compare_type = "亮图"
        compare_property.set_value(name=image_name,
                                   compare_type=compare_type,
                                   screen_shot_images_path=self.screenshot,
                                   light_template="\\".join([self.templates, light]),
                                   dark_template="\\".join([self.templates, dark]),
                                   positions=[(796, 283, 99, 75)],
                                   similarity=90.0,
                                   gray=False,
                                   gray_threshold=0)
        result = self.image_compare.compare(compare_property)
        files = self.image_compare.handle_images(compare_property, self.temp)
        return result, files, compare_property.type, compare_property.light_template, compare_property.dark_template

    def compare_rearrear_right_temp_mtwo_ign_on(self) -> tuple:
        """
        三排右侧空调温度显示M2
        """
        compare_property = CompareProperty()
        image_name = "rearrear_right_temp_mtwo_ign_on"
        dark = "atc_rearrear_rearrear_right_temp_mtwo_ign_on.bmp"
        light = "atc_rearrear_rearrear_right_temp_mtwo_ign_on.bmp"
        compare_type = "亮图"
        compare_property.set_value(name=image_name,
                                   compare_type=compare_type,
                                   screen_shot_images_path=self.screenshot,
                                   light_template="\\".join([self.templates, light]),
                                   dark_template="\\".join([self.templates, dark]),
                                   positions=[(796, 283, 99, 75)],
                                   similarity=90.0,
                                   gray=False,
                                   gray_threshold=0)
        result = self.image_compare.compare(compare_property)
        files = self.image_compare.handle_images(compare_property, self.temp)
        return result, files, compare_property.type, compare_property.light_template, compare_property.dark_template

    def compare_rearrear_right_temp_mthree_ign_on(self) -> tuple:
        """
        三排右侧空调温度显示M3
        """
        compare_property = CompareProperty()
        image_name = "rearrear_right_temp_mthree_ign_on"
        dark = "atc_rearrear_rearrear_right_temp_mthree_ign_on.bmp"
        light = "atc_rearrear_rearrear_right_temp_mthree_ign_on.bmp"
        compare_type = "亮图"
        compare_property.set_value(name=image_name,
                                   compare_type=compare_type,
                                   screen_shot_images_path=self.screenshot,
                                   light_template="\\".join([self.templates, light]),
                                   dark_template="\\".join([self.templates, dark]),
                                   positions=[(368, 271, 73, 96)],
                                   similarity=90.0,
                                   gray=False,
                                   gray_threshold=0)
        result = self.image_compare.compare(compare_property)
        files = self.image_compare.handle_images(compare_property, self.temp)
        return result, files, compare_property.type, compare_property.light_template, compare_property.dark_template

    def compare_rearrear_right_temp_mfour_ign_on(self) -> tuple:
        """
        三排右侧空调温度显示M4
        """
        compare_property = CompareProperty()
        image_name = "rearrear_right_temp_mfour_ign_on"
        dark = "atc_rearrear_rearrear_right_temp_mfour_ign_on.bmp"
        light = "atc_rearrear_rearrear_right_temp_mfour_ign_on.bmp"
        compare_type = "亮图"
        compare_property.set_value(name=image_name,
                                   compare_type=compare_type,
                                   screen_shot_images_path=self.screenshot,
                                   light_template="\\".join([self.templates, light]),
                                   dark_template="\\".join([self.templates, dark]),
                                   positions=[(796, 283, 99, 75)],
                                   similarity=90.0,
                                   gray=False,
                                   gray_threshold=0)
        result = self.image_compare.compare(compare_property)
        files = self.image_compare.handle_images(compare_property, self.temp)
        return result, files, compare_property.type, compare_property.light_template, compare_property.dark_template

    def compare_rearrear_right_temp_hi_ign_on(self) -> tuple:
        """
        三排右侧空调温度显示Hi
        """
        compare_property = CompareProperty()
        image_name = "rearrear_right_temp_hi_ign_on"
        dark = "atc_rearrear_rearrear_right_temp_hi_ign_on.bmp"
        light = "atc_rearrear_rearrear_right_temp_hi_ign_on.bmp"
        compare_type = "亮图"
        compare_property.set_value(name=image_name,
                                   compare_type=compare_type,
                                   screen_shot_images_path=self.screenshot,
                                   light_template="\\".join([self.templates, light]),
                                   dark_template="\\".join([self.templates, dark]),
                                   positions=[(789, 278, 105, 83)],
                                   similarity=90.0,
                                   gray=False,
                                   gray_threshold=0)
        result = self.image_compare.compare(compare_property)
        files = self.image_compare.handle_images(compare_property, self.temp)
        return result, files, compare_property.type, compare_property.light_template, compare_property.dark_template

    def compare_rearrear_blowmode_face_ign_on(self) -> tuple:
        """
        显示三排空调模式为吹面模式
        """
        compare_property = CompareProperty()
        image_name = "rearrear_blowmode_face_ign_on"
        dark = "atc_rearrear_rearrear_blowmode_face_ign_on.bmp"
        light = "atc_rearrear_rearrear_blowmode_face_ign_on.bmp"
        compare_type = "亮图"
        compare_property.set_value(name=image_name,
                                   compare_type=compare_type,
                                   screen_shot_images_path=self.screenshot,
                                   light_template="\\".join([self.templates, light]),
                                   dark_template="\\".join([self.templates, dark]),
                                   positions=[(53, 184, 149, 277), (1071, 192, 146, 260)],
                                   similarity=90.0,
                                   gray=False,
                                   gray_threshold=0)
        result = self.image_compare.compare(compare_property)
        files = self.image_compare.handle_images(compare_property, self.temp)
        return result, files, compare_property.type, compare_property.light_template, compare_property.dark_template

    def compare_rearrear_blowmode_foot_ign_on(self) -> tuple:
        """
        显示三排空调模式为吹脚模式
        """
        compare_property = CompareProperty()
        image_name = "rearrear_blowmode_foot_ign_on"
        dark = "atc_rearrear_rearrear_blowmode_foot_ign_on.bmp"
        light = "atc_rearrear_rearrear_blowmode_foot_ign_on.bmp"
        compare_type = "亮图"
        compare_property.set_value(name=image_name,
                                   compare_type=compare_type,
                                   screen_shot_images_path=self.screenshot,
                                   light_template="\\".join([self.templates, light]),
                                   dark_template="\\".join([self.templates, dark]),
                                   positions=[(183, 433, 195, 91), (896, 426, 191, 100)],
                                   similarity=90.0,
                                   gray=False,
                                   gray_threshold=0)
        result = self.image_compare.compare(compare_property)
        files = self.image_compare.handle_images(compare_property, self.temp)
        return result, files, compare_property.type, compare_property.light_template, compare_property.dark_template

    def compare_rearrear_blowmode_face_foot_ign_on(self) -> tuple:
        """
        显示三排空调模式为吹面吹脚模式
        """
        compare_property = CompareProperty()
        image_name = "rearrear_blowmode_face_foot_ign_on"
        dark = "atc_rearrear_rearrear_blowmode_face_foot_ign_on.bmp"
        light = "atc_rearrear_rearrear_blowmode_face_foot_ign_on.bmp"
        compare_type = "亮图"
        compare_property.set_value(name=image_name,
                                   compare_type=compare_type,
                                   screen_shot_images_path=self.screenshot,
                                   light_template="\\".join([self.templates, light]),
                                   dark_template="\\".join([self.templates, dark]),
                                   positions=[(53, 184, 149, 277), (1071, 192, 146, 260), (183, 433, 195, 91), (896, 426, 191, 100)],
                                   similarity=90.0,
                                   gray=False,
                                   gray_threshold=0)
        result = self.image_compare.compare(compare_property)
        files = self.image_compare.handle_images(compare_property, self.temp)
        return result, files, compare_property.type, compare_property.light_template, compare_property.dark_template

    def compare_rearrear_auto_mode_open_ign_on(self) -> tuple:
        """
        三排Auto开关高亮
        """
        compare_property = CompareProperty()
        image_name = "rearrear_auto_mode_open_ign_on"
        dark = "atc_rearrear_rearrear_auto_mode_open_ign_on.bmp"
        light = "atc_rearrear_rearrear_auto_mode_open_ign_on.bmp"
        compare_type = "亮图"
        compare_property.set_value(name=image_name,
                                   compare_type=compare_type,
                                   screen_shot_images_path=self.screenshot,
                                   light_template="\\".join([self.templates, light]),
                                   dark_template="\\".join([self.templates, dark]),
                                   positions=[(792, 532, 126, 59)],
                                   similarity=90.0,
                                   gray=False,
                                   gray_threshold=0)
        result = self.image_compare.compare(compare_property)
        files = self.image_compare.handle_images(compare_property, self.temp)
        return result, files, compare_property.type, compare_property.light_template, compare_property.dark_template

    def compare_rearrear_auto_mode_close_ign_on(self) -> tuple:
        """
        三排Auto开关不亮
        """
        compare_property = CompareProperty()
        image_name = "rearrear_auto_mode_close_ign_on"
        dark = "atc_rearrear_rearrear_auto_mode_close_ign_on.bmp"
        light = "atc_rearrear_rearrear_auto_mode_close_ign_on.bmp"
        compare_type = "亮图"
        compare_property.set_value(name=image_name,
                                   compare_type=compare_type,
                                   screen_shot_images_path=self.screenshot,
                                   light_template="\\".join([self.templates, light]),
                                   dark_template="\\".join([self.templates, dark]),
                                   positions=[(792, 532, 126, 59)],
                                   similarity=90.0,
                                   gray=False,
                                   gray_threshold=0)
        result = self.image_compare.compare(compare_property)
        files = self.image_compare.handle_images(compare_property, self.temp)
        return result, files, compare_property.type, compare_property.light_template, compare_property.dark_template

    def compare_rearrear_ac_open_ign_on(self) -> tuple:
        """
        三排空调OFF开关不亮
        """
        compare_property = CompareProperty()
        image_name = "rearrear_ac_open_ign_on"
        dark = "atc_rearrear_rearrear_ac_open_ign_on.bmp"
        light = "atc_rearrear_rearrear_ac_open_ign_on.bmp"
        compare_type = "亮图"
        compare_property.set_value(name=image_name,
                                   compare_type=compare_type,
                                   screen_shot_images_path=self.screenshot,
                                   light_template="\\".join([self.templates, light]),
                                   dark_template="\\".join([self.templates, dark]),
                                   positions=[(375, 533, 88, 53)],
                                   similarity=90.0,
                                   gray=False,
                                   gray_threshold=0)
        result = self.image_compare.compare(compare_property)
        files = self.image_compare.handle_images(compare_property, self.temp)
        return result, files, compare_property.type, compare_property.light_template, compare_property.dark_template

    def compare_rearrear_ac_close_ign_on(self) -> tuple:
        """
        三排空调OFF开关高亮
        """
        compare_property = CompareProperty()
        image_name = "rearrear_ac_close_ign_on"
        dark = "atc_rearrear_rearrear_ac_close_ign_on.bmp"
        light = "atc_rearrear_rearrear_ac_close_ign_on.bmp"
        compare_type = "亮图"
        compare_property.set_value(name=image_name,
                                   compare_type=compare_type,
                                   screen_shot_images_path=self.screenshot,
                                   light_template="\\".join([self.templates, light]),
                                   dark_template="\\".join([self.templates, dark]),
                                   positions=[(375, 533, 88, 53)],
                                   similarity=90.0,
                                   gray=False,
                                   gray_threshold=0)
        result = self.image_compare.compare(compare_property)
        files = self.image_compare.handle_images(compare_property, self.temp)
        return result, files, compare_property.type, compare_property.light_template, compare_property.dark_template

    def compare_fl_seat_vent_level_three_on(self) -> tuple:
        """
        驾驶员座椅3级通风开启
        """
        compare_property = CompareProperty()
        image_name = "fl_seat_vent_level_three_on"
        dark = "bcm_seat_fl_seat_vent_level_three_on.bmp"
        light = "bcm_seat_fl_seat_vent_level_three_on.bmp"
        compare_type = "亮图"
        compare_property.set_value(name=image_name,
                                   compare_type=compare_type,
                                   screen_shot_images_path=self.screenshot,
                                   light_template="\\".join([self.templates, light]),
                                   dark_template="\\".join([self.templates, dark]),
                                   positions=[(317, 110, 106, 94)],
                                   similarity=90.0,
                                   gray=False,
                                   gray_threshold=0)
        result = self.image_compare.compare(compare_property)
        files = self.image_compare.handle_images(compare_property, self.temp)
        return result, files, compare_property.type, compare_property.light_template, compare_property.dark_template

    def compare_fl_seat_vent_level_two_on(self) -> tuple:
        """
        驾驶员座椅2级通风开启
        """
        compare_property = CompareProperty()
        image_name = "fl_seat_vent_level_two_on"
        dark = "bcm_seat_fl_seat_vent_level_two_on.bmp"
        light = "bcm_seat_fl_seat_vent_level_two_on.bmp"
        compare_type = "亮图"
        compare_property.set_value(name=image_name,
                                   compare_type=compare_type,
                                   screen_shot_images_path=self.screenshot,
                                   light_template="\\".join([self.templates, light]),
                                   dark_template="\\".join([self.templates, dark]),
                                   positions=[(317, 110, 106, 94)],
                                   similarity=90.0,
                                   gray=False,
                                   gray_threshold=0)
        result = self.image_compare.compare(compare_property)
        files = self.image_compare.handle_images(compare_property, self.temp)
        return result, files, compare_property.type, compare_property.light_template, compare_property.dark_template

    def compare_fl_seat_vent_level_off(self) -> tuple:
        """
        驾驶员座椅通风关闭
        """
        compare_property = CompareProperty()
        image_name = "fl_seat_vent_level_off"
        dark = "bcm_seat_fl_seat_vent_level_off.bmp"
        light = "bcm_seat_fl_seat_vent_level_off.bmp"
        compare_type = "亮图"
        compare_property.set_value(name=image_name,
                                   compare_type=compare_type,
                                   screen_shot_images_path=self.screenshot,
                                   light_template="\\".join([self.templates, light]),
                                   dark_template="\\".join([self.templates, dark]),
                                   positions=[(317, 110, 106, 94)],
                                   similarity=90.0,
                                   gray=False,
                                   gray_threshold=0)
        result = self.image_compare.compare(compare_property)
        files = self.image_compare.handle_images(compare_property, self.temp)
        return result, files, compare_property.type, compare_property.light_template, compare_property.dark_template

    def compare_fl_seat_heat_level_three_on(self) -> tuple:
        """
        驾驶员座椅3级加热开启
        """
        compare_property = CompareProperty()
        image_name = "fl_seat_heat_level_three_on"
        dark = "bcm_seat_fl_seat_heat_level_three_on.bmp"
        light = "bcm_seat_fl_seat_heat_level_three_on.bmp"
        compare_type = "亮图"
        compare_property.set_value(name=image_name,
                                   compare_type=compare_type,
                                   screen_shot_images_path=self.screenshot,
                                   light_template="\\".join([self.templates, light]),
                                   dark_template="\\".join([self.templates, dark]),
                                   positions=[(548, 113, 93, 92)],
                                   similarity=90.0,
                                   gray=False,
                                   gray_threshold=0)
        result = self.image_compare.compare(compare_property)
        files = self.image_compare.handle_images(compare_property, self.temp)
        return result, files, compare_property.type, compare_property.light_template, compare_property.dark_template

    def compare_fl_seat_heat_level_two_on(self) -> tuple:
        """
        驾驶员座椅2级加热开启
        """
        compare_property = CompareProperty()
        image_name = "fl_seat_heat_level_two_on"
        dark = "bcm_seat_fl_seat_heat_level_two_on.bmp"
        light = "bcm_seat_fl_seat_heat_level_two_on.bmp"
        compare_type = "亮图"
        compare_property.set_value(name=image_name,
                                   compare_type=compare_type,
                                   screen_shot_images_path=self.screenshot,
                                   light_template="\\".join([self.templates, light]),
                                   dark_template="\\".join([self.templates, dark]),
                                   positions=[(548, 113, 93, 92)],
                                   similarity=90.0,
                                   gray=False,
                                   gray_threshold=0)
        result = self.image_compare.compare(compare_property)
        files = self.image_compare.handle_images(compare_property, self.temp)
        return result, files, compare_property.type, compare_property.light_template, compare_property.dark_template

    def compare_fl_seat_heat_level_off(self) -> tuple:
        """
        驾驶员座椅加热关闭
        """
        compare_property = CompareProperty()
        image_name = "fl_seat_heat_level_off"
        dark = "bcm_seat_fl_seat_heat_level_off.bmp"
        light = "bcm_seat_fl_seat_heat_level_off.bmp"
        compare_type = "亮图"
        compare_property.set_value(name=image_name,
                                   compare_type=compare_type,
                                   screen_shot_images_path=self.screenshot,
                                   light_template="\\".join([self.templates, light]),
                                   dark_template="\\".join([self.templates, dark]),
                                   positions=[(548, 113, 93, 92)],
                                   similarity=90.0,
                                   gray=False,
                                   gray_threshold=0)
        result = self.image_compare.compare(compare_property)
        files = self.image_compare.handle_images(compare_property, self.temp)
        return result, files, compare_property.type, compare_property.light_template, compare_property.dark_template

    def compare_fl_seatmassage_wave_level_one(self) -> tuple:
        """
        驾驶员座椅1级波浪按摩
        """
        compare_property = CompareProperty()
        image_name = "fl_seatmassage_wave_level_one"
        dark = "bcm_seat_fl_seatmassage_wave_level_one.bmp"
        light = "bcm_seat_fl_seatmassage_wave_level_one.bmp"
        compare_type = "亮图"
        compare_property.set_value(name=image_name,
                                   compare_type=compare_type,
                                   screen_shot_images_path=self.screenshot,
                                   light_template="\\".join([self.templates, light]),
                                   dark_template="\\".join([self.templates, dark]),
                                   positions=[(318, 272, 109, 114)],
                                   similarity=90.0,
                                   gray=False,
                                   gray_threshold=0)
        result = self.image_compare.compare(compare_property)
        files = self.image_compare.handle_images(compare_property, self.temp)
        return result, files, compare_property.type, compare_property.light_template, compare_property.dark_template

    def compare_fl_seatmassage_snake_level_two(self) -> tuple:
        """
        驾驶员座椅2级蛇形按摩
        """
        compare_property = CompareProperty()
        image_name = "fl_seatmassage_snake_level_two"
        dark = "bcm_seat_fl_seatmassage_snake_level_two.bmp"
        light = "bcm_seat_fl_seatmassage_snake_level_two.bmp"
        compare_type = "亮图"
        compare_property.set_value(name=image_name,
                                   compare_type=compare_type,
                                   screen_shot_images_path=self.screenshot,
                                   light_template="\\".join([self.templates, light]),
                                   dark_template="\\".join([self.templates, dark]),
                                   positions=[(543, 275, 106, 108)],
                                   similarity=90.0,
                                   gray=False,
                                   gray_threshold=0)
        result = self.image_compare.compare(compare_property)
        files = self.image_compare.handle_images(compare_property, self.temp)
        return result, files, compare_property.type, compare_property.light_template, compare_property.dark_template

    def compare_fl_seatmassage_butterfly_level_three(self) -> tuple:
        """
        驾驶员座椅3级蝴蝶按摩
        """
        compare_property = CompareProperty()
        image_name = "fl_seatmassage_butterfly_level_three"
        dark = "bcm_seat_fl_seatmassage_butterfly_level_three.bmp"
        light = "bcm_seat_fl_seatmassage_butterfly_level_three.bmp"
        compare_type = "亮图"
        compare_property.set_value(name=image_name,
                                   compare_type=compare_type,
                                   screen_shot_images_path=self.screenshot,
                                   light_template="\\".join([self.templates, light]),
                                   dark_template="\\".join([self.templates, dark]),
                                   positions=[(768, 275, 116, 111)],
                                   similarity=90.0,
                                   gray=False,
                                   gray_threshold=0)
        result = self.image_compare.compare(compare_property)
        files = self.image_compare.handle_images(compare_property, self.temp)
        return result, files, compare_property.type, compare_property.light_template, compare_property.dark_template

    def compare_fl_seatmemory_posone(self) -> tuple:
        """
        主驾座椅记忆位置1
        """
        compare_property = CompareProperty()
        image_name = "fl_seatmemory_posone"
        dark = "bcm_seat_fl_seatmemory_posone.bmp"
        light = "bcm_seat_fl_seatmemory_posone.bmp"
        compare_type = "亮图"
        compare_property.set_value(name=image_name,
                                   compare_type=compare_type,
                                   screen_shot_images_path=self.screenshot,
                                   light_template="\\".join([self.templates, light]),
                                   dark_template="\\".join([self.templates, dark]),
                                   positions=[(322, 428, 102, 105)],
                                   similarity=90.0,
                                   gray=False,
                                   gray_threshold=0)
        result = self.image_compare.compare(compare_property)
        files = self.image_compare.handle_images(compare_property, self.temp)
        return result, files, compare_property.type, compare_property.light_template, compare_property.dark_template

    def compare_fr_seat_vent_level_three_on(self) -> tuple:
        """
        前排乘客座椅3级通风开启
        """
        compare_property = CompareProperty()
        image_name = "fr_seat_vent_level_three_on"
        dark = "bcm_seat_fr_seat_vent_level_three_on.bmp"
        light = "bcm_seat_fr_seat_vent_level_three_on.bmp"
        compare_type = "亮图"
        compare_property.set_value(name=image_name,
                                   compare_type=compare_type,
                                   screen_shot_images_path=self.screenshot,
                                   light_template="\\".join([self.templates, light]),
                                   dark_template="\\".join([self.templates, dark]),
                                   positions=[(856, 112, 108, 96)],
                                   similarity=90.0,
                                   gray=False,
                                   gray_threshold=0)
        result = self.image_compare.compare(compare_property)
        files = self.image_compare.handle_images(compare_property, self.temp)
        return result, files, compare_property.type, compare_property.light_template, compare_property.dark_template

    def compare_fr_seat_vent_level_two_on(self) -> tuple:
        """
        前排乘客座椅2级通风开启
        """
        compare_property = CompareProperty()
        image_name = "fr_seat_vent_level_two_on"
        dark = "bcm_seat_fr_seat_vent_level_two_on.bmp"
        light = "bcm_seat_fr_seat_vent_level_two_on.bmp"
        compare_type = "亮图"
        compare_property.set_value(name=image_name,
                                   compare_type=compare_type,
                                   screen_shot_images_path=self.screenshot,
                                   light_template="\\".join([self.templates, light]),
                                   dark_template="\\".join([self.templates, dark]),
                                   positions=[(856, 112, 108, 96)],
                                   similarity=90.0,
                                   gray=False,
                                   gray_threshold=0)
        result = self.image_compare.compare(compare_property)
        files = self.image_compare.handle_images(compare_property, self.temp)
        return result, files, compare_property.type, compare_property.light_template, compare_property.dark_template

    def compare_fr_seat_vent_level_off(self) -> tuple:
        """
        前排乘客座椅通风关闭
        """
        compare_property = CompareProperty()
        image_name = "fr_seat_vent_level_off"
        dark = "bcm_seat_fr_seat_vent_level_off.bmp"
        light = "bcm_seat_fr_seat_vent_level_off.bmp"
        compare_type = "亮图"
        compare_property.set_value(name=image_name,
                                   compare_type=compare_type,
                                   screen_shot_images_path=self.screenshot,
                                   light_template="\\".join([self.templates, light]),
                                   dark_template="\\".join([self.templates, dark]),
                                   positions=[(856, 112, 108, 96)],
                                   similarity=90.0,
                                   gray=False,
                                   gray_threshold=0)
        result = self.image_compare.compare(compare_property)
        files = self.image_compare.handle_images(compare_property, self.temp)
        return result, files, compare_property.type, compare_property.light_template, compare_property.dark_template

    def compare_fr_seat_heat_level_three_on(self) -> tuple:
        """
        前排乘客座椅3级加热开启
        """
        compare_property = CompareProperty()
        image_name = "fr_seat_heat_level_three_on"
        dark = "bcm_seat_fr_seat_heat_level_three_on.bmp"
        light = "bcm_seat_fr_seat_heat_level_three_on.bmp"
        compare_type = "亮图"
        compare_property.set_value(name=image_name,
                                   compare_type=compare_type,
                                   screen_shot_images_path=self.screenshot,
                                   light_template="\\".join([self.templates, light]),
                                   dark_template="\\".join([self.templates, dark]),
                                   positions=[(614, 106, 117, 103)],
                                   similarity=90.0,
                                   gray=False,
                                   gray_threshold=0)
        result = self.image_compare.compare(compare_property)
        files = self.image_compare.handle_images(compare_property, self.temp)
        return result, files, compare_property.type, compare_property.light_template, compare_property.dark_template

    def compare_fr_seat_heat_level_two_on(self) -> tuple:
        """
        前排乘客座椅2级加热开启
        """
        compare_property = CompareProperty()
        image_name = "fr_seat_heat_level_two_on"
        dark = "bcm_seat_fr_seat_heat_level_two_on.bmp"
        light = "bcm_seat_fr_seat_heat_level_two_on.bmp"
        compare_type = "亮图"
        compare_property.set_value(name=image_name,
                                   compare_type=compare_type,
                                   screen_shot_images_path=self.screenshot,
                                   light_template="\\".join([self.templates, light]),
                                   dark_template="\\".join([self.templates, dark]),
                                   positions=[(614, 106, 117, 103)],
                                   similarity=90.0,
                                   gray=False,
                                   gray_threshold=0)
        result = self.image_compare.compare(compare_property)
        files = self.image_compare.handle_images(compare_property, self.temp)
        return result, files, compare_property.type, compare_property.light_template, compare_property.dark_template

    def compare_fr_seat_heat_level_off(self) -> tuple:
        """
        前排乘客座椅加热关闭
        """
        compare_property = CompareProperty()
        image_name = "fr_seat_heat_level_off"
        dark = "bcm_seat_fr_seat_heat_level_off.bmp"
        light = "bcm_seat_fr_seat_heat_level_off.bmp"
        compare_type = "亮图"
        compare_property.set_value(name=image_name,
                                   compare_type=compare_type,
                                   screen_shot_images_path=self.screenshot,
                                   light_template="\\".join([self.templates, light]),
                                   dark_template="\\".join([self.templates, dark]),
                                   positions=[(614, 106, 117, 103)],
                                   similarity=90.0,
                                   gray=False,
                                   gray_threshold=0)
        result = self.image_compare.compare(compare_property)
        files = self.image_compare.handle_images(compare_property, self.temp)
        return result, files, compare_property.type, compare_property.light_template, compare_property.dark_template

    def compare_fr_seatmassage_wave_level_one(self) -> tuple:
        """
        前排乘客座椅1级波浪按摩
        """
        compare_property = CompareProperty()
        image_name = "fr_seatmassage_wave_level_one"
        dark = "bcm_seat_fr_seatmassage_wave_level_one.bmp"
        light = "bcm_seat_fr_seatmassage_wave_level_one.bmp"
        compare_type = "亮图"
        compare_property.set_value(name=image_name,
                                   compare_type=compare_type,
                                   screen_shot_images_path=self.screenshot,
                                   light_template="\\".join([self.templates, light]),
                                   dark_template="\\".join([self.templates, dark]),
                                   positions=[(844, 263, 123, 120)],
                                   similarity=90.0,
                                   gray=False,
                                   gray_threshold=0)
        result = self.image_compare.compare(compare_property)
        files = self.image_compare.handle_images(compare_property, self.temp)
        return result, files, compare_property.type, compare_property.light_template, compare_property.dark_template

    def compare_fr_seatmassage_snake_level_two(self) -> tuple:
        """
        前排乘客座椅2级蛇形按摩
        """
        compare_property = CompareProperty()
        image_name = "fr_seatmassage_snake_level_two"
        dark = "bcm_seat_fr_seatmassage_snake_level_two.bmp"
        light = "bcm_seat_fr_seatmassage_snake_level_two.bmp"
        compare_type = "亮图"
        compare_property.set_value(name=image_name,
                                   compare_type=compare_type,
                                   screen_shot_images_path=self.screenshot,
                                   light_template="\\".join([self.templates, light]),
                                   dark_template="\\".join([self.templates, dark]),
                                   positions=[(619, 270, 127, 116)],
                                   similarity=90.0,
                                   gray=False,
                                   gray_threshold=0)
        result = self.image_compare.compare(compare_property)
        files = self.image_compare.handle_images(compare_property, self.temp)
        return result, files, compare_property.type, compare_property.light_template, compare_property.dark_template

    def compare_fr_seatmassage_butterfry_level_three(self) -> tuple:
        """
        前排乘客座椅3级蝴蝶按摩
        """
        compare_property = CompareProperty()
        image_name = "fr_seatmassage_butterfry_level_three"
        dark = "bcm_seat_fr_seatmassage_butterfry_level_three.bmp"
        light = "bcm_seat_fr_seatmassage_butterfry_level_three.bmp"
        compare_type = "亮图"
        compare_property.set_value(name=image_name,
                                   compare_type=compare_type,
                                   screen_shot_images_path=self.screenshot,
                                   light_template="\\".join([self.templates, light]),
                                   dark_template="\\".join([self.templates, dark]),
                                   positions=[(390, 267, 124, 119)],
                                   similarity=90.0,
                                   gray=False,
                                   gray_threshold=0)
        result = self.image_compare.compare(compare_property)
        files = self.image_compare.handle_images(compare_property, self.temp)
        return result, files, compare_property.type, compare_property.light_template, compare_property.dark_template

    def compare_fr_seatmemory_posone(self) -> tuple:
        """
        前排乘客座椅记忆位置1
        """
        compare_property = CompareProperty()
        image_name = "fr_seatmemory_posone"
        dark = "bcm_seat_fr_seatmemory_posone.bmp"
        light = "bcm_seat_fr_seatmemory_posone.bmp"
        compare_type = "亮图"
        compare_property.set_value(name=image_name,
                                   compare_type=compare_type,
                                   screen_shot_images_path=self.screenshot,
                                   light_template="\\".join([self.templates, light]),
                                   dark_template="\\".join([self.templates, dark]),
                                   positions=[(853, 424, 114, 117)],
                                   similarity=90.0,
                                   gray=False,
                                   gray_threshold=0)
        result = self.image_compare.compare(compare_property)
        files = self.image_compare.handle_images(compare_property, self.temp)
        return result, files, compare_property.type, compare_property.light_template, compare_property.dark_template

    def compare_rearwindow_heating_open(self) -> tuple:
        """
        打开后除霜
        """
        compare_property = CompareProperty()
        image_name = "rearwindow_heating_open"
        dark = "bcm_rearwindow_heating_open.bmp"
        light = "bcm_rearwindow_heating_open.bmp"
        compare_type = "亮图"
        compare_property.set_value(name=image_name,
                                   compare_type=compare_type,
                                   screen_shot_images_path=self.screenshot,
                                   light_template="\\".join([self.templates, light]),
                                   dark_template="\\".join([self.templates, dark]),
                                   positions=[(393, 69, 113, 54)],
                                   similarity=90.0,
                                   gray=False,
                                   gray_threshold=0)
        result = self.image_compare.compare(compare_property)
        files = self.image_compare.handle_images(compare_property, self.temp)
        return result, files, compare_property.type, compare_property.light_template, compare_property.dark_template

    def compare_rearwindow_heating_close(self) -> tuple:
        """
        关闭后除霜
        """
        compare_property = CompareProperty()
        image_name = "rearwindow_heating_close"
        dark = "bcm_rearwindow_heating_close.bmp"
        light = "bcm_rearwindow_heating_close.bmp"
        compare_type = "亮图"
        compare_property.set_value(name=image_name,
                                   compare_type=compare_type,
                                   screen_shot_images_path=self.screenshot,
                                   light_template="\\".join([self.templates, light]),
                                   dark_template="\\".join([self.templates, dark]),
                                   positions=[(393, 69, 113, 54)],
                                   similarity=90.0,
                                   gray=False,
                                   gray_threshold=0)
        result = self.image_compare.compare(compare_property)
        files = self.image_compare.handle_images(compare_property, self.temp)
        return result, files, compare_property.type, compare_property.light_template, compare_property.dark_template

    def compare_steeringwheel_heat_open(self) -> tuple:
        """
        打开方向盘加热
        """
        compare_property = CompareProperty()
        image_name = "steeringwheel_heat_open"
        dark = "bcm_steeringwheel_heat_open.bmp"
        light = "bcm_steeringwheel_heat_open.bmp"
        compare_type = "亮图"
        compare_property.set_value(name=image_name,
                                   compare_type=compare_type,
                                   screen_shot_images_path=self.screenshot,
                                   light_template="\\".join([self.templates, light]),
                                   dark_template="\\".join([self.templates, dark]),
                                   positions=[(41, 64, 72, 71)],
                                   similarity=90.0,
                                   gray=False,
                                   gray_threshold=0)
        result = self.image_compare.compare(compare_property)
        files = self.image_compare.handle_images(compare_property, self.temp)
        return result, files, compare_property.type, compare_property.light_template, compare_property.dark_template

    def compare_steeringwheel_heat_close(self) -> tuple:
        """
        关闭方向盘加热
        """
        compare_property = CompareProperty()
        image_name = "steeringwheel_heat_close"
        dark = "bcm_steeringwheel_heat_close.bmp"
        light = "bcm_steeringwheel_heat_close.bmp"
        compare_type = "亮图"
        compare_property.set_value(name=image_name,
                                   compare_type=compare_type,
                                   screen_shot_images_path=self.screenshot,
                                   light_template="\\".join([self.templates, light]),
                                   dark_template="\\".join([self.templates, dark]),
                                   positions=[(41, 64, 72, 71)],
                                   similarity=90.0,
                                   gray=False,
                                   gray_threshold=0)
        result = self.image_compare.compare(compare_property)
        files = self.image_compare.handle_images(compare_property, self.temp)
        return result, files, compare_property.type, compare_property.light_template, compare_property.dark_template

    def compare_luggagedoor_opening(self) -> tuple:
        """
        尾门打开中
        """
        compare_property = CompareProperty()
        image_name = "luggagedoor_opening"
        dark = "bcm_luggagedoor_opening.bmp"
        light = "bcm_luggagedoor_opening.bmp"
        compare_type = "亮图"
        compare_property.set_value(name=image_name,
                                   compare_type=compare_type,
                                   screen_shot_images_path=self.screenshot,
                                   light_template="\\".join([self.templates, light]),
                                   dark_template="\\".join([self.templates, dark]),
                                   positions=[(29, 590, 136, 125)],
                                   similarity=90.0,
                                   gray=False,
                                   gray_threshold=0)
        result = self.image_compare.compare(compare_property)
        files = self.image_compare.handle_images(compare_property, self.temp)
        return result, files, compare_property.type, compare_property.light_template, compare_property.dark_template

    def compare_luggagedoor_manual(self) -> tuple:
        """
        尾门暂停中
        """
        compare_property = CompareProperty()
        image_name = "luggagedoor_manual"
        dark = "bcm_luggagedoor_manual.bmp"
        light = "bcm_luggagedoor_manual.bmp"
        compare_type = "亮图"
        compare_property.set_value(name=image_name,
                                   compare_type=compare_type,
                                   screen_shot_images_path=self.screenshot,
                                   light_template="\\".join([self.templates, light]),
                                   dark_template="\\".join([self.templates, dark]),
                                   positions=[(29, 590, 136, 125)],
                                   similarity=90.0,
                                   gray=False,
                                   gray_threshold=0)
        result = self.image_compare.compare(compare_property)
        files = self.image_compare.handle_images(compare_property, self.temp)
        return result, files, compare_property.type, compare_property.light_template, compare_property.dark_template

    def compare_luggagedoor_closing(self) -> tuple:
        """
        尾门关闭中
        """
        compare_property = CompareProperty()
        image_name = "luggagedoor_closing"
        dark = "bcm_luggagedoor_closing.bmp"
        light = "bcm_luggagedoor_closing.bmp"
        compare_type = "亮图"
        compare_property.set_value(name=image_name,
                                   compare_type=compare_type,
                                   screen_shot_images_path=self.screenshot,
                                   light_template="\\".join([self.templates, light]),
                                   dark_template="\\".join([self.templates, dark]),
                                   positions=[(29, 590, 136, 125)],
                                   similarity=90.0,
                                   gray=False,
                                   gray_threshold=0)
        result = self.image_compare.compare(compare_property)
        files = self.image_compare.handle_images(compare_property, self.temp)
        return result, files, compare_property.type, compare_property.light_template, compare_property.dark_template

    def compare_open_sober(self) -> tuple:
        """
        开启提神模式
        """
        compare_property = CompareProperty()
        image_name = "open_sober"
        dark = "ivi_sober_mode.bmp"
        light = "ivi_sober_mode.bmp"
        compare_type = "亮图"
        compare_property.set_value(name=image_name,
                                   compare_type=compare_type,
                                   screen_shot_images_path=self.screenshot,
                                   light_template="\\".join([self.templates, light]),
                                   dark_template="\\".join([self.templates, dark]),
                                   positions=[(879, 61, 124, 105)],
                                   similarity=90.0,
                                   gray=False,
                                   gray_threshold=0)
        result = self.image_compare.compare(compare_property)
        files = self.image_compare.handle_images(compare_property, self.temp)
        return result, files, compare_property.type, compare_property.light_template, compare_property.dark_template

    def compare_open_leisure(self) -> tuple:
        """
        开启休闲模式
        """
        compare_property = CompareProperty()
        image_name = "open_leisure"
        dark = "ivi_leisure_mode.bmp"
        light = "ivi_leisure_mode.bmp"
        compare_type = "亮图"
        compare_property.set_value(name=image_name,
                                   compare_type=compare_type,
                                   screen_shot_images_path=self.screenshot,
                                   light_template="\\".join([self.templates, light]),
                                   dark_template="\\".join([self.templates, dark]),
                                   positions=[(1085, 53, 115, 108)],
                                   similarity=90.0,
                                   gray=False,
                                   gray_threshold=0)
        result = self.image_compare.compare(compare_property)
        files = self.image_compare.handle_images(compare_property, self.temp)
        return result, files, compare_property.type, compare_property.light_template, compare_property.dark_template
