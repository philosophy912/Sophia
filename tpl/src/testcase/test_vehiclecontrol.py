# -------------------------------------------------------------------------------
# Name:        test_vehiclecontrol.py
# Purpose:     The file is automatically generated by tools.
# Author:      CD QA Team
# Created:     2020-10-12 18:15
# -------------------------------------------------------------------------------
import allure
import pytest
from time import sleep
from src.codes.context import *


########################################################################################################################
#                                                                                                                      #
#                                                    创建Suite                                                          #
#                                                                                                                      #
########################################################################################################################
@pytest.fixture(scope="class", autouse=True)
@allure.suite("创建vehicleControl测试套件")
def suite():
    with allure.step("打开CAN盒子"):
        open_device()
        sleep(10)
    yield suite
    with allure.step("关闭CAN盒子"):
        close_device()


########################################################################################################################
#                                                                                                                      #
#                                                    创建Function                                                       #
#                                                                                                                      #
########################################################################################################################
@pytest.fixture(scope="function", autouse=True)
def function():
    with allure.step("无"):
        pass
    yield
    with allure.step("无"):
        pass


########################################################################################################################
#                                                                                                                      #
#                                                    创建测试用例                                                        #
#                                                                                                                      #
########################################################################################################################
@allure.feature("module")
@pytest.mark.usefixtures("suite")
class TestVehicleControl(object):

    @pytest.mark.usefixtures("function")
    @allure.title("ESP_OFF灯开")
    def test_esp_off_yellowlight_open_ign(self):
        """
        Description:
            ESP_OFF灯开
        PreCondition:
            1.电源状态：IGN
            2.设置ESP_OFF状态为：
            ESP_OFFLamp=0x0
        Steps:
            1.设置设置ESP_OFF状态为：ESP_OFFLamp=0x1
        Expect Result:
            1.ESP_OFF指示灯（黄色）亮
        """
        # 前置条件
        with allure.step("前置条件"):
            power_ign()
            esp_offlamp_close()
        # 执行步骤
        with allure.step('操作步骤'):
            esp_offlamp_open()
            esp_off_yellowlight_open_ign()
        # 期望结果
        with allure.step('期望结果'):
            compare(compare_esp_off_yellowlight_open_ign())

    @pytest.mark.usefixtures("function")
    @allure.title("ESP_OFF灯关")
    def test_esp_off_yellowlight_close_ign(self):
        """
        Description:
            ESP_OFF灯关
        PreCondition:
            1.电源状态：IGN
            2.设置ESP_OFF状态为：
            ESP_OFFLamp=0x1
        Steps:
            1.设置设置ESP_OFF状态为：ESP_OFFLamp=0x0
        Expect Result:
            1.ESP_OFF指示灯(黄色)暗
        """
        # 前置条件
        with allure.step("前置条件"):
            power_ign()
            esp_offlamp_open()
        # 执行步骤
        with allure.step('操作步骤'):
            esp_offlamp_close()
            esp_off_yellowlight_close_ign()
        # 期望结果
        with allure.step('期望结果'):
            compare(compare_esp_off_yellowlight_close_ign())

    @pytest.mark.usefixtures("function")
    @allure.title("EBD故障灯开")
    def test_esp_ebd_err_redlight_open_ign(self):
        """
        Description:
            EBD故障灯开
        PreCondition:
            1.电源状态：IGN
            2.设置警告灯信号为无请求：ESP_HMI_WarnOn=0x0
            3.设置EBD错误信号为无错误：ESP_EBD_Err=0x0
        Steps:
            1.设置EBD错误信号为错误：ESP_EBD_Err=0x1
        Expect Result:
            1.EBD故障指示灯显示红色
        """
        # 前置条件
        with allure.step("前置条件"):
            power_ign()
            esp_hmi_warnon_no_request()
            esp_ebd_err_light_close()
        # 执行步骤
        with allure.step('操作步骤'):
            esp_ebd_err_light_open()
            esp_ebd_err_redlight_open_ign()
        # 期望结果
        with allure.step('期望结果'):
            compare(compare_esp_ebd_err_redlight_open_ign())

    @pytest.mark.usefixtures("function")
    @allure.title("EBD故障灯关")
    def test_esp_ebd_err_redlight_close_ign(self):
        """
        Description:
            EBD故障灯关
        PreCondition:
            1.电源状态：IGN
            2.设置警告灯信号为无请求：ESP_HMI_WarnOn=0x0
            3.设置EBD错误信号为错误：ESP_EBD_Err=0x1
        Steps:
            1.设置EBD错误信号为无错误：ESP_EBD_Err=0x0
        Expect Result:
            1.EBD故障指示灯不显示
        """
        # 前置条件
        with allure.step("前置条件"):
            power_ign()
            esp_hmi_warnon_no_request()
            esp_ebd_err_light_open()
        # 执行步骤
        with allure.step('操作步骤'):
            esp_ebd_err_light_close()
            esp_ebd_err_redlight_close_ign()
        # 期望结果
        with allure.step('期望结果'):
            compare(compare_esp_ebd_err_redlight_close_ign())
