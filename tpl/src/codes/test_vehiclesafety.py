# -------------------------------------------------------------------------------
# Name:        test_vehiclesafety.py
# Purpose:     The file is automatically generated by tools.
# Author:      CD QA Team
# Created:     2020-10-13 14:15
# -------------------------------------------------------------------------------
import pytest
from time import sleep
from src.codes.context import *


########################################################################################################################
#                                                                                                                      #
#                                                    创建Suite                                                          #
#                                           s                                                                           #
########################################################################################################################
@pytest.fixture(scope="class", autouse=True)
@allure.suite("创建vehicleSafety测试套件")
def suite():
    with allure.step("打开CAN盒子"):
        open_device()
        sleep(10)
    yield suite
    with allure.step("关闭CAN盒子"):
        close_device()


########################################################################################################################
#                                                                                                                      #
#                                                    创建Function                                                       #
#                                                                                                                      #
########################################################################################################################
@pytest.fixture(scope="function", autouse=True)
def function():
    with allure.step("无"):
        pass
    yield
    with allure.step("无"):
        pass


########################################################################################################################
#                                                                                                                      #
#                                                    创建测试用例                                                        #
#                                                                                                                      #
########################################################################################################################
@allure.feature("module")
@pytest.mark.usefixtures("suite")
class TestVehicleSafety(object):

    @pytest.mark.usefixtures("function")
    @allure.title("ACC_胎压报警系统故障，胎压报警灯亮")
    def test_tpmssystem_statusabnormal_pwracc(self):
        """
        Description:
            ACC_胎压报警系统故障，胎压报警灯亮
        PreCondition:
            1.电源状态：ACC
            2.所有指示灯均熄灭
            3.胎压系统状态正常：iBCM_TPMS_SysSts=0x0
            4.轮胎压力状态正常：
            iBCM_RR_TirePSts=0x0
            iBCM_RL_TirePSts=0x0
            iBCM_FR_TirePSts=0x0
            iBCM_FL_TirePSts=0x0
            5.轮胎温度状态正常：
            iBCM_RR_TireTmpSts=0x0
            iBCM_RL_TireTmpSts=0x0
            iBCM_FR_TireTmpSts=0x0
            iBCM_FL_TireTmpSts=0x0
        Steps:
            1.设置胎压系统状态为异常：iBCM_TPMS_SysSts=0x1
        Expect Result:
            1.胎压报警灯亮
        """
        # 前置条件
        with allure.step("前置条件"):
            power_acc()
            tpmssystem_status_normal()
            ibcm_rr_tirepsts_normal()
            ibcm_rl_tirepsts_normal()
            ibcm_fr_tirepsts_normal()
            ibcm_fl_tirepsts_normal()
            ibcm_rr_tiretmpsts_normal()
            ibcm_rl_tiretmpsts_normal()
            ibcm_fr_tiretmpsts_normal()
            ibcm_fl_tiretmpsts_normal()
        # 执行步骤
        with allure.step('操作步骤'):
            tpmssystem_status_abnormal()
            tpmssystem_statusabnormal_pwracc()
        # 期望结果
        with allure.step('期望结果'):
            compare(compare_tpmssystem_statusabnormal_pwracc())

    @pytest.mark.usefixtures("function")
    @allure.title("ACC_胎压报警系统正常，胎压报警灯关")
    def test_tpmssystem_statusnormal_pwracc(self):
        """
        Description:
            ACC_胎压报警系统正常，胎压报警灯关
        PreCondition:
            1.电源状态：ACC
            2.所有指示灯均熄灭
            3.胎压系统状态异常：iBCM_TPMS_SysSts=0x0
            4.轮胎压力状态正常：
            iBCM_RR_TirePSts=0x0
            iBCM_RL_TirePSts=0x0
            iBCM_FR_TirePSts=0x0
            iBCM_FL_TirePSts=0x0
            5.轮胎温度状态正常：
            iBCM_RR_TireTmpSts=0x0
            iBCM_RL_TireTmpSts=0x0
            iBCM_FR_TireTmpSts=0x0
            iBCM_FL_TireTmpSts=0x0
        Steps:
            1.设置胎压系统状态为正常：iBCM_TPMS_SysSts=0x0
        Expect Result:
            1.胎压报警灯灭
        """
        # 前置条件
        with allure.step("前置条件"):
            power_acc()
            tpmssystem_status_abnormal()
            ibcm_rr_tirepsts_normal()
            ibcm_rl_tirepsts_normal()
            ibcm_fr_tirepsts_normal()
            ibcm_fl_tirepsts_normal()
            ibcm_rr_tiretmpsts_normal()
            ibcm_rl_tiretmpsts_normal()
            ibcm_fr_tiretmpsts_normal()
            ibcm_fl_tiretmpsts_normal()
        # 执行步骤
        with allure.step('操作步骤'):
            tpmssystem_status_normal()
            tpmssystem_statusnormal_pwracc()
        # 期望结果
        with allure.step('期望结果'):
            compare(compare_tpmssystem_statusnormal_pwracc())

    @pytest.mark.usefixtures("function")
    @allure.title("ACC_右前轮过压，胎压报警灯开")
    def test_tire_right_frontpressure_pwracc(self):
        """
        Description:
            ACC_右前轮过压，胎压报警灯开
        PreCondition:
            1.电源状态：ACC
            2.所有指示灯均熄灭
            3.胎压系统状态正常：iBCM_TPMS_SysSts=0x0
            4.轮胎压力状态正常：
            iBCM_RR_TirePSts=0x0
            iBCM_RL_TirePSts=0x0
            iBCM_FR_TirePSts=0x0
            iBCM_FL_TirePSts=0x0
            5.轮胎温度状态正常：
            iBCM_RR_TireTmpSts=0x0
            iBCM_RL_TireTmpSts=0x0
            iBCM_FR_TireTmpSts=0x0
            iBCM_FL_TireTmpSts=0x0
        Steps:
            1.设置右前轮胎胎压状态为高压异常：iBCM_FR_TirePSts=0x1
        Expect Result:
            1.右前轮胎过压，胎压报警灯亮
        """
        # 前置条件
        with allure.step("前置条件"):
            power_acc()
            tpmssystem_status_normal()
            ibcm_rr_tirepsts_normal()
            ibcm_rl_tirepsts_normal()
            ibcm_fr_tirepsts_normal()
            ibcm_fl_tirepsts_normal()
            ibcm_rr_tiretmpsts_normal()
            ibcm_rl_tiretmpsts_normal()
            ibcm_fr_tiretmpsts_normal()
            ibcm_fl_tiretmpsts_normal()
        # 执行步骤
        with allure.step('操作步骤'):
            ibcm_fr_tirepsts_overpressure()
            tire_right_frontpressure_pwracc()
        # 期望结果
        with allure.step('期望结果'):
            compare(compare_tire_right_frontpressure_pwracc())

    @pytest.mark.usefixtures("function")
    @allure.title("ACC_左前轮欠压，胎压报警灯开")
    def test_tire_left_frontpressure_pwracc(self):
        """
        Description:
            ACC_左前轮欠压，胎压报警灯开
        PreCondition:
            1.电源状态：ACC
            2.所有指示灯均熄灭
            3.胎压系统状态正常：iBCM_TPMS_SysSts=0x0
            4.轮胎压力状态正常：
            iBCM_RR_TirePSts=0x0
            iBCM_RL_TirePSts=0x0
            iBCM_FR_TirePSts=0x0
            iBCM_FL_TirePSts=0x0
            5.轮胎温度状态正常：
            iBCM_RR_TireTmpSts=0x0
            iBCM_RL_TireTmpSts=0x0
            iBCM_FR_TireTmpSts=0x0
            iBCM_FL_TireTmpSts=0x0
        Steps:
            1.设置左前轮胎胎压状态为低压异常：iBCM_FL_TirePSts=0x2
        Expect Result:
            1.左前轮胎欠压，胎压报警灯亮
        """
        # 前置条件
        with allure.step("前置条件"):
            power_acc()
            tpmssystem_status_normal()
            ibcm_rr_tirepsts_normal()
            ibcm_rl_tirepsts_normal()
            ibcm_fr_tirepsts_normal()
            ibcm_fl_tirepsts_normal()
            ibcm_rr_tiretmpsts_normal()
            ibcm_rl_tiretmpsts_normal()
            ibcm_fr_tiretmpsts_normal()
            ibcm_fl_tiretmpsts_normal()
        # 执行步骤
        with allure.step('操作步骤'):
            ibcm_fl_tirepsts_lowpressure()
            tire_left_frontpressure_pwracc()
        # 期望结果
        with allure.step('期望结果'):
            compare(compare_tire_left_frontpressure_pwracc())

    @pytest.mark.usefixtures("function")
    @allure.title("ACC_右前轮胎过温，胎压报警灯开")
    def test_tire_right_fronttemperature_pwracc(self):
        """
        Description:
            ACC_右前轮胎过温，胎压报警灯开
        PreCondition:
            1.电源状态：ACC
            2.所有指示灯均熄灭
            3.胎压系统状态正常：iBCM_TPMS_SysSts=0x0
            4.轮胎压力状态正常：
            iBCM_RR_TirePSts=0x0
            iBCM_RL_TirePSts=0x0
            iBCM_FR_TirePSts=0x0
            iBCM_FL_TirePSts=0x0
            5.轮胎温度状态正常：
            iBCM_RR_TireTmpSts=0x0
            iBCM_RL_TireTmpSts=0x0
            iBCM_FR_TireTmpSts=0x0
            iBCM_FL_TireTmpSts=0x0
        Steps:
            1.设置右前轮胎胎温状态为温度过高：iBCM_FR_TireTmpSts=0x1
        Expect Result:
            1.右前轮胎过温，胎压报警灯亮
        """
        # 前置条件
        with allure.step("前置条件"):
            power_acc()
            tpmssystem_status_normal()
            ibcm_rr_tirepsts_normal()
            ibcm_rl_tirepsts_normal()
            ibcm_fr_tirepsts_normal()
            ibcm_fl_tirepsts_normal()
            ibcm_rr_tiretmpsts_normal()
            ibcm_rl_tiretmpsts_normal()
            ibcm_fr_tiretmpsts_normal()
            ibcm_fl_tiretmpsts_normal()
        # 执行步骤
        with allure.step('操作步骤'):
            ibcm_fr_tiretmpsts_overtemp()
            tire_right_fronttemperature_pwracc()
        # 期望结果
        with allure.step('期望结果'):
            compare(compare_tire_right_fronttemperature_pwracc())

    @pytest.mark.usefixtures("function")
    @allure.title("安全气囊灯开")
    def test_airbag_light_open_pwrign(self):
        """
        Description:
            安全气囊灯开
        PreCondition:
            1.电源状态：IGN
            2.安全气囊状态：ACU_SWL_Ind=0x1
        Steps:
            1.设置安全气囊信号亮：ACU_SWL_Ind=0x0
        Expect Result:
            1.安全气囊灯亮
        """
        # 前置条件
        with allure.step("前置条件"):
            power_ign()
            air_bag_dark()
        # 执行步骤
        with allure.step('操作步骤'):
            air_bag_light()
            airbag_light_open_pwrign()
        # 期望结果
        with allure.step('期望结果'):
            compare(compare_airbag_light_open_pwrign())

    @pytest.mark.usefixtures("function")
    @allure.title("安全气囊灯闪烁")
    def test_airbag_light_blink_pwrign(self):
        """
        Description:
            安全气囊灯闪烁
        PreCondition:
            1.电源状态：IGN
            2.安全气囊状态：ACU_SWL_Ind=0x1
        Steps:
            1.设置安全气囊信号闪烁：ACU_SWL_Ind=0x2
        Expect Result:
            1.安全气囊灯闪烁
        """
        # 前置条件
        with allure.step("前置条件"):
            power_ign()
            air_bag_dark()
        # 执行步骤
        with allure.step('操作步骤'):
            air_bag_blink()
            airbag_light_blink_pwrign()
        # 期望结果
        with allure.step('期望结果'):
            compare(compare_airbag_light_blink_pwrign())

    @pytest.mark.usefixtures("function")
    @allure.title("安全气囊灯关")
    def test_airbag_light_close_pwrign(self):
        """
        Description:
            安全气囊灯关
        PreCondition:
            1.电源状态：IGN
            2.安全气囊状态：ACU_SWL_Ind=0x0
        Steps:
            1.设置安全气囊信号灭：ACU_SWL_Ind=0x1
        Expect Result:
            1.安全气囊灯灭
        """
        # 前置条件
        with allure.step("前置条件"):
            power_ign()
            air_bag_light()
        # 执行步骤
        with allure.step('操作步骤'):
            air_bag_dark()
            airbag_light_close_pwrign()
        # 期望结果
        with allure.step('期望结果'):
            compare(compare_airbag_light_close_pwrign())

    @pytest.mark.usefixtures("function")
    @allure.title("前排安全带未系")
    def test_frontbelt_out_ign_pwrign(self):
        """
        Description:
            前排安全带未系
        PreCondition:
            1.电源状态：IGN
            2.前排安全带已插入
        Steps:
            1.前排安全带都未插：
            ACU_DrvrBkl_Sts=0x0 
            ACU_PassBkl_Sts=0x0
        Expect Result:
            1.显示前排安全带未系报警图标
        """
        # 前置条件
        with allure.step("前置条件"):
            power_ign()
            acu_frontbelt_in()
        # 执行步骤
        with allure.step('操作步骤'):
            acu_frontbelt_out()
            frontbelt_out_ign_pwrign()
        # 期望结果
        with allure.step('期望结果'):
            compare(compare_frontbelt_out_ign_pwrign())

    @pytest.mark.usefixtures("function")
    @allure.title("副驾安全带未系")
    def test_leftfrontbelt_out_pwrign(self):
        """
        Description:
            副驾安全带未系
        PreCondition:
            1.电源状态：IGN
            2.前排安全带已插入
        Steps:
            1.前排安全带都未插：
            ACU_DrvrBkl_Sts=0x1 
            ACU_PassBkl_Sts=0x0
        Expect Result:
            1.显示前排安全带未系报警图标
        """
        # 前置条件
        with allure.step("前置条件"):
            power_ign()
            acu_frontbelt_in()
        # 执行步骤
        with allure.step('操作步骤'):
            acu_frontbelt_out1()
            leftfrontbelt_out_pwrign()
        # 期望结果
        with allure.step('期望结果'):
            compare(compare_leftfrontbelt_out_pwrign())

    @pytest.mark.usefixtures("function")
    @allure.title("主驾安全带未系")
    def test_rightfrontbelt_out_pwrign(self):
        """
        Description:
            主驾安全带未系
        PreCondition:
            1.电源状态：IGN
            2.前排安全带已插入
        Steps:
            1.前排安全带都未插：
            ACU_DrvrBkl_Sts=0x0 
            ACU_PassBkl_Sts=0x1
        Expect Result:
            1.显示前排安全带未系报警图标
        """
        # 前置条件
        with allure.step("前置条件"):
            power_ign()
            acu_frontbelt_in()
        # 执行步骤
        with allure.step('操作步骤'):
            acu_frontbelt_out2()
            rightfrontbelt_out_pwrign()
        # 期望结果
        with allure.step('期望结果'):
            compare(compare_rightfrontbelt_out_pwrign())

    @pytest.mark.usefixtures("function")
    @allure.title("前排安全带已系")
    def test_frontbelt_in_ign_pwrign(self):
        """
        Description:
            前排安全带已系
        PreCondition:
            1.电源状态：IGN
            2.前排安全带未插入
        Steps:
            1.前排安全带都插入：
            ACU_DrvrBkl_Sts=0x1 
            ACU_PassBkl_Sts=0x1
        Expect Result:
            1.隐藏前排安全带未系报警图标
        """
        # 前置条件
        with allure.step("前置条件"):
            power_ign()
            acu_frontbelt_out()
        # 执行步骤
        with allure.step('操作步骤'):
            acu_frontbelt_in()
            frontbelt_in_ign_pwrign()
        # 期望结果
        with allure.step('期望结果'):
            compare(compare_frontbelt_in_ign_pwrign())

    @pytest.mark.usefixtures("function")
    @allure.title("左后排安全带已系")
    def test_leftrearbelt_in_pwrign(self):
        """
        Description:
            左后排安全带已系
        PreCondition:
            1.电源状态：IGN
            2.后排安全带未插入
        Steps:
            1.左后排安全带插入：
            ACU_ReDrvrBkl_Sts=0x1
        Expect Result:
            1.显示后排安全带图标（左：绿，中：白色，右：白色）
        """
        # 前置条件
        with allure.step("前置条件"):
            power_ign()
            acu_rearbelt_out()
        # 执行步骤
        with allure.step('操作步骤'):
            acu_ctrrightrearbelt_out1()
            leftrearbelt_in_pwrign()
        # 期望结果
        with allure.step('期望结果'):
            compare(compare_leftrearbelt_in_pwrign())

    @pytest.mark.usefixtures("function")
    @allure.title("左中后排安全带已系")
    def test_leftctrrearbelt_in_pwrign(self):
        """
        Description:
            左中后排安全带已系
        PreCondition:
            1.电源状态：IGN
            2.左后排安全带已插入
        Steps:
            1.左中后排安全带插入：
            ACU_ReDrvrBkl_Sts=0x1
            ACU_ReCtrBkl_Sts=0x1
        Expect Result:
            1.显示后排安全带图标（左：绿，中：绿，右：白色）
        """
        # 前置条件
        with allure.step("前置条件"):
            power_ign()
            acu_ctrrightrearbelt_out1()
        # 执行步骤
        with allure.step('操作步骤'):
            acu_rightrearbelt_out2()
            leftctrrearbelt_in_pwrign()
        # 期望结果
        with allure.step('期望结果'):
            compare(compare_leftctrrearbelt_in_pwrign())

    @pytest.mark.usefixtures("function")
    @allure.title("后排安全带已系")
    def test_leftctrrightrearbelt_in_pwrign(self):
        """
        Description:
            后排安全带已系
        PreCondition:
            1.电源状态：IGN
            2.左中后排安全带已插入
        Steps:
            1.左中后排安全带插入：
            ACU_ReDrvrBkl_Sts=0x1
            ACU_ReCtrBkl_Sts=0x1
            ACU_RePassBkl_Sts=0x1
        Expect Result:
            1.显示后排安全带图标（左：绿，中：绿，右：绿）
        """
        # 前置条件
        with allure.step("前置条件"):
            power_ign()
            acu_rightrearbelt_out2()
        # 执行步骤
        with allure.step('操作步骤'):
            acu_leftctrrightrearbelt_in()
            leftctrrightrearbelt_in_pwrign()
        # 期望结果
        with allure.step('期望结果'):
            compare(compare_leftctrrightrearbelt_in_pwrign())

    @pytest.mark.usefixtures("function")
    @allure.title("左后排安全带未系")
    def test_leftrearbelt_out_pwrign(self):
        """
        Description:
            左后排安全带未系
        PreCondition:
            1.电源状态：IGN
            2.后排安全带都已插入
        Steps:
            1.左后排安全带拔出：
            ACU_ReDrvrBkl_Sts=0x0
        Expect Result:
            1.显示后排安全带图标（左：红，中：绿，右：绿）
        """
        # 前置条件
        with allure.step("前置条件"):
            power_ign()
            acu_leftctrrightrearbelt_in()
        # 执行步骤
        with allure.step('操作步骤'):
            acu_leftrearbelt_out3()
            leftrearbelt_out_pwrign()
        # 期望结果
        with allure.step('期望结果'):
            compare(compare_leftrearbelt_out_pwrign())

    @pytest.mark.usefixtures("function")
    @allure.title("左中后排安全带未系")
    def test_leftctrrearbelt_out_pwrign(self):
        """
        Description:
            左中后排安全带未系
        PreCondition:
            1.电源状态：IGN
            2.后排安全带都已插入
        Steps:
            1.左中后排安全带拔出：
            ACU_ReDrvrBkl_Sts=0x0
            ACU_ReCtrBkl_Sts=0x0
        Expect Result:
            1.显示后排安全带图标（左：红，中：红，右：绿）
        """
        # 前置条件
        with allure.step("前置条件"):
            power_ign()
            acu_leftctrrightrearbelt_in()
        # 执行步骤
        with allure.step('操作步骤'):
            acu_leftctrrearbelt_out4()
            leftctrrearbelt_out_pwrign()
        # 期望结果
        with allure.step('期望结果'):
            compare(compare_leftctrrearbelt_out_pwrign())

    @pytest.mark.usefixtures("function")
    @allure.title("后排安全带未系")
    def test_rearbelt_out_pwrign(self):
        """
        Description:
            后排安全带未系
        PreCondition:
            1.电源状态：IGN
            2.后排安全带都已插入
        Steps:
            1.左中右后排安全带拔出：
            ACU_ReDrvrBkl_Sts=0x0
            ACU_ReCtrBkl_Sts=0x0
            ACU_RePassBkl_Sts=0x0
        Expect Result:
            1.显示后排安全带图标（左：红，中：红，右：红）
        """
        # 前置条件
        with allure.step("前置条件"):
            power_ign()
            acu_leftctrrightrearbelt_in()
        # 执行步骤
        with allure.step('操作步骤'):
            acu_rearbelt_out()
            rearbelt_out_pwrign()
        # 期望结果
        with allure.step('期望结果'):
            compare(compare_rearbelt_out_pwrign())

    @pytest.mark.usefixtures("function")
    @allure.title("后中排安全带未系")
    def test_ctrrearbelt_out_pwrign(self):
        """
        Description:
            后中排安全带未系
        PreCondition:
            1.电源状态：IGN
            2.后排安全带都已插入
        Steps:
            1.中后排安全带拔出：
            ACU_ReCtrBkl_Sts=0x0
        Expect Result:
            1.显示后排安全带图标（左：绿，中：红，右：绿）
        """
        # 前置条件
        with allure.step("前置条件"):
            power_ign()
            acu_leftctrrightrearbelt_in()
        # 执行步骤
        with allure.step('操作步骤'):
            acu_ctrrearbelt_out5()
            ctrrearbelt_out_pwrign()
        # 期望结果
        with allure.step('期望结果'):
            compare(compare_ctrrearbelt_out_pwrign())

    @pytest.mark.usefixtures("function")
    @allure.title("后中排安全带已系")
    def test_leftrightrearbelt_out_pwrign(self):
        """
        Description:
            后中排安全带已系
        PreCondition:
            1.电源状态：IGN
            2.后排安全带都已插入
        Steps:
            1.左右后排安全带拔出：
            ACU_ReDrvrBkl_Sts=0x0
            ACU_RePassBkl_Sts=0x0
        Expect Result:
            1.显示后排安全带图标（左：红，中：绿，右：红）
        """
        # 前置条件
        with allure.step("前置条件"):
            power_ign()
            acu_leftctrrightrearbelt_in()
        # 执行步骤
        with allure.step('操作步骤'):
            acu_leftrightrearbelt_out6()
            leftrightrearbelt_out_pwrign()
        # 期望结果
        with allure.step('期望结果'):
            compare(compare_leftrightrearbelt_out_pwrign())

    @pytest.mark.usefixtures("function")
    @allure.title("后中右排安全带未系")
    def test_ctrrightrearbelt_out_pwrign(self):
        """
        Description:
            后中右排安全带未系
        PreCondition:
            1.电源状态：IGN
            2.后排安全带都已插入
        Steps:
            1.中右后排安全带拔出：
            ACU_ReCtrBkl_Sts=0x0
            ACU_RePassBkl_Sts=0x0
        Expect Result:
            1.显示后排安全带图标（左：绿，中：红，右：红）
        """
        # 前置条件
        with allure.step("前置条件"):
            power_ign()
            acu_leftctrrightrearbelt_in()
        # 执行步骤
        with allure.step('操作步骤'):
            acu_ctrrightrearbelt_out1()
            ctrrightrearbelt_out_pwrign()
        # 期望结果
        with allure.step('期望结果'):
            compare(compare_ctrrightrearbelt_out_pwrign())

    @pytest.mark.usefixtures("function")
    @allure.title("后右排安全带未系")
    def test_rightrearbelt_out_pwrign(self):
        """
        Description:
            后右排安全带未系
        PreCondition:
            1.电源状态：IGN
            2.后排安全带都已插入
        Steps:
            1.右后排安全带拔出：
            ACU_RePassBkl_Sts=0x0
        Expect Result:
            1.显示后排安全带图标（左：绿，中：绿，右：红）
        """
        # 前置条件
        with allure.step("前置条件"):
            power_ign()
            acu_leftctrrightrearbelt_in()
        # 执行步骤
        with allure.step('操作步骤'):
            acu_rightrearbelt_out2()
            rightrearbelt_out_pwrign()
        # 期望结果
        with allure.step('期望结果'):
            compare(compare_rightrearbelt_out_pwrign())

    @pytest.mark.usefixtures("function")
    @allure.title("后排安全带未系，等待32秒图标消失")
    def test_rearbelt_pwrign(self):
        """
        Description:
            后排安全带未系，等待32秒图标消失
        PreCondition:
            1.电源状态：IGN
            2.后排安全带未插入
        Steps:
            1.左中后排安全带插入：
            ACU_ReDrvrBkl_Sts=0x1
            ACU_ReCtrBkl_Sts=0x1
            ACU_RePassBkl_Sts=0x1
            2.等待32s
        Expect Result:
            1.隐藏后排安全带图标
        """
        # 前置条件
        with allure.step("前置条件"):
            power_ign()
            acu_rearbelt_out()
        # 执行步骤
        with allure.step('操作步骤'):
            acu_leftctrrightrearbelt_in()
            sleep(32)
            rearbelt_pwrign()
        # 期望结果
        with allure.step('期望结果'):
            compare(compare_rearbelt_pwrign())

    @pytest.mark.usefixtures("function")
    @allure.title("后中排安全带已系，等待32秒图标消失")
    def test_rearbelt_pwrign1(self):
        """
        Description:
            后中排安全带已系，等待32秒图标消失
        PreCondition:
            1.电源状态：IGN
            2.后排安全带都已插入
        Steps:
            1.左右后排安全带拔出：
            ACU_ReDrvrBkl_Sts=0x0
            ACU_RePassBkl_Sts=0x0
            2.等待32s
        Expect Result:
            1.隐藏后排安全带图标
        """
        # 前置条件
        with allure.step("前置条件"):
            power_ign()
            acu_leftctrrightrearbelt_in()
        # 执行步骤
        with allure.step('操作步骤'):
            acu_leftrightrearbelt_out6()
            sleep(32)
            rearbelt_pwrign1()
        # 期望结果
        with allure.step('期望结果'):
            compare(compare_rearbelt_pwrign1())
